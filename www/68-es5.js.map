{"version":3,"sources":["./node_modules/@ionic/core/dist/esm-es5/ion-split-pane-md.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA6H;AAC/F;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2DAAW;AAC9C;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+CAA+C;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2DAAU;AAC7B,gBAAgB,2DAAC,CAAC,mDAAI,GAAG,gBAAgB;AACzC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,0BAA0B,QAAQ,2DAAU,OAAO,EAAE;AACrD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,0BAA0B,wBAAwB,OAAO,QAAQ,MAAM,SAAS,oBAAoB,aAAa,kBAAkB,uBAAuB,mBAAmB,qBAAqB,iBAAiB,eAAe,0EAA0E,OAAO,QAAQ,MAAM,SAAS,kBAAkB,WAAW,OAAO,kCAAkC,0BAA0B,UAAU,6GAA6G,oBAAoB,aAAa,oBAAoB,cAAc,+BAA+B,aAAa,qCAAqC,kBAAkB,SAAS,+CAA+C,iBAAiB,QAAQ,eAAe,mHAAmH,mDAAmD,gBAAgB,cAAc,2BAA2B,cAAc,6DAA6D,gBAAgB,cAAc,eAAe,0BAA0B,EAAE,EAAE;AAC5pC;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuC","file":"68-es5.js","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode, h, e as getElement, H as Host } from './core-c02a05e9.js';\r\nimport './config-503c2549.js';\r\nvar SPLIT_PANE_MAIN = 'split-pane-main';\r\nvar SPLIT_PANE_SIDE = 'split-pane-side';\r\nvar QUERY = {\r\n    'xs': '(min-width: 0px)',\r\n    'sm': '(min-width: 576px)',\r\n    'md': '(min-width: 768px)',\r\n    'lg': '(min-width: 992px)',\r\n    'xl': '(min-width: 1200px)',\r\n    'never': ''\r\n};\r\nvar SplitPane = /** @class */ (function () {\r\n    function class_1(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.visible = false;\r\n        /**\r\n         * If `true`, the split pane will be hidden.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * When the split-pane should be shown.\r\n         * Can be a CSS media query expression, or a shortcut expression.\r\n         * Can also be a boolean expression.\r\n         */\r\n        this.when = QUERY['lg'];\r\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\r\n    }\r\n    class_1.prototype.visibleChanged = function (visible) {\r\n        var detail = { visible: visible, isPane: this.isPane.bind(this) };\r\n        this.ionSplitPaneVisible.emit(detail);\r\n    };\r\n    class_1.prototype.connectedCallback = function () {\r\n        this.styleChildren();\r\n        this.updateState();\r\n    };\r\n    class_1.prototype.disconnectedCallback = function () {\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n    };\r\n    class_1.prototype.updateState = function () {\r\n        var _this = this;\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n        // Check if the split-pane is disabled\r\n        if (this.disabled) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        // When query is a boolean\r\n        var query = this.when;\r\n        if (typeof query === 'boolean') {\r\n            this.visible = query;\r\n            return;\r\n        }\r\n        // When query is a string, let's find first if it is a shortcut\r\n        var mediaQuery = QUERY[query] || query;\r\n        // Media query is empty or null, we hide it\r\n        if (mediaQuery.length === 0) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        if (window.matchMedia) {\r\n            // Listen on media query\r\n            var callback_1 = function (q) {\r\n                _this.visible = q.matches;\r\n            };\r\n            var mediaList_1 = window.matchMedia(mediaQuery);\r\n            mediaList_1.addListener(callback_1);\r\n            this.rmL = function () { return mediaList_1.removeListener(callback_1); };\r\n            this.visible = mediaList_1.matches;\r\n        }\r\n    };\r\n    class_1.prototype.isPane = function (element) {\r\n        if (!this.visible) {\r\n            return false;\r\n        }\r\n        return element.parentElement === this.el\r\n            && element.classList.contains(SPLIT_PANE_SIDE);\r\n    };\r\n    class_1.prototype.styleChildren = function () {\r\n        var contentId = this.contentId;\r\n        var children = this.el.children;\r\n        var nu = this.el.childElementCount;\r\n        var foundMain = false;\r\n        for (var i = 0; i < nu; i++) {\r\n            var child = children[i];\r\n            var isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\r\n            if (isMain) {\r\n                if (foundMain) {\r\n                    console.warn('split pane cannot have more than one main node');\r\n                    return;\r\n                }\r\n                foundMain = true;\r\n            }\r\n            setPaneClass(child, isMain);\r\n        }\r\n        if (!foundMain) {\r\n            console.warn('split pane does not have a specified main node');\r\n        }\r\n    };\r\n    class_1.prototype.render = function () {\r\n        var _a;\r\n        var mode = getIonMode(this);\r\n        return (h(Host, { class: (_a = {},\r\n                _a[mode] = true,\r\n                // Used internally for styling\r\n                _a[\"split-pane-\" + mode] = true,\r\n                _a['split-pane-visible'] = this.visible,\r\n                _a) }));\r\n    };\r\n    Object.defineProperty(class_1.prototype, \"el\", {\r\n        get: function () { return getElement(this); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(class_1, \"watchers\", {\r\n        get: function () {\r\n            return {\r\n                \"visible\": [\"visibleChanged\"],\r\n                \"disabled\": [\"updateState\"],\r\n                \"when\": [\"updateState\"]\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(class_1, \"style\", {\r\n        get: function () { return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-md{--border:1px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-150,rgba(0,0,0,0.13))))}.split-pane-md.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-md.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return class_1;\r\n}());\r\nvar setPaneClass = function (el, isMain) {\r\n    var toAdd;\r\n    var toRemove;\r\n    if (isMain) {\r\n        toAdd = SPLIT_PANE_MAIN;\r\n        toRemove = SPLIT_PANE_SIDE;\r\n    }\r\n    else {\r\n        toAdd = SPLIT_PANE_SIDE;\r\n        toRemove = SPLIT_PANE_MAIN;\r\n    }\r\n    var classList = el.classList;\r\n    classList.add(toAdd);\r\n    classList.remove(toRemove);\r\n};\r\nexport { SplitPane as ion_split_pane };\r\n"],"sourceRoot":""}