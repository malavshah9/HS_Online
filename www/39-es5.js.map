{"version":3,"sources":["./node_modules/@ionic/core/dist/esm-es5/ion-menu_4-ios.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAY,SAAI;AACiB;AAC4F;AAC1E;AAClB;AACwB;AACC;AACI;AACM;AACkB;AACtF;AACA;AACA,QAAQ,2DAAgB;AACxB;AACA,uBAAuB,qEAAkB,gBAAgB,sBAAsB;AAC/E,oBAAoB,2DAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2DAAW;AACtC,4BAA4B,2DAAW;AACvC,0BAA0B,2DAAW;AACrC,2BAA2B,2DAAW;AACtC,6BAA6B,2DAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB,8DAAS;AAClC;AACA;AACA;AACA;AACA;AACA,eAAe,+CAAiB;AAChC;AACA;AACA,mBAAmB,iDAAmB;AACtC;AACA;AACA;AACA,wCAAwC,qDAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAc;AACtC;AACA,6CAA6C,6JAA6B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,2BAA2B,EAAE;AAClF,sDAAsD,4BAA4B,EAAE;AACpF,kDAAkD,wBAAwB,EAAE;AAC5E,mDAAmD,yBAAyB,EAAE;AAC9E,kDAAkD,wBAAwB,EAAE;AAC5E,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,+CAAiB;AAChC,mBAAmB,iDAAmB;AACtC,yCAAyC,8CAA8C;AACvF;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD,eAAe,oDAAc;AAC7B;AACA;AACA,kCAAkC,iBAAiB;AACnD,eAAe,+CAAiB;AAChC,mBAAmB,iDAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,+CAAiB;AAChC;AACA,mBAAmB,iDAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oDAAc;AAC3D;AACA;AACA;AACA,6BAA6B,qDAAM;AACnC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,+CAAiB;AAChC;AACA,mBAAmB,iDAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oDAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8DAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8DAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8DAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mEAAuB,KAAK,2DAAK,YAAY,2DAAK,cAAc,2DAAK,cAAc,2DAAK;AAChH;AACA;AACA,mCAAmC,yCAAyC,EAAE;AAC9E;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,8DAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oDAAc;AAC1B;AACA,QAAQ,8DAAM;AACd;AACA;AACA,QAAQ,8DAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAC,CAAC,mDAAI,GAAG,oCAAoC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,EAAE,2DAAC,SAAS,0CAA0C,+BAA+B,EAAE,EAAE,EAAE,2DAAC,iBAAiB,2DAAC,kBAAkB,qBAAqB,8BAA8B,EAAE,mEAAmE;AAC7Q;AACA;AACA,0BAA0B,QAAQ,2DAAU,OAAO,EAAE;AACrD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,0BAA0B,eAAe,cAAc,iBAAiB,iBAAiB,cAAc,kBAAkB,kBAAkB,8CAA8C,OAAO,QAAQ,MAAM,SAAS,aAAa,kBAAkB,eAAe,kBAAkB,cAAc,YAAY,OAAO,WAA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;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAc;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAc;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAAiB;AAChC,mBAAmB,iDAAmB;AACtC,sCAAsC,oDAAc;AACpD,aAAa;AACb,SAAS;AACT;AACA;AACA,0BAA0B,uBAAuB,gCAAgC,wBAAwB,mBAAmB,eAAe,8BAA8B,0BAA0B,oBAAoB,0BAA0B,+CAA+C,uCAAuC,mCAAmC,8CAA8C,sCAAsC,gDAAgD,6EAA6E,qEAAqE,EAAE,EAAE;AACpoB;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA,QAAQ,2DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oDAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAAiB;AAChC;AACA,mBAAmB,iDAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mBAAmB,2DAAU;AAC7B;AACA,gBAAgB,2DAAC,CAAC,mDAAI,GAAG,8EAA8E;AACvG;AACA;AACA,qBAAqB,EAAE,2DAAC;AACxB;AACA;AACA,0BAA0B,oCAAoC,aAAa,EAAE,EAAE;AAC/E;AACA;AACA,KAAK;AACL;AACA,CAAC;AACgI","file":"39-es5.js","sourcesContent":["var _this = this;\r\nimport * as tslib_1 from \"tslib\";\r\nimport { r as registerInstance, d as getIonMode, c as createEvent, h, H as Host, e as getElement } from './core-c02a05e9.js';\r\nimport { b as config } from './config-503c2549.js';\r\nimport './animation-d0becaea.js';\r\nimport { GESTURE_CONTROLLER } from './index-2c4a5477.js';\r\nimport { m as menuController } from './index-824b185a.js';\r\nimport { c as createColorClasses } from './theme-353a032e.js';\r\nimport { i as isEndSide, b as assert } from './helpers-c90aaa66.js';\r\nimport { g as getTimeGivenProgression, P as Point } from './cubic-bezier-90d0df24.js';\r\nvar Menu = /** @class */ (function () {\r\n    function class_1(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.lastOnEnd = 0;\r\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\r\n        this.mode = getIonMode(this);\r\n        this.isAnimating = false;\r\n        this._isOpen = false;\r\n        this.isPaneVisible = false;\r\n        this.isEndSide = false;\r\n        /**\r\n         * If `true`, the menu is disabled.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * Which side of the view the menu should be placed.\r\n         */\r\n        this.side = 'start';\r\n        /**\r\n         * If `true`, swiping the menu is enabled.\r\n         */\r\n        this.swipeGesture = true;\r\n        /**\r\n         * The edge threshold for dragging the menu open.\r\n         * If a drag/swipe happens over this value, the menu is not triggered.\r\n         */\r\n        this.maxEdgeStart = 50;\r\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\r\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\r\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\r\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\r\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\r\n    }\r\n    class_1.prototype.typeChanged = function (type, oldType) {\r\n        var contentEl = this.contentEl;\r\n        if (contentEl) {\r\n            if (oldType !== undefined) {\r\n                contentEl.classList.remove(\"menu-content-\" + oldType);\r\n            }\r\n            contentEl.classList.add(\"menu-content-\" + type);\r\n            contentEl.removeAttribute('style');\r\n        }\r\n        if (this.menuInnerEl) {\r\n            // Remove effects of previous animations\r\n            this.menuInnerEl.removeAttribute('style');\r\n        }\r\n        this.animation = undefined;\r\n    };\r\n    class_1.prototype.disabledChanged = function () {\r\n        this.updateState();\r\n        this.ionMenuChange.emit({\r\n            disabled: this.disabled,\r\n            open: this._isOpen\r\n        });\r\n    };\r\n    class_1.prototype.sideChanged = function () {\r\n        this.isEndSide = isEndSide(this.side);\r\n    };\r\n    class_1.prototype.swipeGestureChanged = function () {\r\n        this.updateState();\r\n    };\r\n    class_1.prototype.connectedCallback = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var el, parent, content, _a;\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (this.type === undefined) {\r\n                            this.type = config.get('menuType', this.mode === 'ios' ? 'reveal' : 'overlay');\r\n                        }\r\n                        el = this.el;\r\n                        parent = el.parentNode;\r\n                        content = this.contentId !== undefined\r\n                            ? document.getElementById(this.contentId)\r\n                            : parent && parent.querySelector && parent.querySelector('[main]');\r\n                        if (!content || !content.tagName) {\r\n                            // requires content element\r\n                            console.error('Menu: must have a \"content\" element to listen for drag events on.');\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.contentEl = content;\r\n                        // add menu's content classes\r\n                        content.classList.add('menu-content');\r\n                        this.typeChanged(this.type, undefined);\r\n                        this.sideChanged();\r\n                        // register this menu with the app's menu controller\r\n                        menuController._register(this);\r\n                        _a = this;\r\n                        return [4 /*yield*/, import('./index-2c4a5477.js')];\r\n                    case 1:\r\n                        _a.gesture = (_b.sent()).createGesture({\r\n                            el: document,\r\n                            gestureName: 'menu-swipe',\r\n                            gesturePriority: 30,\r\n                            threshold: 10,\r\n                            canStart: function (ev) { return _this.canStart(ev); },\r\n                            onWillStart: function () { return _this.onWillStart(); },\r\n                            onStart: function () { return _this.onStart(); },\r\n                            onMove: function (ev) { return _this.onMove(ev); },\r\n                            onEnd: function (ev) { return _this.onEnd(ev); },\r\n                        });\r\n                        this.updateState();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.componentDidLoad = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\r\n                this.updateState();\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.disconnectedCallback = function () {\r\n        this.blocker.destroy();\r\n        menuController._unregister(this);\r\n        if (this.animation) {\r\n            this.animation.destroy();\r\n        }\r\n        if (this.gesture) {\r\n            this.gesture.destroy();\r\n            this.gesture = undefined;\r\n        }\r\n        this.animation = undefined;\r\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\r\n    };\r\n    class_1.prototype.onSplitPaneChanged = function (ev) {\r\n        this.isPaneVisible = ev.detail.isPane(this.el);\r\n        this.updateState();\r\n    };\r\n    class_1.prototype.onBackdropClick = function (ev) {\r\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\r\n            var shouldClose = (ev.composedPath)\r\n                ? !ev.composedPath().includes(this.menuInnerEl)\r\n                : false;\r\n            if (shouldClose) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                this.close();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns `true` is the menu is open.\r\n     */\r\n    class_1.prototype.isOpen = function () {\r\n        return Promise.resolve(this._isOpen);\r\n    };\r\n    /**\r\n     * Returns `true` is the menu is active.\r\n     *\r\n     * A menu is active when it can be opened or closed, meaning it's enabled\r\n     * and it's not part of a `ion-split-pane`.\r\n     */\r\n    class_1.prototype.isActive = function () {\r\n        return Promise.resolve(this._isActive());\r\n    };\r\n    /**\r\n     * Opens the menu. If the menu is already open or it can't be opened,\r\n     * it returns `false`.\r\n     */\r\n    class_1.prototype.open = function (animated) {\r\n        if (animated === void 0) { animated = true; }\r\n        return this.setOpen(true, animated);\r\n    };\r\n    /**\r\n     * Closes the menu. If the menu is already closed or it can't be closed,\r\n     * it returns `false`.\r\n     */\r\n    class_1.prototype.close = function (animated) {\r\n        if (animated === void 0) { animated = true; }\r\n        return this.setOpen(false, animated);\r\n    };\r\n    /**\r\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\r\n     * If the operation can't be completed successfully, it returns `false`.\r\n     */\r\n    class_1.prototype.toggle = function (animated) {\r\n        if (animated === void 0) { animated = true; }\r\n        return this.setOpen(!this._isOpen, animated);\r\n    };\r\n    /**\r\n     * Opens or closes the button.\r\n     * If the operation can't be completed successfully, it returns `false`.\r\n     */\r\n    class_1.prototype.setOpen = function (shouldOpen, animated) {\r\n        if (animated === void 0) { animated = true; }\r\n        return menuController._setOpen(this, shouldOpen, animated);\r\n    };\r\n    class_1.prototype._setOpen = function (shouldOpen, animated) {\r\n        if (animated === void 0) { animated = true; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // If the menu is disabled or it is currently being animated, let's do nothing\r\n                        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        this.beforeAnimation(shouldOpen);\r\n                        return [4 /*yield*/, this.loadAnimation()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.startAnimation(shouldOpen, animated)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.afterAnimation(shouldOpen);\r\n                        return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.loadAnimation = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var width, _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        width = this.menuInnerEl.offsetWidth;\r\n                        if (width === this.width && this.animation !== undefined) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.width = width;\r\n                        // Destroy existing animation\r\n                        if (this.animation) {\r\n                            this.animation.destroy();\r\n                            this.animation = undefined;\r\n                        }\r\n                        // Create new animation\r\n                        _a = this;\r\n                        return [4 /*yield*/, menuController._createAnimation(this.type, this)];\r\n                    case 1:\r\n                        // Create new animation\r\n                        _a.animation = _b.sent();\r\n                        if (!config.getBoolean('animated', true)) {\r\n                            this.animation.duration(0);\r\n                        }\r\n                        this.animation.fill('both');\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.startAnimation = function (shouldOpen, animated) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var isReversed, ani;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        isReversed = !shouldOpen;\r\n                        ani = this.animation\r\n                            .direction((isReversed) ? 'reverse' : 'normal')\r\n                            .easing((isReversed) ? 'cubic-bezier(0.4, 0.0, 0.6, 1)' : 'cubic-bezier(0.0, 0.0, 0.2, 1)');\r\n                        if (!animated) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, ani.playAsync()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        ani.playSync();\r\n                        _a.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype._isActive = function () {\r\n        return !this.disabled && !this.isPaneVisible;\r\n    };\r\n    class_1.prototype.canSwipe = function () {\r\n        return this.swipeGesture && !this.isAnimating && this._isActive();\r\n    };\r\n    class_1.prototype.canStart = function (detail) {\r\n        if (!this.canSwipe()) {\r\n            return false;\r\n        }\r\n        if (this._isOpen) {\r\n            return true;\r\n            // TODO error\r\n        }\r\n        else if (menuController._getOpenSync()) {\r\n            return false;\r\n        }\r\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\r\n    };\r\n    class_1.prototype.onWillStart = function () {\r\n        this.beforeAnimation(!this._isOpen);\r\n        return this.loadAnimation();\r\n    };\r\n    class_1.prototype.onStart = function () {\r\n        if (!this.isAnimating || !this.animation) {\r\n            assert(false, 'isAnimating has to be true');\r\n            return;\r\n        }\r\n        // the cloned animation should not use an easing curve during seek\r\n        this.animation\r\n            .direction((this._isOpen) ? 'reverse' : 'normal')\r\n            .progressStart(true);\r\n    };\r\n    class_1.prototype.onMove = function (detail) {\r\n        if (!this.isAnimating || !this.animation) {\r\n            assert(false, 'isAnimating has to be true');\r\n            return;\r\n        }\r\n        var delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\r\n        var stepValue = delta / this.width;\r\n        this.animation.progressStep(stepValue);\r\n    };\r\n    class_1.prototype.onEnd = function (detail) {\r\n        var _this = this;\r\n        if (!this.isAnimating || !this.animation) {\r\n            assert(false, 'isAnimating has to be true');\r\n            return;\r\n        }\r\n        var isOpen = this._isOpen;\r\n        var isEndSide = this.isEndSide;\r\n        var delta = computeDelta(detail.deltaX, isOpen, isEndSide);\r\n        var width = this.width;\r\n        var stepValue = delta / width;\r\n        var velocity = detail.velocityX;\r\n        var z = width / 2.0;\r\n        var shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\r\n        var shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\r\n        var shouldComplete = isOpen\r\n            ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\r\n            : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\r\n        var shouldOpen = !isOpen && shouldComplete;\r\n        if (isOpen && !shouldComplete) {\r\n            shouldOpen = true;\r\n        }\r\n        this.lastOnEnd = detail.timeStamp;\r\n        // Account for rounding errors in JS\r\n        var newStepValue = (shouldComplete) ? 0.001 : -0.001;\r\n        /**\r\n         * TODO: stepValue can sometimes return a negative\r\n         * value, but you can't have a negative time value\r\n         * for the cubic bezier curve (at least with web animations)\r\n         * Not sure if the negative step value is an error or not\r\n         */\r\n        var adjustedStepValue = (stepValue <= 0) ? 0.01 : stepValue;\r\n        /**\r\n         * Animation will be reversed here, so need to\r\n         * reverse the easing curve as well\r\n         *\r\n         * Additionally, we need to account for the time relative\r\n         * to the new easing curve, as `stepValue` is going to be given\r\n         * in terms of a linear curve.\r\n         */\r\n        newStepValue += getTimeGivenProgression(new Point(0, 0), new Point(0.4, 0), new Point(0.6, 1), new Point(1, 1), adjustedStepValue);\r\n        this.animation\r\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\r\n            .onFinish(function () { return _this.afterAnimation(shouldOpen); }, {\r\n            oneTimeCallback: true\r\n        })\r\n            .progressEnd(shouldComplete, newStepValue, 300);\r\n    };\r\n    class_1.prototype.beforeAnimation = function (shouldOpen) {\r\n        assert(!this.isAnimating, '_before() should not be called while animating');\r\n        // this places the menu into the correct location before it animates in\r\n        // this css class doesn't actually kick off any animations\r\n        this.el.classList.add(SHOW_MENU);\r\n        if (this.backdropEl) {\r\n            this.backdropEl.classList.add(SHOW_BACKDROP);\r\n        }\r\n        this.blocker.block();\r\n        this.isAnimating = true;\r\n        if (shouldOpen) {\r\n            this.ionWillOpen.emit();\r\n        }\r\n        else {\r\n            this.ionWillClose.emit();\r\n        }\r\n    };\r\n    class_1.prototype.afterAnimation = function (isOpen) {\r\n        assert(this.isAnimating, '_before() should be called while animating');\r\n        // keep opening/closing the menu disabled for a touch more yet\r\n        // only add listeners/css if it's enabled and isOpen\r\n        // and only remove listeners/css if it's not open\r\n        // emit opened/closed events\r\n        this._isOpen = isOpen;\r\n        this.isAnimating = false;\r\n        if (!this._isOpen) {\r\n            this.blocker.unblock();\r\n        }\r\n        if (isOpen) {\r\n            // add css class\r\n            if (this.contentEl) {\r\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\r\n            }\r\n            // emit open event\r\n            this.ionDidOpen.emit();\r\n        }\r\n        else {\r\n            // remove css classes\r\n            this.el.classList.remove(SHOW_MENU);\r\n            if (this.contentEl) {\r\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\r\n            }\r\n            if (this.backdropEl) {\r\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\r\n            }\r\n            if (this.animation) {\r\n                this.animation.stop();\r\n            }\r\n            // emit close event\r\n            this.ionDidClose.emit();\r\n        }\r\n    };\r\n    class_1.prototype.updateState = function () {\r\n        var isActive = this._isActive();\r\n        if (this.gesture) {\r\n            this.gesture.setDisabled(!isActive || !this.swipeGesture);\r\n        }\r\n        // Close menu immediately\r\n        if (!isActive && this._isOpen) {\r\n            // close if this menu is open, and should not be enabled\r\n            this.forceClosing();\r\n        }\r\n        if (!this.disabled) {\r\n            menuController._setActiveMenu(this);\r\n        }\r\n        assert(!this.isAnimating, 'can not be animating');\r\n    };\r\n    class_1.prototype.forceClosing = function () {\r\n        assert(this._isOpen, 'menu cannot be closed');\r\n        this.isAnimating = true;\r\n        var ani = this.animation.direction('reverse');\r\n        ani.playSync();\r\n        this.afterAnimation(false);\r\n    };\r\n    class_1.prototype.render = function () {\r\n        var _a;\r\n        var _this = this;\r\n        var _b = this, isEndSide = _b.isEndSide, type = _b.type, disabled = _b.disabled, mode = _b.mode, isPaneVisible = _b.isPaneVisible;\r\n        return (h(Host, { role: \"navigation\", class: (_a = {},\r\n                _a[mode] = true,\r\n                _a[\"menu-type-\" + type] = true,\r\n                _a['menu-enabled'] = !disabled,\r\n                _a['menu-side-end'] = isEndSide,\r\n                _a['menu-side-start'] = !isEndSide,\r\n                _a['menu-pane-visible'] = isPaneVisible,\r\n                _a) }, h(\"div\", { class: \"menu-inner\", ref: function (el) { return _this.menuInnerEl = el; } }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: function (el) { return _this.backdropEl = el; }, class: \"menu-backdrop\", tappable: false, stopPropagation: false })));\r\n    };\r\n    Object.defineProperty(class_1.prototype, \"el\", {\r\n        get: function () { return getElement(this); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(class_1, \"watchers\", {\r\n        get: function () {\r\n            return {\r\n                \"type\": [\"typeChanged\"],\r\n                \"disabled\": [\"disabledChanged\"],\r\n                \"side\": [\"sideChanged\"],\r\n                \"swipeGesture\": [\"swipeGestureChanged\"]\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(class_1, \"style\", {\r\n        get: function () { return \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color,#fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,0,0);transform:translate3d(-9999px,0,0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host-context([dir=rtl]) .menu-inner,[dir=rtl] .menu-inner{left:unset;right:unset;left:auto;right:0;-webkit-transform:translate3d(calc(-1 * -9999px),0,0);transform:translate3d(calc(-1 * -9999px),0,0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto}ion-backdrop{display:none;opacity:.01;z-index:-1}\\@media (max-width:340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translateZ(0);transform:translateZ(0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none!important;transform:none!important;-webkit-box-shadow:none!important;box-shadow:none!important}:host(.menu-pane-visible) ion-backdrop{display:hidden!important}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return class_1;\r\n}());\r\nvar computeDelta = function (deltaX, isOpen, isEndSide) {\r\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\r\n};\r\nvar checkEdgeSide = function (win, posX, isEndSide, maxEdgeStart) {\r\n    if (isEndSide) {\r\n        return posX >= win.innerWidth - maxEdgeStart;\r\n    }\r\n    else {\r\n        return posX <= maxEdgeStart;\r\n    }\r\n};\r\nvar SHOW_MENU = 'show-menu';\r\nvar SHOW_BACKDROP = 'show-backdrop';\r\nvar MENU_CONTENT_OPEN = 'menu-content-open';\r\n// Given a menu, return whether or not the menu toggle should be visible\r\nvar updateVisibility = function (menu) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n    var menuEl, _a;\r\n    return tslib_1.__generator(this, function (_b) {\r\n        switch (_b.label) {\r\n            case 0: return [4 /*yield*/, menuController.get(menu)];\r\n            case 1:\r\n                menuEl = _b.sent();\r\n                _a = menuEl;\r\n                if (!_a) return [3 /*break*/, 3];\r\n                return [4 /*yield*/, menuEl.isActive()];\r\n            case 2:\r\n                _a = (_b.sent());\r\n                _b.label = 3;\r\n            case 3: return [2 /*return*/, !!(_a)];\r\n        }\r\n    });\r\n}); };\r\nvar MenuButton = /** @class */ (function () {\r\n    function class_2(hostRef) {\r\n        var _this = this;\r\n        registerInstance(this, hostRef);\r\n        this.visible = false;\r\n        /**\r\n         * If `true`, the user cannot interact with the menu button.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * Automatically hides the menu button when the corresponding menu is not active\r\n         */\r\n        this.autoHide = true;\r\n        /**\r\n         * The type of the button.\r\n         */\r\n        this.type = 'button';\r\n        this.onClick = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, menuController.toggle(this.menu)];\r\n            });\r\n        }); };\r\n    }\r\n    class_2.prototype.componentDidLoad = function () {\r\n        this.visibilityChanged();\r\n    };\r\n    class_2.prototype.visibilityChanged = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4 /*yield*/, updateVisibility(this.menu)];\r\n                    case 1:\r\n                        _a.visible = _b.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_2.prototype.render = function () {\r\n        var _a;\r\n        var _b = this, color = _b.color, disabled = _b.disabled;\r\n        var mode = getIonMode(this);\r\n        var menuIcon = config.get('menuIcon', 'menu');\r\n        var hidden = this.autoHide && !this.visible;\r\n        var attrs = {\r\n            type: this.type\r\n        };\r\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: Object.assign((_a = {}, _a[mode] = true, _a), createColorClasses(color), { 'button': true, 'menu-button-hidden': hidden, 'menu-button-disabled': disabled, 'ion-activatable': true, 'ion-focusable': true }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\" }), h(\"slot\", null, h(\"ion-icon\", { icon: menuIcon, mode: mode, lazy: false })), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\r\n    };\r\n    Object.defineProperty(class_2, \"style\", {\r\n        get: function () { return \":host{--background:transparent;--color-focused:var(--color);--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:.5;pointer-events:none}\\@media (any-hover:hover){:host(:hover) .button-native{background:var(--background-hover);color:var(--color-hover)}}:host(.ion-focused) .button-native{background:var(--background-focused);color:var(--color-focused)}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host-context(ion-toolbar:not(.ion-color)){color:var(--ion-toolbar-color,var(--color))}:host{--background-focused:rgba(var(--ion-color-primary-rgb,56,128,255),0.1);--border-radius:4px;--color:var(--ion-color-primary,#3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.activated){opacity:.4}\\@media (any-hover:hover){:host(:hover){opacity:.6}}:host(.ion-color.ion-focused) .button-native{background:rgba(var(--ion-color-base-rgb),.1)}\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return class_2;\r\n}());\r\nvar MenuController = /** @class */ (function () {\r\n    function class_3(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    /**\r\n     * Open the menu. If a menu is not provided then it will open the first\r\n     * menu found. If the specified menu is `start` or `end`, then it will open\r\n     * the enabled menu on that side. Otherwise, it will try to find the menu\r\n     * using the menu's `id` property. If a menu is not found then it will\r\n     * return `false`.\r\n     *\r\n     * @param menu The menuId or side of the menu to open.\r\n     */\r\n    class_3.prototype.open = function (menu) {\r\n        return menuController.open(menu);\r\n    };\r\n    /**\r\n     * Close the menu. If a menu is specified, it will close that menu.\r\n     * If no menu is specified, then it will close any menu that is open.\r\n     * If it does not find any open menus, it will return `false`.\r\n     *\r\n     * @param menu The menuId or side of the menu to close.\r\n     */\r\n    class_3.prototype.close = function (menu) {\r\n        return menuController.close(menu);\r\n    };\r\n    /**\r\n     * Toggle the menu open or closed. If the menu is already open, it will try to\r\n     * close the menu, otherwise it will try to open it. Returns `false` if\r\n     * a menu is not found.\r\n     *\r\n     * @param menu The menuId or side of the menu to toggle.\r\n     */\r\n    class_3.prototype.toggle = function (menu) {\r\n        return menuController.toggle(menu);\r\n    };\r\n    /**\r\n     * Enable or disable a menu. Disabling a menu will not allow gestures\r\n     * for that menu or any calls to open it. This is useful when there are\r\n     * multiple menus on the same side and only one of them should be allowed\r\n     * to open. Enabling a menu will automatically disable all other menus\r\n     * on that side.\r\n     *\r\n     * @param enable If `true`, the menu should be enabled.\r\n     * @param menu The menuId or side of the menu to enable or disable.\r\n     */\r\n    class_3.prototype.enable = function (enable, menu) {\r\n        return menuController.enable(enable, menu);\r\n    };\r\n    /**\r\n     * Enable or disable the ability to swipe open the menu.\r\n     *\r\n     * @param enable If `true`, the menu swipe gesture should be enabled.\r\n     * @param menu The menuId or side of the menu to enable or disable the swipe gesture on.\r\n     */\r\n    class_3.prototype.swipeGesture = function (enable, menu) {\r\n        return menuController.swipeGesture(enable, menu);\r\n    };\r\n    /**\r\n     * Get whether or not the menu is open. Returns `true` if the specified\r\n     * menu is open. If a menu is not specified, it will return `true` if\r\n     * any menu is currently open.\r\n     *\r\n     * @param menu The menuId or side of the menu that is being checked.\r\n     */\r\n    class_3.prototype.isOpen = function (menu) {\r\n        return menuController.isOpen(menu);\r\n    };\r\n    /**\r\n     * Get whether or not the menu is enabled. Returns `true` if the\r\n     * specified menu is enabled. Returns `false` if a menu is disabled\r\n     * or not found.\r\n     *\r\n     * @param menu The menuId or side of the menu that is being checked.\r\n     */\r\n    class_3.prototype.isEnabled = function (menu) {\r\n        return menuController.isEnabled(menu);\r\n    };\r\n    /**\r\n     * Get a menu instance. If a menu is not provided then it will return the first\r\n     * menu found. If the specified menu is `start` or `end`, then it will return the\r\n     * enabled menu on that side. Otherwise, it will try to find the menu using the menu's\r\n     * `id` property. If a menu is not found then it will return `null`.\r\n     *\r\n     * @param menu The menuId or side of the menu.\r\n     */\r\n    class_3.prototype.get = function (menu) {\r\n        return menuController.get(menu);\r\n    };\r\n    /**\r\n     * Get the instance of the opened menu. Returns `null` if a menu is not found.\r\n     */\r\n    class_3.prototype.getOpen = function () {\r\n        return menuController.getOpen();\r\n    };\r\n    /**\r\n     * Get all menu instances.\r\n     */\r\n    class_3.prototype.getMenus = function () {\r\n        return menuController.getMenus();\r\n    };\r\n    /**\r\n     * Get whether or not a menu is animating. Returns `true` if any\r\n     * menu is currently animating.\r\n     */\r\n    class_3.prototype.isAnimating = function () {\r\n        return menuController.isAnimating();\r\n    };\r\n    /**\r\n     * Registers a new animation that can be used with any `ion-menu` by\r\n     * passing the name of the animation in its `type` property.\r\n     *\r\n     * @param name The name of the animation to register.\r\n     * @param animation The animation function to register.\r\n     */\r\n    class_3.prototype.registerAnimation = function (name, animation) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, menuController.registerAnimation(name, animation)];\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(class_3, \"style\", {\r\n        get: function () { return \".menu-content{-webkit-transform:translateZ(0);transform:translateZ(0)}.menu-content-open{cursor:pointer;-ms-touch-action:manipulation;touch-action:manipulation;pointer-events:none}.ios .menu-content-reveal{-webkit-box-shadow:-8px 0 42px rgba(0,0,0,.08);box-shadow:-8px 0 42px rgba(0,0,0,.08)}[dir=rtl].ios .menu-content-reveal{-webkit-box-shadow:8px 0 42px rgba(0,0,0,.08);box-shadow:8px 0 42px rgba(0,0,0,.08)}.md .menu-content-push,.md .menu-content-reveal{-webkit-box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18);box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18)}\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return class_3;\r\n}());\r\nvar MenuToggle = /** @class */ (function () {\r\n    function class_4(hostRef) {\r\n        var _this = this;\r\n        registerInstance(this, hostRef);\r\n        this.visible = false;\r\n        /**\r\n         * Automatically hides the content when the corresponding menu is not active.\r\n         *\r\n         * By default, it's `true`. Change it to `false` in order to\r\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\r\n         */\r\n        this.autoHide = true;\r\n        this.onClick = function () {\r\n            return menuController.toggle(_this.menu);\r\n        };\r\n    }\r\n    class_4.prototype.connectedCallback = function () {\r\n        this.visibilityChanged();\r\n    };\r\n    class_4.prototype.visibilityChanged = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4 /*yield*/, updateVisibility(this.menu)];\r\n                    case 1:\r\n                        _a.visible = _b.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_4.prototype.render = function () {\r\n        var _a;\r\n        var mode = getIonMode(this);\r\n        var hidden = this.autoHide && !this.visible;\r\n        return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: (_a = {},\r\n                _a[mode] = true,\r\n                _a['menu-toggle-hidden'] = hidden,\r\n                _a) }, h(\"slot\", null)));\r\n    };\r\n    Object.defineProperty(class_4, \"style\", {\r\n        get: function () { return \":host(.menu-toggle-hidden){display:none}\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return class_4;\r\n}());\r\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuController as ion_menu_controller, MenuToggle as ion_menu_toggle };\r\n"],"sourceRoot":""}