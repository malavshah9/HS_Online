{"version":3,"sources":["./node_modules/@ionic/core/dist/esm-es5/swiper.bundle-8d61f7c5.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,mDAAmD,EAAE;AACrD,yDAAyD,EAAE;AAC3D;AACA,+BAA+B,EAAE;AACjC;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qBAAqB;AACrB,mDAAmD,EAAE;AACrD;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,eAAe,WAAW;AAC1B,CAAC,YAAY;AACb;AACA;AACA;AACA;AACA,KAAK;AACL,gBAAgB;AAChB,eAAe;AACf;AACA;AACA,KAAK;AACL,mDAAmD,EAAE;AACrD,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,6BAA6B,EAAE;AAC/B,2BAA2B,EAAE;AAC7B,cAAc;AACd,uCAAuC,EAAE;AACzC,2CAA2C,EAAE;AAC7C,CAAC,UAAU;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,sBAAsB,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB,iBAAiB;AACpC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB,iBAAiB;AACpC;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,+BAA+B,WAAW;AAC1C;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,4BAA4B,EAAE;AACxG;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,0BAA0B,EAAE;AACrG;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA,+DAA+D,iBAAiB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,yCAAyC,+BAA+B,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gCAAgC;AACpD;AACA,oBAAoB,oCAAoC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yDAAyD;AACjF;AACA;AACA;AACA,4BAA4B,yDAAyD;AACrF;AACA,4BAA4B,0DAA0D;AACtF;AACA;AACA;AACA;AACA;AACA,4BAA4B,yDAAyD;AACrF;AACA,4BAA4B,0DAA0D;AACtF;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kCAAkC;AAC9D;AACA,4BAA4B,mCAAmC;AAC/D;AACA;AACA,wBAAwB,oCAAoC;AAC5D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA,+BAA+B,2CAA2C;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2CAA2C;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wCAAwC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC,2BAA2B,2BAA2B;AACtD,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC,2BAA2B,2BAA2B;AACtD,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,uBAAuB,EAAE;AACnF,8DAA8D,uBAAuB,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,yBAAyB;AAC5C;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oBAAoB;AAChE,sCAAsC,oBAAoaAAa;AACbaAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbqBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAukIAAkI,gCAAgC;AAClK;AACA,yGAAyG,mCAAmC;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oIAAoI,gCAAgC;AACpK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,iCAAiC,0CAA0C,EAAE;AAC7E,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACviB;AACrB;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,SAAS;AACT;AACA,0CAA0C;AAC1C;AACA;AACA,uCAAuC;AACvC,+CAA+C;AAC/C,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW,kBAAkB;AAC5E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA,+CAA+C,gDAAgD;AAC/F;AACA,sDAAsD,oBAAoB;AAC1E,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjiBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,kBAAkB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,eAAe,EAAE;AACvE,oDAAoD,eAAe,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACbaAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,iCAAiC;AACpH,oFAAoF,gCAAgC;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,iCAAiC;AACpH,oFAAoF,gCAAgC;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbwIAAwI,gCAAgC;AACxK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wIAAwI,gCAAgC;AACxK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,kCAAkC;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkB","file":"swiper-bundle-8d61f7c5-js-es5.js","sourcesContent":["import * as tslib_1 from \"tslib\";\r\n/**\r\n * SSR Window 1.0.1\r\n * Better handling for window object in SSR environment\r\n * https://github.com/nolimits4web/ssr-window\r\n *\r\n * Copyright 2018, Vladimir Kharlampidi\r\n *\r\n * Licensed under MIT\r\n *\r\n * Released on: July 18, 2018\r\n */\r\nvar doc = (typeof document === 'undefined') ? {\r\n    body: {},\r\n    addEventListener: function addEventListener() { },\r\n    removeEventListener: function removeEventListener() { },\r\n    activeElement: {\r\n        blur: function blur() { },\r\n        nodeName: '',\r\n    },\r\n    querySelector: function querySelector() {\r\n        return null;\r\n    },\r\n    querySelectorAll: function querySelectorAll() {\r\n        return [];\r\n    },\r\n    getElementById: function getElementById() {\r\n        return null;\r\n    },\r\n    createEvent: function createEvent() {\r\n        return {\r\n            initEvent: function initEvent() { },\r\n        };\r\n    },\r\n    createElement: function createElement() {\r\n        return {\r\n            children: [],\r\n            childNodes: [],\r\n            style: {},\r\n            setAttribute: function setAttribute() { },\r\n            getElementsByTagName: function getElementsByTagName() {\r\n                return [];\r\n            },\r\n        };\r\n    },\r\n    location: { hash: '' },\r\n} : document; // eslint-disable-line\r\nvar win = (typeof window === 'undefined') ? {\r\n    document: doc,\r\n    navigator: {\r\n        userAgent: '',\r\n    },\r\n    location: {},\r\n    history: {},\r\n    CustomEvent: function CustomEvent() {\r\n        return this;\r\n    },\r\n    addEventListener: function addEventListener() { },\r\n    removeEventListener: function removeEventListener() { },\r\n    getComputedStyle: function getComputedStyle() {\r\n        return {\r\n            getPropertyValue: function getPropertyValue() {\r\n                return '';\r\n            },\r\n        };\r\n    },\r\n    Image: function Image() { },\r\n    Date: function Date() { },\r\n    screen: {},\r\n    setTimeout: function setTimeout() { },\r\n    clearTimeout: function clearTimeout() { },\r\n} : window; // eslint-disable-line\r\n/**\r\n * Dom7 2.1.3\r\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\r\n * http://framework7.io/docs/dom.html\r\n *\r\n * Copyright 2019, Vladimir Kharlampidi\r\n * The iDangero.us\r\n * http://www.idangero.us/\r\n *\r\n * Licensed under MIT\r\n *\r\n * Released on: February 11, 2019\r\n */\r\nvar Dom7 = /** @class */ (function () {\r\n    function Dom7(arr) {\r\n        var self = this;\r\n        // Create array-like object\r\n        for (var i = 0; i < arr.length; i += 1) {\r\n            self[i] = arr[i];\r\n        }\r\n        self.length = arr.length;\r\n        // Return collection with methods\r\n        return this;\r\n    }\r\n    return Dom7;\r\n}());\r\nfunction $(selector, context) {\r\n    var arr = [];\r\n    var i = 0;\r\n    if (selector && !context) {\r\n        if (selector instanceof Dom7) {\r\n            return selector;\r\n        }\r\n    }\r\n    if (selector) {\r\n        // String\r\n        if (typeof selector === 'string') {\r\n            var els = void 0;\r\n            var tempParent = void 0;\r\n            var html_1 = selector.trim();\r\n            if (html_1.indexOf('<') >= 0 && html_1.indexOf('>') >= 0) {\r\n                var toCreate = 'div';\r\n                if (html_1.indexOf('<li') === 0)\r\n                    toCreate = 'ul';\r\n                if (html_1.indexOf('<tr') === 0)\r\n                    toCreate = 'tbody';\r\n                if (html_1.indexOf('<td') === 0 || html_1.indexOf('<th') === 0)\r\n                    toCreate = 'tr';\r\n                if (html_1.indexOf('<tbody') === 0)\r\n                    toCreate = 'table';\r\n                if (html_1.indexOf('<option') === 0)\r\n                    toCreate = 'select';\r\n                tempParent = doc.createElement(toCreate);\r\n                tempParent.innerHTML = html_1;\r\n                for (i = 0; i < tempParent.childNodes.length; i += 1) {\r\n                    arr.push(tempParent.childNodes[i]);\r\n                }\r\n            }\r\n            else {\r\n                if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\r\n                    // Pure ID selector\r\n                    els = [doc.getElementById(selector.trim().split('#')[1])];\r\n                }\r\n                else {\r\n                    // Other selectors\r\n                    els = (context || doc).querySelectorAll(selector.trim());\r\n                }\r\n                for (i = 0; i < els.length; i += 1) {\r\n                    if (els[i])\r\n                        arr.push(els[i]);\r\n                }\r\n            }\r\n        }\r\n        else if (selector.nodeType || selector === win || selector === doc) {\r\n            // Node/element\r\n            arr.push(selector);\r\n        }\r\n        else if (selector.length > 0 && selector[0].nodeType) {\r\n            // Array of elements or instance of Dom\r\n            for (i = 0; i < selector.length; i += 1) {\r\n                arr.push(selector[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Dom7(arr);\r\n}\r\n$.fn = Dom7.prototype;\r\n$.Class = Dom7;\r\n$.Dom7 = Dom7;\r\nfunction unique(arr) {\r\n    var uniqueArray = [];\r\n    for (var i = 0; i < arr.length; i += 1) {\r\n        if (uniqueArray.indexOf(arr[i]) === -1)\r\n            uniqueArray.push(arr[i]);\r\n    }\r\n    return uniqueArray;\r\n}\r\n// Classes and attributes\r\nfunction addClass(className) {\r\n    if (typeof className === 'undefined') {\r\n        return this;\r\n    }\r\n    var classes = className.split(' ');\r\n    for (var i = 0; i < classes.length; i += 1) {\r\n        for (var j = 0; j < this.length; j += 1) {\r\n            if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined')\r\n                this[j].classList.add(classes[i]);\r\n        }\r\n    }\r\n    return this;\r\n}\r\nfunction removeClass(className) {\r\n    var classes = className.split(' ');\r\n    for (var i = 0; i < classes.length; i += 1) {\r\n        for (var j = 0; j < this.length; j += 1) {\r\n            if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined')\r\n                this[j].classList.remove(classes[i]);\r\n        }\r\n    }\r\n    return this;\r\n}\r\nfunction hasClass(className) {\r\n    if (!this[0])\r\n        return false;\r\n    return this[0].classList.contains(className);\r\n}\r\nfunction toggleClass(className) {\r\n    var classes = className.split(' ');\r\n    for (var i = 0; i < classes.length; i += 1) {\r\n        for (var j = 0; j < this.length; j += 1) {\r\n            if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined')\r\n                this[j].classList.toggle(classes[i]);\r\n        }\r\n    }\r\n    return this;\r\n}\r\nfunction attr(attrs, value) {\r\n    if (arguments.length === 1 && typeof attrs === 'string') {\r\n        // Get attr\r\n        if (this[0])\r\n            return this[0].getAttribute(attrs);\r\n        return undefined;\r\n    }\r\n    // Set attrs\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        if (arguments.length === 2) {\r\n            // String\r\n            this[i].setAttribute(attrs, value);\r\n        }\r\n        else {\r\n            // Object\r\n            // eslint-disable-next-line\r\n            for (var attrName in attrs) {\r\n                this[i][attrName] = attrs[attrName];\r\n                this[i].setAttribute(attrName, attrs[attrName]);\r\n            }\r\n        }\r\n    }\r\n    return this;\r\n}\r\n// eslint-disable-next-line\r\nfunction removeAttr(attr) {\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        this[i].removeAttribute(attr);\r\n    }\r\n    return this;\r\n}\r\nfunction data(key, value) {\r\n    var el;\r\n    if (typeof value === 'undefined') {\r\n        el = this[0];\r\n        // Get value\r\n        if (el) {\r\n            if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\r\n                return el.dom7ElementDataStorage[key];\r\n            }\r\n            var dataKey = el.getAttribute(\"data-\" + key);\r\n            if (dataKey) {\r\n                return dataKey;\r\n            }\r\n            return undefined;\r\n        }\r\n        return undefined;\r\n    }\r\n    // Set value\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        el = this[i];\r\n        if (!el.dom7ElementDataStorage)\r\n            el.dom7ElementDataStorage = {};\r\n        el.dom7ElementDataStorage[key] = value;\r\n    }\r\n    return this;\r\n}\r\n// Transforms\r\n// eslint-disable-next-line\r\nfunction transform(transform) {\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        var elStyle = this[i].style;\r\n        elStyle.webkitTransform = transform;\r\n        elStyle.transform = transform;\r\n    }\r\n    return this;\r\n}\r\nfunction transition(duration) {\r\n    if (typeof duration !== 'string') {\r\n        duration = duration + \"ms\"; // eslint-disable-line\r\n    }\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        var elStyle = this[i].style;\r\n        elStyle.webkitTransitionDuration = duration;\r\n        elStyle.transitionDuration = duration;\r\n    }\r\n    return this;\r\n}\r\n// Events\r\nfunction on() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var eventType = args[0], targetSelector = args[1], listener = args[2], capture = args[3];\r\n    if (typeof args[1] === 'function') {\r\n        eventType = args[0], listener = args[1], capture = args[2];\r\n        targetSelector = undefined;\r\n    }\r\n    if (!capture)\r\n        capture = false;\r\n    function handleLiveEvent(e) {\r\n        var target = e.target;\r\n        if (!target)\r\n            return;\r\n        var eventData = e.target.dom7EventData || [];\r\n        if (eventData.indexOf(e) < 0) {\r\n            eventData.unshift(e);\r\n        }\r\n        if ($(target).is(targetSelector))\r\n            listener.apply(target, eventData);\r\n        else {\r\n            var parents_1 = $(target).parents(); // eslint-disable-line\r\n            for (var k = 0; k < parents_1.length; k += 1) {\r\n                if ($(parents_1[k]).is(targetSelector))\r\n                    listener.apply(parents_1[k], eventData);\r\n            }\r\n        }\r\n    }\r\n    function handleEvent(e) {\r\n        var eventData = e && e.target ? e.target.dom7EventData || [] : [];\r\n        if (eventData.indexOf(e) < 0) {\r\n            eventData.unshift(e);\r\n        }\r\n        listener.apply(this, eventData);\r\n    }\r\n    var events = eventType.split(' ');\r\n    var j;\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        var el = this[i];\r\n        if (!targetSelector) {\r\n            for (j = 0; j < events.length; j += 1) {\r\n                var event = events[j];\r\n                if (!el.dom7Listeners)\r\n                    el.dom7Listeners = {};\r\n                if (!el.dom7Listeners[event])\r\n                    el.dom7Listeners[event] = [];\r\n                el.dom7Listeners[event].push({\r\n                    listener: listener,\r\n                    proxyListener: handleEvent,\r\n                });\r\n                el.addEventListener(event, handleEvent, capture);\r\n            }\r\n        }\r\n        else {\r\n            // Live events\r\n            for (j = 0; j < events.length; j += 1) {\r\n                var event = events[j];\r\n                if (!el.dom7LiveListeners)\r\n                    el.dom7LiveListeners = {};\r\n                if (!el.dom7LiveListeners[event])\r\n                    el.dom7LiveListeners[event] = [];\r\n                el.dom7LiveListeners[event].push({\r\n                    listener: listener,\r\n                    proxyListener: handleLiveEvent,\r\n                });\r\n                el.addEventListener(event, handleLiveEvent, capture);\r\n            }\r\n        }\r\n    }\r\n    return this;\r\n}\r\nfunction off() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var eventType = args[0], targetSelector = args[1], listener = args[2], capture = args[3];\r\n    if (typeof args[1] === 'function') {\r\n        eventType = args[0], listener = args[1], capture = args[2];\r\n        targetSelector = undefined;\r\n    }\r\n    if (!capture)\r\n        capture = false;\r\n    var events = eventType.split(' ');\r\n    for (var i = 0; i < events.length; i += 1) {\r\n        var event = events[i];\r\n        for (var j = 0; j < this.length; j += 1) {\r\n            var el = this[j];\r\n            var handlers = void 0;\r\n            if (!targetSelector && el.dom7Listeners) {\r\n                handlers = el.dom7Listeners[event];\r\n            }\r\n            else if (targetSelector && el.dom7LiveListeners) {\r\n                handlers = el.dom7LiveListeners[event];\r\n            }\r\n            if (handlers && handlers.length) {\r\n                for (var k = handlers.length - 1; k >= 0; k -= 1) {\r\n                    var handler = handlers[k];\r\n                    if (listener && handler.listener === listener) {\r\n                        el.removeEventListener(event, handler.proxyListener, capture);\r\n                        handlers.splice(k, 1);\r\n                    }\r\n                    else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\r\n                        el.removeEventListener(event, handler.proxyListener, capture);\r\n                        handlers.splice(k, 1);\r\n                    }\r\n                    else if (!listener) {\r\n                        el.removeEventListener(event, handler.proxyListener, capture);\r\n                        handlers.splice(k, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return this;\r\n}\r\nfunction trigger() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var events = args[0].split(' ');\r\n    var eventData = args[1];\r\n    for (var i = 0; i < events.length; i += 1) {\r\n        var event = events[i];\r\n        for (var j = 0; j < this.length; j += 1) {\r\n            var el = this[j];\r\n            var evt = void 0;\r\n            try {\r\n                evt = new win.CustomEvent(event, {\r\n                    detail: eventData,\r\n                    bubbles: true,\r\n                    cancelable: true,\r\n                });\r\n            }\r\n            catch (e) {\r\n                evt = doc.createEvent('Event');\r\n                evt.initEvent(event, true, true);\r\n                evt.detail = eventData;\r\n            }\r\n            // eslint-disable-next-line\r\n            el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\r\n            el.dispatchEvent(evt);\r\n            el.dom7EventData = [];\r\n            delete el.dom7EventData;\r\n        }\r\n    }\r\n    return this;\r\n}\r\nfunction transitionEnd(callback) {\r\n    var events = ['webkitTransitionEnd', 'transitionend'];\r\n    var dom = this;\r\n    var i;\r\n    function fireCallBack(e) {\r\n        /* jshint validthis:true */\r\n        if (e.target !== this)\r\n            return;\r\n        callback.call(this, e);\r\n        for (i = 0; i < events.length; i += 1) {\r\n            dom.off(events[i], fireCallBack);\r\n        }\r\n    }\r\n    if (callback) {\r\n        for (i = 0; i < events.length; i += 1) {\r\n            dom.on(events[i], fireCallBack);\r\n        }\r\n    }\r\n    return this;\r\n}\r\nfunction outerWidth(includeMargins) {\r\n    if (this.length > 0) {\r\n        if (includeMargins) {\r\n            // eslint-disable-next-line\r\n            var styles_1 = this.styles();\r\n            return this[0].offsetWidth + parseFloat(styles_1.getPropertyValue('margin-right')) + parseFloat(styles_1.getPropertyValue('margin-left'));\r\n        }\r\n        return this[0].offsetWidth;\r\n    }\r\n    return null;\r\n}\r\nfunction outerHeight(includeMargins) {\r\n    if (this.length > 0) {\r\n        if (includeMargins) {\r\n            // eslint-disable-next-line\r\n            var styles_2 = this.styles();\r\n            return this[0].offsetHeight + parseFloat(styles_2.getPropertyValue('margin-top')) + parseFloat(styles_2.getPropertyValue('margin-bottom'));\r\n        }\r\n        return this[0].offsetHeight;\r\n    }\r\n    return null;\r\n}\r\nfunction offset() {\r\n    if (this.length > 0) {\r\n        var el = this[0];\r\n        var box = el.getBoundingClientRect();\r\n        var body = doc.body;\r\n        var clientTop = el.clientTop || body.clientTop || 0;\r\n        var clientLeft = el.clientLeft || body.clientLeft || 0;\r\n        var scrollTop = el === win ? win.scrollY : el.scrollTop;\r\n        var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\r\n        return {\r\n            top: (box.top + scrollTop) - clientTop,\r\n            left: (box.left + scrollLeft) - clientLeft,\r\n        };\r\n    }\r\n    return null;\r\n}\r\nfunction styles() {\r\n    if (this[0])\r\n        return win.getComputedStyle(this[0], null);\r\n    return {};\r\n}\r\nfunction css(props, value) {\r\n    var i;\r\n    if (arguments.length === 1) {\r\n        if (typeof props === 'string') {\r\n            if (this[0])\r\n                return win.getComputedStyle(this[0], null).getPropertyValue(props);\r\n        }\r\n        else {\r\n            for (i = 0; i < this.length; i += 1) {\r\n                // eslint-disable-next-line\r\n                for (var prop in props) {\r\n                    this[i].style[prop] = props[prop];\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    if (arguments.length === 2 && typeof props === 'string') {\r\n        for (i = 0; i < this.length; i += 1) {\r\n            this[i].style[props] = value;\r\n        }\r\n        return this;\r\n    }\r\n    return this;\r\n}\r\n// Iterate over the collection passing elements to `callback`\r\nfunction each(callback) {\r\n    // Don't bother continuing without a callback\r\n    if (!callback)\r\n        return this;\r\n    // Iterate over the current collection\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        // If the callback returns false\r\n        if (callback.call(this[i], i, this[i]) === false) {\r\n            // End the loop early\r\n            return this;\r\n        }\r\n    }\r\n    // Return `this` to allow chained DOM operations\r\n    return this;\r\n}\r\n// eslint-disable-next-line\r\nfunction html(html) {\r\n    if (typeof html === 'undefined') {\r\n        return this[0] ? this[0].innerHTML : undefined;\r\n    }\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        this[i].innerHTML = html;\r\n    }\r\n    return this;\r\n}\r\n// eslint-disable-next-line\r\nfunction text(text) {\r\n    if (typeof text === 'undefined') {\r\n        if (this[0]) {\r\n            return this[0].textContent.trim();\r\n        }\r\n        return null;\r\n    }\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        this[i].textContent = text;\r\n    }\r\n    return this;\r\n}\r\nfunction is(selector) {\r\n    var el = this[0];\r\n    var compareWith;\r\n    var i;\r\n    if (!el || typeof selector === 'undefined')\r\n        return false;\r\n    if (typeof selector === 'string') {\r\n        if (el.matches)\r\n            return el.matches(selector);\r\n        else if (el.webkitMatchesSelector)\r\n            return el.webkitMatchesSelector(selector);\r\n        else if (el.msMatchesSelector)\r\n            return el.msMatchesSelector(selector);\r\n        compareWith = $(selector);\r\n        for (i = 0; i < compareWith.length; i += 1) {\r\n            if (compareWith[i] === el)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    else if (selector === doc)\r\n        return el === doc;\r\n    else if (selector === win)\r\n        return el === win;\r\n    if (selector.nodeType || selector instanceof Dom7) {\r\n        compareWith = selector.nodeType ? [selector] : selector;\r\n        for (i = 0; i < compareWith.length; i += 1) {\r\n            if (compareWith[i] === el)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    return false;\r\n}\r\nfunction index() {\r\n    var child = this[0];\r\n    var i;\r\n    if (child) {\r\n        i = 0;\r\n        // eslint-disable-next-line\r\n        while ((child = child.previousSibling) !== null) {\r\n            if (child.nodeType === 1)\r\n                i += 1;\r\n        }\r\n        return i;\r\n    }\r\n    return undefined;\r\n}\r\n// eslint-disable-next-line\r\nfunction eq(index) {\r\n    if (typeof index === 'undefined')\r\n        return this;\r\n    var length = this.length;\r\n    var returnIndex;\r\n    if (index > length - 1) {\r\n        return new Dom7([]);\r\n    }\r\n    if (index < 0) {\r\n        returnIndex = length + index;\r\n        if (returnIndex < 0)\r\n            return new Dom7([]);\r\n        return new Dom7([this[returnIndex]]);\r\n    }\r\n    return new Dom7([this[index]]);\r\n}\r\nfunction append() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var newChild;\r\n    for (var k = 0; k < args.length; k += 1) {\r\n        newChild = args[k];\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            if (typeof newChild === 'string') {\r\n                var tempDiv = doc.createElement('div');\r\n                tempDiv.innerHTML = newChild;\r\n                while (tempDiv.firstChild) {\r\n                    this[i].appendChild(tempDiv.firstChild);\r\n                }\r\n            }\r\n            else if (newChild instanceof Dom7) {\r\n                for (var j = 0; j < newChild.length; j += 1) {\r\n                    this[i].appendChild(newChild[j]);\r\n                }\r\n            }\r\n            else {\r\n                this[i].appendChild(newChild);\r\n            }\r\n        }\r\n    }\r\n    return this;\r\n}\r\nfunction prepend(newChild) {\r\n    var i;\r\n    var j;\r\n    for (i = 0; i < this.length; i += 1) {\r\n        if (typeof newChild === 'string') {\r\n            var tempDiv = doc.createElement('div');\r\n            tempDiv.innerHTML = newChild;\r\n            for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\r\n                this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\r\n            }\r\n        }\r\n        else if (newChild instanceof Dom7) {\r\n            for (j = 0; j < newChild.length; j += 1) {\r\n                this[i].insertBefore(newChild[j], this[i].childNodes[0]);\r\n            }\r\n        }\r\n        else {\r\n            this[i].insertBefore(newChild, this[i].childNodes[0]);\r\n        }\r\n    }\r\n    return this;\r\n}\r\nfunction next(selector) {\r\n    if (this.length > 0) {\r\n        if (selector) {\r\n            if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\r\n                return new Dom7([this[0].nextElementSibling]);\r\n            }\r\n            return new Dom7([]);\r\n        }\r\n        if (this[0].nextElementSibling)\r\n            return new Dom7([this[0].nextElementSibling]);\r\n        return new Dom7([]);\r\n    }\r\n    return new Dom7([]);\r\n}\r\nfunction nextAll(selector) {\r\n    var nextEls = [];\r\n    var el = this[0];\r\n    if (!el)\r\n        return new Dom7([]);\r\n    while (el.nextElementSibling) {\r\n        var next_1 = el.nextElementSibling; // eslint-disable-line\r\n        if (selector) {\r\n            if ($(next_1).is(selector))\r\n                nextEls.push(next_1);\r\n        }\r\n        else\r\n            nextEls.push(next_1);\r\n        el = next_1;\r\n    }\r\n    return new Dom7(nextEls);\r\n}\r\nfunction prev(selector) {\r\n    if (this.length > 0) {\r\n        var el = this[0];\r\n        if (selector) {\r\n            if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\r\n                return new Dom7([el.previousElementSibling]);\r\n            }\r\n            return new Dom7([]);\r\n        }\r\n        if (el.previousElementSibling)\r\n            return new Dom7([el.previousElementSibling]);\r\n        return new Dom7([]);\r\n    }\r\n    return new Dom7([]);\r\n}\r\nfunction prevAll(selector) {\r\n    var prevEls = [];\r\n    var el = this[0];\r\n    if (!el)\r\n        return new Dom7([]);\r\n    while (el.previousElementSibling) {\r\n        var prev_1 = el.previousElementSibling; // eslint-disable-line\r\n        if (selector) {\r\n            if ($(prev_1).is(selector))\r\n                prevEls.push(prev_1);\r\n        }\r\n        else\r\n            prevEls.push(prev_1);\r\n        el = prev_1;\r\n    }\r\n    return new Dom7(prevEls);\r\n}\r\nfunction parent(selector) {\r\n    var parents = []; // eslint-disable-line\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        if (this[i].parentNode !== null) {\r\n            if (selector) {\r\n                if ($(this[i].parentNode).is(selector))\r\n                    parents.push(this[i].parentNode);\r\n            }\r\n            else {\r\n                parents.push(this[i].parentNode);\r\n            }\r\n        }\r\n    }\r\n    return $(unique(parents));\r\n}\r\nfunction parents(selector) {\r\n    var parents = []; // eslint-disable-line\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        var parent_1 = this[i].parentNode; // eslint-disable-line\r\n        while (parent_1) {\r\n            if (selector) {\r\n                if ($(parent_1).is(selector))\r\n                    parents.push(parent_1);\r\n            }\r\n            else {\r\n                parents.push(parent_1);\r\n            }\r\n            parent_1 = parent_1.parentNode;\r\n        }\r\n    }\r\n    return $(unique(parents));\r\n}\r\nfunction closest(selector) {\r\n    var closest = this; // eslint-disable-line\r\n    if (typeof selector === 'undefined') {\r\n        return new Dom7([]);\r\n    }\r\n    if (!closest.is(selector)) {\r\n        closest = closest.parents(selector).eq(0);\r\n    }\r\n    return closest;\r\n}\r\nfunction find(selector) {\r\n    var foundElements = [];\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        var found = this[i].querySelectorAll(selector);\r\n        for (var j = 0; j < found.length; j += 1) {\r\n            foundElements.push(found[j]);\r\n        }\r\n    }\r\n    return new Dom7(foundElements);\r\n}\r\nfunction children(selector) {\r\n    var children = []; // eslint-disable-line\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        var childNodes = this[i].childNodes;\r\n        for (var j = 0; j < childNodes.length; j += 1) {\r\n            if (!selector) {\r\n                if (childNodes[j].nodeType === 1)\r\n                    children.push(childNodes[j]);\r\n            }\r\n            else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\r\n                children.push(childNodes[j]);\r\n            }\r\n        }\r\n    }\r\n    return new Dom7(unique(children));\r\n}\r\nfunction remove() {\r\n    for (var i = 0; i < this.length; i += 1) {\r\n        if (this[i].parentNode)\r\n            this[i].parentNode.removeChild(this[i]);\r\n    }\r\n    return this;\r\n}\r\nfunction add() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var dom = this;\r\n    var i;\r\n    var j;\r\n    for (i = 0; i < args.length; i += 1) {\r\n        var toAdd = $(args[i]);\r\n        for (j = 0; j < toAdd.length; j += 1) {\r\n            dom[dom.length] = toAdd[j];\r\n            dom.length += 1;\r\n        }\r\n    }\r\n    return dom;\r\n}\r\n/**\r\n * Swiper 4.5.0\r\n * Most modern mobile touch slider and framework with hardware accelerated transitions\r\n * http://www.idangero.us/swiper/\r\n *\r\n * Copyright 2014-2019 Vladimir Kharlampidi\r\n *\r\n * Released under the MIT License\r\n *\r\n * Released on: February 22, 2019\r\n */\r\nvar Methods = {\r\n    addClass: addClass,\r\n    removeClass: removeClass,\r\n    hasClass: hasClass,\r\n    toggleClass: toggleClass,\r\n    attr: attr,\r\n    removeAttr: removeAttr,\r\n    data: data,\r\n    transform: transform,\r\n    transition: transition,\r\n    on: on,\r\n    off: off,\r\n    trigger: trigger,\r\n    transitionEnd: transitionEnd,\r\n    outerWidth: outerWidth,\r\n    outerHeight: outerHeight,\r\n    offset: offset,\r\n    css: css,\r\n    each: each,\r\n    html: html,\r\n    text: text,\r\n    is: is,\r\n    index: index,\r\n    eq: eq,\r\n    append: append,\r\n    prepend: prepend,\r\n    next: next,\r\n    nextAll: nextAll,\r\n    prev: prev,\r\n    prevAll: prevAll,\r\n    parent: parent,\r\n    parents: parents,\r\n    closest: closest,\r\n    find: find,\r\n    children: children,\r\n    remove: remove,\r\n    add: add,\r\n    styles: styles,\r\n};\r\nObject.keys(Methods).forEach(function (methodName) {\r\n    $.fn[methodName] = Methods[methodName];\r\n});\r\nvar Utils = {\r\n    deleteProps: function (obj) {\r\n        var object = obj;\r\n        Object.keys(object).forEach(function (key) {\r\n            try {\r\n                object[key] = null;\r\n            }\r\n            catch (e) {\r\n                // no getter for object\r\n            }\r\n            try {\r\n                delete object[key];\r\n            }\r\n            catch (e) {\r\n                // something got wrong\r\n            }\r\n        });\r\n    },\r\n    nextTick: function (callback, delay) {\r\n        if (delay === void 0) { delay = 0; }\r\n        return setTimeout(callback, delay);\r\n    },\r\n    now: function () {\r\n        return Date.now();\r\n    },\r\n    getTranslate: function (el, axis) {\r\n        if (axis === void 0) { axis = 'x'; }\r\n        var matrix;\r\n        var curTransform;\r\n        var transformMatrix;\r\n        var curStyle = win.getComputedStyle(el, null);\r\n        if (win.WebKitCSSMatrix) {\r\n            curTransform = curStyle.transform || curStyle.webkitTransform;\r\n            if (curTransform.split(',').length > 6) {\r\n                curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\r\n            }\r\n            // Some old versions of Webkit choke when 'none' is passed; pass\r\n            // empty string instead in this case\r\n            transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\r\n        }\r\n        else {\r\n            transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\r\n            matrix = transformMatrix.toString().split(',');\r\n        }\r\n        if (axis === 'x') {\r\n            // Latest Chrome and webkits Fix\r\n            if (win.WebKitCSSMatrix)\r\n                curTransform = transformMatrix.m41;\r\n            // Crazy IE10 Matrix\r\n            else if (matrix.length === 16)\r\n                curTransform = parseFloat(matrix[12]);\r\n            // Normal Browsers\r\n            else\r\n                curTransform = parseFloat(matrix[4]);\r\n        }\r\n        if (axis === 'y') {\r\n            // Latest Chrome and webkits Fix\r\n            if (win.WebKitCSSMatrix)\r\n                curTransform = transformMatrix.m42;\r\n            // Crazy IE10 Matrix\r\n            else if (matrix.length === 16)\r\n                curTransform = parseFloat(matrix[13]);\r\n            // Normal Browsers\r\n            else\r\n                curTransform = parseFloat(matrix[5]);\r\n        }\r\n        return curTransform || 0;\r\n    },\r\n    parseUrlQuery: function (url) {\r\n        var query = {};\r\n        var urlToParse = url || win.location.href;\r\n        var i;\r\n        var params;\r\n        var param;\r\n        var length;\r\n        if (typeof urlToParse === 'string' && urlToParse.length) {\r\n            urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\r\n            params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\r\n            length = params.length;\r\n            for (i = 0; i < length; i += 1) {\r\n                param = params[i].replace(/#\\S+/g, '').split('=');\r\n                query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\r\n            }\r\n        }\r\n        return query;\r\n    },\r\n    isObject: function (o) {\r\n        return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\r\n    },\r\n    extend: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var to = Object(args[0]);\r\n        for (var i = 1; i < args.length; i += 1) {\r\n            var nextSource = args[i];\r\n            if (nextSource !== undefined && nextSource !== null) {\r\n                var keysArray = Object.keys(Object(nextSource));\r\n                for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\r\n                    var nextKey = keysArray[nextIndex];\r\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\r\n                    if (desc !== undefined && desc.enumerable) {\r\n                        if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\r\n                            Utils.extend(to[nextKey], nextSource[nextKey]);\r\n                        }\r\n                        else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\r\n                            to[nextKey] = {};\r\n                            Utils.extend(to[nextKey], nextSource[nextKey]);\r\n                        }\r\n                        else {\r\n                            to[nextKey] = nextSource[nextKey];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return to;\r\n    },\r\n};\r\nvar Support = (function Support() {\r\n    var testDiv = doc.createElement('div');\r\n    return {\r\n        touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\r\n            return !!((win.navigator.maxTouchPoints > 0) || ('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\r\n        }()),\r\n        pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent || ('maxTouchPoints' in win.navigator && win.navigator.maxTouchPoints > 0)),\r\n        prefixedPointerEvents: !!win.navigator.msPointerEnabled,\r\n        transition: (function checkTransition() {\r\n            var style = testDiv.style;\r\n            return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\r\n        }()),\r\n        transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\r\n            var style = testDiv.style;\r\n            return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\r\n        }()),\r\n        flexbox: (function checkFlexbox() {\r\n            var style = testDiv.style;\r\n            var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\r\n            for (var i = 0; i < styles.length; i += 1) {\r\n                if (styles[i] in style)\r\n                    return true;\r\n            }\r\n            return false;\r\n        }()),\r\n        observer: (function checkObserver() {\r\n            return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\r\n        }()),\r\n        passiveListener: (function checkPassiveListener() {\r\n            var supportsPassive = false;\r\n            try {\r\n                var opts = Object.defineProperty({}, 'passive', {\r\n                    // eslint-disable-next-line\r\n                    get: function () {\r\n                        supportsPassive = true;\r\n                    },\r\n                });\r\n                win.addEventListener('testPassiveListener', null, opts);\r\n            }\r\n            catch (e) {\r\n                // No support\r\n            }\r\n            return supportsPassive;\r\n        }()),\r\n        gestures: (function checkGestures() {\r\n            return 'ongesturestart' in win;\r\n        }()),\r\n    };\r\n}());\r\nvar Browser = (function Browser() {\r\n    function isSafari() {\r\n        var ua = win.navigator.userAgent.toLowerCase();\r\n        return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\r\n    }\r\n    return {\r\n        isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\r\n        isEdge: !!win.navigator.userAgent.match(/Edge/g),\r\n        isSafari: isSafari(),\r\n        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\r\n    };\r\n}());\r\nvar SwiperClass = /** @class */ (function () {\r\n    function SwiperClass(params) {\r\n        if (params === void 0) { params = {}; }\r\n        var self = this;\r\n        self.params = params;\r\n        // Events\r\n        self.eventsListeners = {};\r\n        if (self.params && self.params.on) {\r\n            Object.keys(self.params.on).forEach(function (eventName) {\r\n                self.on(eventName, self.params.on[eventName]);\r\n            });\r\n        }\r\n    }\r\n    SwiperClass.prototype.on = function (events, handler, priority) {\r\n        var self = this;\r\n        if (typeof handler !== 'function')\r\n            return self;\r\n        var method = priority ? 'unshift' : 'push';\r\n        events.split(' ').forEach(function (event) {\r\n            if (!self.eventsListeners[event])\r\n                self.eventsListeners[event] = [];\r\n            self.eventsListeners[event][method](handler);\r\n        });\r\n        return self;\r\n    };\r\n    SwiperClass.prototype.once = function (events, handler, priority) {\r\n        var self = this;\r\n        if (typeof handler !== 'function')\r\n            return self;\r\n        function onceHandler() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            handler.apply(self, args);\r\n            self.off(events, onceHandler);\r\n            if (onceHandler.f7proxy) {\r\n                delete onceHandler.f7proxy;\r\n            }\r\n        }\r\n        onceHandler.f7proxy = handler;\r\n        return self.on(events, onceHandler, priority);\r\n    };\r\n    SwiperClass.prototype.off = function (events, handler) {\r\n        var self = this;\r\n        if (!self.eventsListeners)\r\n            return self;\r\n        events.split(' ').forEach(function (event) {\r\n            if (typeof handler === 'undefined') {\r\n                self.eventsListeners[event] = [];\r\n            }\r\n            else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\r\n                self.eventsListeners[event].forEach(function (eventHandler, index) {\r\n                    if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\r\n                        self.eventsListeners[event].splice(index, 1);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return self;\r\n    };\r\n    SwiperClass.prototype.emit = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var self = this;\r\n        if (!self.eventsListeners)\r\n            return self;\r\n        var events;\r\n        var data;\r\n        var context;\r\n        if (typeof args[0] === 'string' || Array.isArray(args[0])) {\r\n            events = args[0];\r\n            data = args.slice(1, args.length);\r\n            context = self;\r\n        }\r\n        else {\r\n            events = args[0].events;\r\n            data = args[0].data;\r\n            context = args[0].context || self;\r\n        }\r\n        var eventsArray = Array.isArray(events) ? events : events.split(' ');\r\n        eventsArray.forEach(function (event) {\r\n            if (self.eventsListeners && self.eventsListeners[event]) {\r\n                var handlers_1 = [];\r\n                self.eventsListeners[event].forEach(function (eventHandler) {\r\n                    handlers_1.push(eventHandler);\r\n                });\r\n                handlers_1.forEach(function (eventHandler) {\r\n                    eventHandler.apply(context, data);\r\n                });\r\n            }\r\n        });\r\n        return self;\r\n    };\r\n    SwiperClass.prototype.useModulesParams = function (instanceParams) {\r\n        var instance = this;\r\n        if (!instance.modules)\r\n            return;\r\n        Object.keys(instance.modules).forEach(function (moduleName) {\r\n            var module = instance.modules[moduleName];\r\n            // Extend params\r\n            if (module.params) {\r\n                Utils.extend(instanceParams, module.params);\r\n            }\r\n        });\r\n    };\r\n    SwiperClass.prototype.useModules = function (modulesParams) {\r\n        if (modulesParams === void 0) { modulesParams = {}; }\r\n        var instance = this;\r\n        if (!instance.modules)\r\n            return;\r\n        Object.keys(instance.modules).forEach(function (moduleName) {\r\n            var module = instance.modules[moduleName];\r\n            var moduleParams = modulesParams[moduleName] || {};\r\n            // Extend instance methods and props\r\n            if (module.instance) {\r\n                Object.keys(module.instance).forEach(function (modulePropName) {\r\n                    var moduleProp = module.instance[modulePropName];\r\n                    if (typeof moduleProp === 'function') {\r\n                        instance[modulePropName] = moduleProp.bind(instance);\r\n                    }\r\n                    else {\r\n                        instance[modulePropName] = moduleProp;\r\n                    }\r\n                });\r\n            }\r\n            // Add event listeners\r\n            if (module.on && instance.on) {\r\n                Object.keys(module.on).forEach(function (moduleEventName) {\r\n                    instance.on(moduleEventName, module.on[moduleEventName]);\r\n                });\r\n            }\r\n            // Module create callback\r\n            if (module.create) {\r\n                module.create.bind(instance)(moduleParams);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(SwiperClass, \"components\", {\r\n        set: function (components) {\r\n            var Class = this;\r\n            if (!Class.use)\r\n                return;\r\n            Class.use(components);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SwiperClass.installModule = function (module) {\r\n        var params = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            params[_i - 1] = arguments[_i];\r\n        }\r\n        var Class = this;\r\n        if (!Class.prototype.modules)\r\n            Class.prototype.modules = {};\r\n        var name = module.name || (Object.keys(Class.prototype.modules).length + \"_\" + Utils.now());\r\n        Class.prototype.modules[name] = module;\r\n        // Prototype\r\n        if (module.proto) {\r\n            Object.keys(module.proto).forEach(function (key) {\r\n                Class.prototype[key] = module.proto[key];\r\n            });\r\n        }\r\n        // Class\r\n        if (module.static) {\r\n            Object.keys(module.static).forEach(function (key) {\r\n                Class[key] = module.static[key];\r\n            });\r\n        }\r\n        // Callback\r\n        if (module.install) {\r\n            module.install.apply(Class, params);\r\n        }\r\n        return Class;\r\n    };\r\n    SwiperClass.use = function (module) {\r\n        var params = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            params[_i - 1] = arguments[_i];\r\n        }\r\n        var Class = this;\r\n        if (Array.isArray(module)) {\r\n            module.forEach(function (m) { return Class.installModule(m); });\r\n            return Class;\r\n        }\r\n        return Class.installModule.apply(Class, [module].concat(params));\r\n    };\r\n    return SwiperClass;\r\n}());\r\nfunction updateSize() {\r\n    var swiper = this;\r\n    var width;\r\n    var height;\r\n    var $el = swiper.$el;\r\n    if (typeof swiper.params.width !== 'undefined') {\r\n        width = swiper.params.width;\r\n    }\r\n    else {\r\n        width = $el[0].clientWidth;\r\n    }\r\n    if (typeof swiper.params.height !== 'undefined') {\r\n        height = swiper.params.height;\r\n    }\r\n    else {\r\n        height = $el[0].clientHeight;\r\n    }\r\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\r\n        return;\r\n    }\r\n    // Subtract paddings\r\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\r\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\r\n    Utils.extend(swiper, {\r\n        width: width,\r\n        height: height,\r\n        size: swiper.isHorizontal() ? width : height,\r\n    });\r\n}\r\nfunction updateSlides() {\r\n    var swiper = this;\r\n    var params = swiper.params;\r\n    var $wrapperEl = swiper.$wrapperEl, swiperSize = swiper.size, rtl = swiper.rtlTranslate, wrongRTL = swiper.wrongRTL;\r\n    var isVirtual = swiper.virtual && params.virtual.enabled;\r\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\r\n    var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\r\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\r\n    var snapGrid = [];\r\n    var slidesGrid = [];\r\n    var slidesSizesGrid = [];\r\n    var offsetBefore = params.slidesOffsetBefore;\r\n    if (typeof offsetBefore === 'function') {\r\n        offsetBefore = params.slidesOffsetBefore.call(swiper);\r\n    }\r\n    var offsetAfter = params.slidesOffsetAfter;\r\n    if (typeof offsetAfter === 'function') {\r\n        offsetAfter = params.slidesOffsetAfter.call(swiper);\r\n    }\r\n    var previousSnapGridLength = swiper.snapGrid.length;\r\n    var previousSlidesGridLength = swiper.snapGrid.length;\r\n    var spaceBetween = params.spaceBetween;\r\n    var slidePosition = -offsetBefore;\r\n    var prevSlideSize = 0;\r\n    var index = 0;\r\n    if (typeof swiperSize === 'undefined') {\r\n        return;\r\n    }\r\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\r\n        spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\r\n    }\r\n    swiper.virtualSize = -spaceBetween;\r\n    // reset margins\r\n    if (rtl)\r\n        slides.css({ marginLeft: '', marginTop: '' });\r\n    else\r\n        slides.css({ marginRight: '', marginBottom: '' });\r\n    var slidesNumberEvenToRows;\r\n    if (params.slidesPerColumn > 1) {\r\n        if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\r\n            slidesNumberEvenToRows = slidesLength;\r\n        }\r\n        else {\r\n            slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\r\n        }\r\n        if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\r\n            slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\r\n        }\r\n    }\r\n    // Calc slides\r\n    var slideSize;\r\n    var slidesPerColumn = params.slidesPerColumn;\r\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\r\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\r\n    for (var i = 0; i < slidesLength; i += 1) {\r\n        slideSize = 0;\r\n        var slide_1 = slides.eq(i);\r\n        if (params.slidesPerColumn > 1) {\r\n            // Set slides order\r\n            var newSlideOrderIndex = void 0;\r\n            var column = void 0;\r\n            var row = void 0;\r\n            if (params.slidesPerColumnFill === 'column') {\r\n                column = Math.floor(i / slidesPerColumn);\r\n                row = i - (column * slidesPerColumn);\r\n                if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\r\n                    row += 1;\r\n                    if (row >= slidesPerColumn) {\r\n                        row = 0;\r\n                        column += 1;\r\n                    }\r\n                }\r\n                newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\r\n                slide_1\r\n                    .css({\r\n                    '-webkit-box-ordinal-group': newSlideOrderIndex,\r\n                    '-moz-box-ordinal-group': newSlideOrderIndex,\r\n                    '-ms-flex-order': newSlideOrderIndex,\r\n                    '-webkit-order': newSlideOrderIndex,\r\n                    order: newSlideOrderIndex,\r\n                });\r\n            }\r\n            else {\r\n                row = Math.floor(i / slidesPerRow);\r\n                column = i - (row * slidesPerRow);\r\n            }\r\n            slide_1\r\n                .css(\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left'), (row !== 0 && params.spaceBetween) && (params.spaceBetween + \"px\"))\r\n                .attr('data-swiper-column', column)\r\n                .attr('data-swiper-row', row);\r\n        }\r\n        if (slide_1.css('display') === 'none')\r\n            continue; // eslint-disable-line\r\n        if (params.slidesPerView === 'auto') {\r\n            var slideStyles = win.getComputedStyle(slide_1[0], null);\r\n            var currentTransform = slide_1[0].style.transform;\r\n            var currentWebKitTransform = slide_1[0].style.webkitTransform;\r\n            if (currentTransform) {\r\n                slide_1[0].style.transform = 'none';\r\n            }\r\n            if (currentWebKitTransform) {\r\n                slide_1[0].style.webkitTransform = 'none';\r\n            }\r\n            if (params.roundLengths) {\r\n                slideSize = swiper.isHorizontal()\r\n                    ? slide_1.outerWidth(true)\r\n                    : slide_1.outerHeight(true);\r\n            }\r\n            else {\r\n                // eslint-disable-next-line\r\n                if (swiper.isHorizontal()) {\r\n                    var width = parseFloat(slideStyles.getPropertyValue('width'));\r\n                    var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\r\n                    var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\r\n                    var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\r\n                    var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\r\n                    var boxSizing = slideStyles.getPropertyValue('box-sizing');\r\n                    if (boxSizing && boxSizing === 'border-box') {\r\n                        slideSize = width + marginLeft + marginRight;\r\n                    }\r\n                    else {\r\n                        slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\r\n                    }\r\n                }\r\n                else {\r\n                    var height = parseFloat(slideStyles.getPropertyValue('height'));\r\n                    var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\r\n                    var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\r\n                    var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\r\n                    var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\r\n                    var boxSizing = slideStyles.getPropertyValue('box-sizing');\r\n                    if (boxSizing && boxSizing === 'border-box') {\r\n                        slideSize = height + marginTop + marginBottom;\r\n                    }\r\n                    else {\r\n                        slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\r\n                    }\r\n                }\r\n            }\r\n            if (currentTransform) {\r\n                slide_1[0].style.transform = currentTransform;\r\n            }\r\n            if (currentWebKitTransform) {\r\n                slide_1[0].style.webkitTransform = currentWebKitTransform;\r\n            }\r\n            if (params.roundLengths)\r\n                slideSize = Math.floor(slideSize);\r\n        }\r\n        else {\r\n            slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\r\n            if (params.roundLengths)\r\n                slideSize = Math.floor(slideSize);\r\n            if (slides[i]) {\r\n                if (swiper.isHorizontal()) {\r\n                    slides[i].style.width = slideSize + \"px\";\r\n                }\r\n                else {\r\n                    slides[i].style.height = slideSize + \"px\";\r\n                }\r\n            }\r\n        }\r\n        if (slides[i]) {\r\n            slides[i].swiperSlideSize = slideSize;\r\n        }\r\n        slidesSizesGrid.push(slideSize);\r\n        if (params.centeredSlides) {\r\n            slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\r\n            if (prevSlideSize === 0 && i !== 0)\r\n                slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\r\n            if (i === 0)\r\n                slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\r\n            if (Math.abs(slidePosition) < 1 / 1000)\r\n                slidePosition = 0;\r\n            if (params.roundLengths)\r\n                slidePosition = Math.floor(slidePosition);\r\n            if ((index) % params.slidesPerGroup === 0)\r\n                snapGrid.push(slidePosition);\r\n            slidesGrid.push(slidePosition);\r\n        }\r\n        else {\r\n            if (params.roundLengths)\r\n                slidePosition = Math.floor(slidePosition);\r\n            if ((index) % params.slidesPerGroup === 0)\r\n                snapGrid.push(slidePosition);\r\n            slidesGrid.push(slidePosition);\r\n            slidePosition = slidePosition + slideSize + spaceBetween;\r\n        }\r\n        swiper.virtualSize += slideSize + spaceBetween;\r\n        prevSlideSize = slideSize;\r\n        index += 1;\r\n    }\r\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\r\n    var newSlidesGrid;\r\n    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\r\n        $wrapperEl.css({ width: swiper.virtualSize + params.spaceBetween + \"px\" });\r\n    }\r\n    if (!Support.flexbox || params.setWrapperSize) {\r\n        if (swiper.isHorizontal())\r\n            $wrapperEl.css({ width: swiper.virtualSize + params.spaceBetween + \"px\" });\r\n        else\r\n            $wrapperEl.css({ height: swiper.virtualSize + params.spaceBetween + \"px\" });\r\n    }\r\n    if (params.slidesPerColumn > 1) {\r\n        swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\r\n        swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\r\n        if (swiper.isHorizontal())\r\n            $wrapperEl.css({ width: swiper.virtualSize + params.spaceBetween + \"px\" });\r\n        else\r\n            $wrapperEl.css({ height: swiper.virtualSize + params.spaceBetween + \"px\" });\r\n        if (params.centeredSlides) {\r\n            newSlidesGrid = [];\r\n            for (var i = 0; i < snapGrid.length; i += 1) {\r\n                var slidesGridItem = snapGrid[i];\r\n                if (params.roundLengths)\r\n                    slidesGridItem = Math.floor(slidesGridItem);\r\n                if (snapGrid[i] < swiper.virtualSize + snapGrid[0])\r\n                    newSlidesGrid.push(slidesGridItem);\r\n            }\r\n            snapGrid = newSlidesGrid;\r\n        }\r\n    }\r\n    // Remove last grid elements depending on width\r\n    if (!params.centeredSlides) {\r\n        newSlidesGrid = [];\r\n        for (var i = 0; i < snapGrid.length; i += 1) {\r\n            var slidesGridItem = snapGrid[i];\r\n            if (params.roundLengths)\r\n                slidesGridItem = Math.floor(slidesGridItem);\r\n            if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\r\n                newSlidesGrid.push(slidesGridItem);\r\n            }\r\n        }\r\n        snapGrid = newSlidesGrid;\r\n        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\r\n            snapGrid.push(swiper.virtualSize - swiperSize);\r\n        }\r\n    }\r\n    if (snapGrid.length === 0)\r\n        snapGrid = [0];\r\n    if (params.spaceBetween !== 0) {\r\n        if (swiper.isHorizontal()) {\r\n            if (rtl)\r\n                slides.css({ marginLeft: spaceBetween + \"px\" });\r\n            else\r\n                slides.css({ marginRight: spaceBetween + \"px\" });\r\n        }\r\n        else\r\n            slides.css({ marginBottom: spaceBetween + \"px\" });\r\n    }\r\n    if (params.centerInsufficientSlides) {\r\n        var allSlidesSize_1 = 0;\r\n        slidesSizesGrid.forEach(function (slideSizeValue) {\r\n            allSlidesSize_1 += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\r\n        });\r\n        allSlidesSize_1 -= params.spaceBetween;\r\n        if (allSlidesSize_1 < swiperSize) {\r\n            var allSlidesOffset_1 = (swiperSize - allSlidesSize_1) / 2;\r\n            snapGrid.forEach(function (snap, snapIndex) {\r\n                snapGrid[snapIndex] = snap - allSlidesOffset_1;\r\n            });\r\n            slidesGrid.forEach(function (snap, snapIndex) {\r\n                slidesGrid[snapIndex] = snap + allSlidesOffset_1;\r\n            });\r\n        }\r\n    }\r\n    Utils.extend(swiper, {\r\n        slides: slides,\r\n        snapGrid: snapGrid,\r\n        slidesGrid: slidesGrid,\r\n        slidesSizesGrid: slidesSizesGrid,\r\n    });\r\n    if (slidesLength !== previousSlidesLength) {\r\n        swiper.emit('slidesLengthChange');\r\n    }\r\n    if (snapGrid.length !== previousSnapGridLength) {\r\n        if (swiper.params.watchOverflow)\r\n            swiper.checkOverflow();\r\n        swiper.emit('snapGridLengthChange');\r\n    }\r\n    if (slidesGrid.length !== previousSlidesGridLength) {\r\n        swiper.emit('slidesGridLengthChange');\r\n    }\r\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\r\n        swiper.updateSlidesOffset();\r\n    }\r\n}\r\nfunction updateAutoHeight(speed) {\r\n    var swiper = this;\r\n    var activeSlides = [];\r\n    var newHeight = 0;\r\n    var i;\r\n    if (typeof speed === 'number') {\r\n        swiper.setTransition(speed);\r\n    }\r\n    else if (speed === true) {\r\n        swiper.setTransition(swiper.params.speed);\r\n    }\r\n    // Find slides currently in view\r\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\r\n        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\r\n            var index_1 = swiper.activeIndex + i;\r\n            if (index_1 > swiper.slides.length)\r\n                break;\r\n            activeSlides.push(swiper.slides.eq(index_1)[0]);\r\n        }\r\n    }\r\n    else {\r\n        activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\r\n    }\r\n    // Find new height from highest slide in view\r\n    for (i = 0; i < activeSlides.length; i += 1) {\r\n        if (typeof activeSlides[i] !== 'undefined') {\r\n            var height = activeSlides[i].offsetHeight;\r\n            newHeight = height > newHeight ? height : newHeight;\r\n        }\r\n    }\r\n    // Update Height\r\n    if (newHeight)\r\n        swiper.$wrapperEl.css('height', newHeight + \"px\");\r\n}\r\nfunction updateSlidesOffset() {\r\n    var swiper = this;\r\n    var slides = swiper.slides;\r\n    for (var i = 0; i < slides.length; i += 1) {\r\n        slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\r\n    }\r\n}\r\nfunction updateSlidesProgress(translate) {\r\n    if (translate === void 0) { translate = (this && this.translate) || 0; }\r\n    var swiper = this;\r\n    var params = swiper.params;\r\n    var slides = swiper.slides, rtl = swiper.rtlTranslate;\r\n    if (slides.length === 0)\r\n        return;\r\n    if (typeof slides[0].swiperSlideOffset === 'undefined')\r\n        swiper.updateSlidesOffset();\r\n    var offsetCenter = -translate;\r\n    if (rtl)\r\n        offsetCenter = translate;\r\n    // Visible Slides\r\n    slides.removeClass(params.slideVisibleClass);\r\n    swiper.visibleSlidesIndexes = [];\r\n    swiper.visibleSlides = [];\r\n    for (var i = 0; i < slides.length; i += 1) {\r\n        var slide_2 = slides[i];\r\n        var slideProgress = ((offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide_2.swiperSlideOffset) / (slide_2.swiperSlideSize + params.spaceBetween);\r\n        if (params.watchSlidesVisibility) {\r\n            var slideBefore = -(offsetCenter - slide_2.swiperSlideOffset);\r\n            var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\r\n            var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\r\n                || (slideAfter > 0 && slideAfter <= swiper.size)\r\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\r\n            if (isVisible) {\r\n                swiper.visibleSlides.push(slide_2);\r\n                swiper.visibleSlidesIndexes.push(i);\r\n                slides.eq(i).addClass(params.slideVisibleClass);\r\n            }\r\n        }\r\n        slide_2.progress = rtl ? -slideProgress : slideProgress;\r\n    }\r\n    swiper.visibleSlides = $(swiper.visibleSlides);\r\n}\r\nfunction updateProgress(translate) {\r\n    if (translate === void 0) { translate = (this && this.translate) || 0; }\r\n    var swiper = this;\r\n    var params = swiper.params;\r\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n    var progress = swiper.progress, isBeginning = swiper.isBeginning, isEnd = swiper.isEnd;\r\n    var wasBeginning = isBeginning;\r\n    var wasEnd = isEnd;\r\n    if (translatesDiff === 0) {\r\n        progress = 0;\r\n        isBeginning = true;\r\n        isEnd = true;\r\n    }\r\n    else {\r\n        progress = (translate - swiper.minTranslate()) / (translatesDiff);\r\n        isBeginning = progress <= 0;\r\n        isEnd = progress >= 1;\r\n    }\r\n    Utils.extend(swiper, {\r\n        progress: progress,\r\n        isBeginning: isBeginning,\r\n        isEnd: isEnd,\r\n    });\r\n    if (params.watchSlidesProgress || params.watchSlidesVisibility)\r\n        swiper.updateSlidesProgress(translate);\r\n    if (isBeginning && !wasBeginning) {\r\n        swiper.emit('reachBeginning toEdge');\r\n    }\r\n    if (isEnd && !wasEnd) {\r\n        swiper.emit('reachEnd toEdge');\r\n    }\r\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\r\n        swiper.emit('fromEdge');\r\n    }\r\n    swiper.emit('progress', progress);\r\n}\r\nfunction updateSlidesClasses() {\r\n    var swiper = this;\r\n    var slides = swiper.slides, params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex, realIndex = swiper.realIndex;\r\n    var isVirtual = swiper.virtual && params.virtual.enabled;\r\n    slides.removeClass(params.slideActiveClass + \" \" + params.slideNextClass + \" \" + params.slidePrevClass + \" \" + params.slideDuplicateActiveClass + \" \" + params.slideDuplicateNextClass + \" \" + params.slideDuplicatePrevClass);\r\n    var activeSlide;\r\n    if (isVirtual) {\r\n        activeSlide = swiper.$wrapperEl.find(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\");\r\n    }\r\n    else {\r\n        activeSlide = slides.eq(activeIndex);\r\n    }\r\n    // Active classes\r\n    activeSlide.addClass(params.slideActiveClass);\r\n    if (params.loop) {\r\n        // Duplicate to all looped slides\r\n        if (activeSlide.hasClass(params.slideDuplicateClass)) {\r\n            $wrapperEl\r\n                .children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\")\r\n                .addClass(params.slideDuplicateActiveClass);\r\n        }\r\n        else {\r\n            $wrapperEl\r\n                .children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\")\r\n                .addClass(params.slideDuplicateActiveClass);\r\n        }\r\n    }\r\n    // Next Slide\r\n    var nextSlide = activeSlide.nextAll(\".\" + params.slideClass).eq(0).addClass(params.slideNextClass);\r\n    if (params.loop && nextSlide.length === 0) {\r\n        nextSlide = slides.eq(0);\r\n        nextSlide.addClass(params.slideNextClass);\r\n    }\r\n    // Prev Slide\r\n    var prevSlide = activeSlide.prevAll(\".\" + params.slideClass).eq(0).addClass(params.slidePrevClass);\r\n    if (params.loop && prevSlide.length === 0) {\r\n        prevSlide = slides.eq(-1);\r\n        prevSlide.addClass(params.slidePrevClass);\r\n    }\r\n    if (params.loop) {\r\n        // Duplicate to all looped slides\r\n        if (nextSlide.hasClass(params.slideDuplicateClass)) {\r\n            $wrapperEl\r\n                .children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\")\r\n                .addClass(params.slideDuplicateNextClass);\r\n        }\r\n        else {\r\n            $wrapperEl\r\n                .children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\")\r\n                .addClass(params.slideDuplicateNextClass);\r\n        }\r\n        if (prevSlide.hasClass(params.slideDuplicateClass)) {\r\n            $wrapperEl\r\n                .children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\")\r\n                .addClass(params.slideDuplicatePrevClass);\r\n        }\r\n        else {\r\n            $wrapperEl\r\n                .children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\")\r\n                .addClass(params.slideDuplicatePrevClass);\r\n        }\r\n    }\r\n}\r\nfunction updateActiveIndex(newActiveIndex) {\r\n    var swiper = this;\r\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n    var slidesGrid = swiper.slidesGrid, snapGrid = swiper.snapGrid, params = swiper.params, previousIndex = swiper.activeIndex, previousRealIndex = swiper.realIndex, previousSnapIndex = swiper.snapIndex;\r\n    var activeIndex = newActiveIndex;\r\n    var snapIndex;\r\n    if (typeof activeIndex === 'undefined') {\r\n        for (var i = 0; i < slidesGrid.length; i += 1) {\r\n            if (typeof slidesGrid[i + 1] !== 'undefined') {\r\n                if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\r\n                    activeIndex = i;\r\n                }\r\n                else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\r\n                    activeIndex = i + 1;\r\n                }\r\n            }\r\n            else if (translate >= slidesGrid[i]) {\r\n                activeIndex = i;\r\n            }\r\n        }\r\n        // Normalize slideIndex\r\n        if (params.normalizeSlideIndex) {\r\n            if (activeIndex < 0 || typeof activeIndex === 'undefined')\r\n                activeIndex = 0;\r\n        }\r\n    }\r\n    if (snapGrid.indexOf(translate) >= 0) {\r\n        snapIndex = snapGrid.indexOf(translate);\r\n    }\r\n    else {\r\n        snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\r\n    }\r\n    if (snapIndex >= snapGrid.length)\r\n        snapIndex = snapGrid.length - 1;\r\n    if (activeIndex === previousIndex) {\r\n        if (snapIndex !== previousSnapIndex) {\r\n            swiper.snapIndex = snapIndex;\r\n            swiper.emit('snapIndexChange');\r\n        }\r\n        return;\r\n    }\r\n    // Get real index\r\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\r\n    Utils.extend(swiper, {\r\n        snapIndex: snapIndex,\r\n        realIndex: realIndex,\r\n        previousIndex: previousIndex,\r\n        activeIndex: activeIndex,\r\n    });\r\n    swiper.emit('activeIndexChange');\r\n    swiper.emit('snapIndexChange');\r\n    if (previousRealIndex !== realIndex) {\r\n        swiper.emit('realIndexChange');\r\n    }\r\n    swiper.emit('slideChange');\r\n}\r\nfunction updateClickedSlide(e) {\r\n    var swiper = this;\r\n    var params = swiper.params;\r\n    var slide = $(e.target).closest(\".\" + params.slideClass)[0];\r\n    var slideFound = false;\r\n    if (slide) {\r\n        for (var i = 0; i < swiper.slides.length; i += 1) {\r\n            if (swiper.slides[i] === slide)\r\n                slideFound = true;\r\n        }\r\n    }\r\n    if (slide && slideFound) {\r\n        swiper.clickedSlide = slide;\r\n        if (swiper.virtual && swiper.params.virtual.enabled) {\r\n            swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\r\n        }\r\n        else {\r\n            swiper.clickedIndex = $(slide).index();\r\n        }\r\n    }\r\n    else {\r\n        swiper.clickedSlide = undefined;\r\n        swiper.clickedIndex = undefined;\r\n        return;\r\n    }\r\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\r\n        swiper.slideToClickedSlide();\r\n    }\r\n}\r\nvar update = {\r\n    updateSize: updateSize,\r\n    updateSlides: updateSlides,\r\n    updateAutoHeight: updateAutoHeight,\r\n    updateSlidesOffset: updateSlidesOffset,\r\n    updateSlidesProgress: updateSlidesProgress,\r\n    updateProgress: updateProgress,\r\n    updateSlidesClasses: updateSlidesClasses,\r\n    updateActiveIndex: updateActiveIndex,\r\n    updateClickedSlide: updateClickedSlide,\r\n};\r\nfunction getTranslate(axis) {\r\n    if (axis === void 0) { axis = this.isHorizontal() ? 'x' : 'y'; }\r\n    var swiper = this;\r\n    var params = swiper.params, rtl = swiper.rtlTranslate, translate = swiper.translate, $wrapperEl = swiper.$wrapperEl;\r\n    if (params.virtualTranslate) {\r\n        return rtl ? -translate : translate;\r\n    }\r\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\r\n    if (rtl)\r\n        currentTranslate = -currentTranslate;\r\n    return currentTranslate || 0;\r\n}\r\nfunction setTranslate(translate, byController) {\r\n    var swiper = this;\r\n    var rtl = swiper.rtlTranslate, params = swiper.params, $wrapperEl = swiper.$wrapperEl, progress = swiper.progress;\r\n    var x = 0;\r\n    var y = 0;\r\n    var z = 0;\r\n    if (swiper.isHorizontal()) {\r\n        x = rtl ? -translate : translate;\r\n    }\r\n    else {\r\n        y = translate;\r\n    }\r\n    if (params.roundLengths) {\r\n        x = Math.floor(x);\r\n        y = Math.floor(y);\r\n    }\r\n    if (!params.virtualTranslate) {\r\n        if (Support.transforms3d)\r\n            $wrapperEl.transform(\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\");\r\n        else\r\n            $wrapperEl.transform(\"translate(\" + x + \"px, \" + y + \"px)\");\r\n    }\r\n    swiper.previousTranslate = swiper.translate;\r\n    swiper.translate = swiper.isHorizontal() ? x : y;\r\n    // Check if we need to update progress\r\n    var newProgress;\r\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n    if (translatesDiff === 0) {\r\n        newProgress = 0;\r\n    }\r\n    else {\r\n        newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\r\n    }\r\n    if (newProgress !== progress) {\r\n        swiper.updateProgress(translate);\r\n    }\r\n    swiper.emit('setTranslate', swiper.translate, byController);\r\n}\r\nfunction minTranslate() {\r\n    return (-this.snapGrid[0]);\r\n}\r\nfunction maxTranslate() {\r\n    return (-this.snapGrid[this.snapGrid.length - 1]);\r\n}\r\nvar translate = {\r\n    getTranslate: getTranslate,\r\n    setTranslate: setTranslate,\r\n    minTranslate: minTranslate,\r\n    maxTranslate: maxTranslate,\r\n};\r\nfunction setTransition(duration, byController) {\r\n    var swiper = this;\r\n    swiper.$wrapperEl.transition(duration);\r\n    swiper.emit('setTransition', duration, byController);\r\n}\r\nfunction transitionStart(runCallbacks, direction) {\r\n    if (runCallbacks === void 0) { runCallbacks = true; }\r\n    var swiper = this;\r\n    var activeIndex = swiper.activeIndex, params = swiper.params, previousIndex = swiper.previousIndex;\r\n    if (params.autoHeight) {\r\n        swiper.updateAutoHeight();\r\n    }\r\n    var dir = direction;\r\n    if (!dir) {\r\n        if (activeIndex > previousIndex)\r\n            dir = 'next';\r\n        else if (activeIndex < previousIndex)\r\n            dir = 'prev';\r\n        else\r\n            dir = 'reset';\r\n    }\r\n    swiper.emit('transitionStart');\r\n    if (runCallbacks && activeIndex !== previousIndex) {\r\n        if (dir === 'reset') {\r\n            swiper.emit('slideResetTransitionStart');\r\n            return;\r\n        }\r\n        swiper.emit('slideChangeTransitionStart');\r\n        if (dir === 'next') {\r\n            swiper.emit('slideNextTransitionStart');\r\n        }\r\n        else {\r\n            swiper.emit('slidePrevTransitionStart');\r\n        }\r\n    }\r\n}\r\nfunction transitionEnd$1(runCallbacks, direction) {\r\n    if (runCallbacks === void 0) { runCallbacks = true; }\r\n    var swiper = this;\r\n    var activeIndex = swiper.activeIndex, previousIndex = swiper.previousIndex;\r\n    swiper.animating = false;\r\n    swiper.setTransition(0);\r\n    var dir = direction;\r\n    if (!dir) {\r\n        if (activeIndex > previousIndex)\r\n            dir = 'next';\r\n        else if (activeIndex < previousIndex)\r\n            dir = 'prev';\r\n        else\r\n            dir = 'reset';\r\n    }\r\n    swiper.emit('transitionEnd');\r\n    if (runCallbacks && activeIndex !== previousIndex) {\r\n        if (dir === 'reset') {\r\n            swiper.emit('slideResetTransitionEnd');\r\n            return;\r\n        }\r\n        swiper.emit('slideChangeTransitionEnd');\r\n        if (dir === 'next') {\r\n            swiper.emit('slideNextTransitionEnd');\r\n        }\r\n        else {\r\n            swiper.emit('slidePrevTransitionEnd');\r\n        }\r\n    }\r\n}\r\nvar transition$1 = {\r\n    setTransition: setTransition,\r\n    transitionStart: transitionStart,\r\n    transitionEnd: transitionEnd$1,\r\n};\r\nfunction slideTo(index, speed, runCallbacks, internal) {\r\n    if (index === void 0) { index = 0; }\r\n    if (speed === void 0) { speed = this.params.speed; }\r\n    if (runCallbacks === void 0) { runCallbacks = true; }\r\n    var swiper = this;\r\n    var slideIndex = index;\r\n    if (slideIndex < 0)\r\n        slideIndex = 0;\r\n    var params = swiper.params, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, previousIndex = swiper.previousIndex, activeIndex = swiper.activeIndex, rtl = swiper.rtlTranslate;\r\n    if (swiper.animating && params.preventInteractionOnTransition) {\r\n        return false;\r\n    }\r\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\r\n    if (snapIndex >= snapGrid.length)\r\n        snapIndex = snapGrid.length - 1;\r\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\r\n        swiper.emit('beforeSlideChangeStart');\r\n    }\r\n    var translate = -snapGrid[snapIndex];\r\n    // Update progress\r\n    swiper.updateProgress(translate);\r\n    // Normalize slideIndex\r\n    if (params.normalizeSlideIndex) {\r\n        for (var i = 0; i < slidesGrid.length; i += 1) {\r\n            if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\r\n                slideIndex = i;\r\n            }\r\n        }\r\n    }\r\n    // Directions locks\r\n    if (swiper.initialized && slideIndex !== activeIndex) {\r\n        if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\r\n            return false;\r\n        }\r\n        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\r\n            if ((activeIndex || 0) !== slideIndex)\r\n                return false;\r\n        }\r\n    }\r\n    var direction;\r\n    if (slideIndex > activeIndex)\r\n        direction = 'next';\r\n    else if (slideIndex < activeIndex)\r\n        direction = 'prev';\r\n    else\r\n        direction = 'reset';\r\n    // Update Index\r\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\r\n        swiper.updateActiveIndex(slideIndex);\r\n        // Update Height\r\n        if (params.autoHeight) {\r\n            swiper.updateAutoHeight();\r\n        }\r\n        swiper.updateSlidesClasses();\r\n        if (params.effect !== 'slide') {\r\n            swiper.setTranslate(translate);\r\n        }\r\n        if (direction !== 'reset') {\r\n            swiper.transitionStart(runCallbacks, direction);\r\n            swiper.transitionEnd(runCallbacks, direction);\r\n        }\r\n        return false;\r\n    }\r\n    if (speed === 0 || !Support.transition) {\r\n        swiper.setTransition(0);\r\n        swiper.setTranslate(translate);\r\n        swiper.updateActiveIndex(slideIndex);\r\n        swiper.updateSlidesClasses();\r\n        swiper.emit('beforeTransitionStart', speed, internal);\r\n        swiper.transitionStart(runCallbacks, direction);\r\n        swiper.transitionEnd(runCallbacks, direction);\r\n    }\r\n    else {\r\n        swiper.setTransition(speed);\r\n        swiper.setTranslate(translate);\r\n        swiper.updateActiveIndex(slideIndex);\r\n        swiper.updateSlidesClasses();\r\n        swiper.emit('beforeTransitionStart', speed, internal);\r\n        swiper.transitionStart(runCallbacks, direction);\r\n        if (!swiper.animating) {\r\n            swiper.animating = true;\r\n            if (!swiper.onSlideToWrapperTransitionEnd) {\r\n                swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\r\n                    if (!swiper || swiper.destroyed)\r\n                        return;\r\n                    if (e.target !== this)\r\n                        return;\r\n                    swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n                    swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\r\n                    swiper.onSlideToWrapperTransitionEnd = null;\r\n                    delete swiper.onSlideToWrapperTransitionEnd;\r\n                    swiper.transitionEnd(runCallbacks, direction);\r\n                };\r\n            }\r\n            swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n            swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction slideToLoop(index, speed, runCallbacks, internal) {\r\n    if (index === void 0) { index = 0; }\r\n    if (speed === void 0) { speed = this.params.speed; }\r\n    if (runCallbacks === void 0) { runCallbacks = true; }\r\n    var swiper = this;\r\n    var newIndex = index;\r\n    if (swiper.params.loop) {\r\n        newIndex += swiper.loopedSlides;\r\n    }\r\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\r\n}\r\n/* eslint no-unused-vars: \"off\" */\r\nfunction slideNext(speed, runCallbacks, internal) {\r\n    if (speed === void 0) { speed = this.params.speed; }\r\n    if (runCallbacks === void 0) { runCallbacks = true; }\r\n    var swiper = this;\r\n    var params = swiper.params, animating = swiper.animating;\r\n    if (params.loop) {\r\n        if (animating)\r\n            return false;\r\n        swiper.loopFix();\r\n        // eslint-disable-next-line\r\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n        return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\r\n    }\r\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\r\n}\r\n/* eslint no-unused-vars: \"off\" */\r\nfunction slidePrev(speed, runCallbacks, internal) {\r\n    if (speed === void 0) { speed = this.params.speed; }\r\n    if (runCallbacks === void 0) { runCallbacks = true; }\r\n    var swiper = this;\r\n    var params = swiper.params, animating = swiper.animating, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, rtlTranslate = swiper.rtlTranslate;\r\n    if (params.loop) {\r\n        if (animating)\r\n            return false;\r\n        swiper.loopFix();\r\n        // eslint-disable-next-line\r\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n    }\r\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\r\n    function normalize(val) {\r\n        if (val < 0)\r\n            return -Math.floor(Math.abs(val));\r\n        return Math.floor(val);\r\n    }\r\n    var normalizedTranslate = normalize(translate);\r\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\r\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\r\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\r\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\r\n    var prevIndex;\r\n    if (typeof prevSnap !== 'undefined') {\r\n        prevIndex = slidesGrid.indexOf(prevSnap);\r\n        if (prevIndex < 0)\r\n            prevIndex = swiper.activeIndex - 1;\r\n    }\r\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\r\n}\r\n/* eslint no-unused-vars: \"off\" */\r\nfunction slideReset(speed, runCallbacks, internal) {\r\n    if (speed === void 0) { speed = this.params.speed; }\r\n    if (runCallbacks === void 0) { runCallbacks = true; }\r\n    var swiper = this;\r\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\r\n}\r\n/* eslint no-unused-vars: \"off\" */\r\nfunction slideToClosest(speed, runCallbacks, internal) {\r\n    if (speed === void 0) { speed = this.params.speed; }\r\n    if (runCallbacks === void 0) { runCallbacks = true; }\r\n    var swiper = this;\r\n    var index = swiper.activeIndex;\r\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\r\n    if (snapIndex < swiper.snapGrid.length - 1) {\r\n        var translate_1 = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n        var currentSnap = swiper.snapGrid[snapIndex];\r\n        var nextSnap = swiper.snapGrid[snapIndex + 1];\r\n        if ((translate_1 - currentSnap) > (nextSnap - currentSnap) / 2) {\r\n            index = swiper.params.slidesPerGroup;\r\n        }\r\n    }\r\n    return swiper.slideTo(index, speed, runCallbacks, internal);\r\n}\r\nfunction slideToClickedSlide() {\r\n    var swiper = this;\r\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl;\r\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\r\n    var slideToIndex = swiper.clickedIndex;\r\n    var realIndex;\r\n    if (params.loop) {\r\n        if (swiper.animating)\r\n            return;\r\n        realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\r\n        if (params.centeredSlides) {\r\n            if ((slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\r\n                || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))) {\r\n                swiper.loopFix();\r\n                slideToIndex = $wrapperEl\r\n                    .children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\")\r\n                    .eq(0)\r\n                    .index();\r\n                Utils.nextTick(function () {\r\n                    swiper.slideTo(slideToIndex);\r\n                });\r\n            }\r\n            else {\r\n                swiper.slideTo(slideToIndex);\r\n            }\r\n        }\r\n        else if (slideToIndex > swiper.slides.length - slidesPerView) {\r\n            swiper.loopFix();\r\n            slideToIndex = $wrapperEl\r\n                .children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\")\r\n                .eq(0)\r\n                .index();\r\n            Utils.nextTick(function () {\r\n                swiper.slideTo(slideToIndex);\r\n            });\r\n        }\r\n        else {\r\n            swiper.slideTo(slideToIndex);\r\n        }\r\n    }\r\n    else {\r\n        swiper.slideTo(slideToIndex);\r\n    }\r\n}\r\nvar slide = {\r\n    slideTo: slideTo,\r\n    slideToLoop: slideToLoop,\r\n    slideNext: slideNext,\r\n    slidePrev: slidePrev,\r\n    slideReset: slideReset,\r\n    slideToClosest: slideToClosest,\r\n    slideToClickedSlide: slideToClickedSlide,\r\n};\r\nfunction loopCreate() {\r\n    var swiper = this;\r\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl;\r\n    // Remove duplicated slides\r\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass).remove();\r\n    var slides = $wrapperEl.children(\".\" + params.slideClass);\r\n    if (params.loopFillGroupWithBlank) {\r\n        var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\r\n        if (blankSlidesNum !== params.slidesPerGroup) {\r\n            for (var i = 0; i < blankSlidesNum; i += 1) {\r\n                var blankNode = $(doc.createElement('div')).addClass(params.slideClass + \" \" + params.slideBlankClass);\r\n                $wrapperEl.append(blankNode);\r\n            }\r\n            slides = $wrapperEl.children(\".\" + params.slideClass);\r\n        }\r\n    }\r\n    if (params.slidesPerView === 'auto' && !params.loopedSlides)\r\n        params.loopedSlides = slides.length;\r\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\r\n    swiper.loopedSlides += params.loopAdditionalSlides;\r\n    if (swiper.loopedSlides > slides.length) {\r\n        swiper.loopedSlides = slides.length;\r\n    }\r\n    var prependSlides = [];\r\n    var appendSlides = [];\r\n    slides.each(function (index, el) {\r\n        var slide = $(el);\r\n        if (index < swiper.loopedSlides)\r\n            appendSlides.push(el);\r\n        if (index < slides.length && index >= slides.length - swiper.loopedSlides)\r\n            prependSlides.push(el);\r\n        slide.attr('data-swiper-slide-index', index);\r\n    });\r\n    for (var i = 0; i < appendSlides.length; i += 1) {\r\n        $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\r\n    }\r\n    for (var i = prependSlides.length - 1; i >= 0; i -= 1) {\r\n        $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\r\n    }\r\n}\r\nfunction loopFix() {\r\n    var swiper = this;\r\n    var params = swiper.params, activeIndex = swiper.activeIndex, slides = swiper.slides, loopedSlides = swiper.loopedSlides, allowSlidePrev = swiper.allowSlidePrev, allowSlideNext = swiper.allowSlideNext, snapGrid = swiper.snapGrid, rtl = swiper.rtlTranslate;\r\n    var newIndex;\r\n    swiper.allowSlidePrev = true;\r\n    swiper.allowSlideNext = true;\r\n    var snapTranslate = -snapGrid[activeIndex];\r\n    var diff = snapTranslate - swiper.getTranslate();\r\n    // Fix For Negative Oversliding\r\n    if (activeIndex < loopedSlides) {\r\n        newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\r\n        newIndex += loopedSlides;\r\n        var slideChanged = swiper.slideTo(newIndex, 0, false, true);\r\n        if (slideChanged && diff !== 0) {\r\n            swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\r\n        }\r\n    }\r\n    else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\r\n        // Fix For Positive Oversliding\r\n        newIndex = -slides.length + activeIndex + loopedSlides;\r\n        newIndex += loopedSlides;\r\n        var slideChanged = swiper.slideTo(newIndex, 0, false, true);\r\n        if (slideChanged && diff !== 0) {\r\n            swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\r\n        }\r\n    }\r\n    swiper.allowSlidePrev = allowSlidePrev;\r\n    swiper.allowSlideNext = allowSlideNext;\r\n}\r\nfunction loopDestroy() {\r\n    var swiper = this;\r\n    var $wrapperEl = swiper.$wrapperEl, params = swiper.params, slides = swiper.slides;\r\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \",.\" + params.slideClass + \".\" + params.slideBlankClass).remove();\r\n    slides.removeAttr('data-swiper-slide-index');\r\n}\r\nvar loop = {\r\n    loopCreate: loopCreate,\r\n    loopFix: loopFix,\r\n    loopDestroy: loopDestroy,\r\n};\r\nfunction setGrabCursor(moving) {\r\n    var swiper = this;\r\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked))\r\n        return;\r\n    var el = swiper.el;\r\n    el.style.cursor = 'move';\r\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\r\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\r\n    el.style.cursor = moving ? 'grabbing' : 'grab';\r\n}\r\nfunction unsetGrabCursor() {\r\n    var swiper = this;\r\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked))\r\n        return;\r\n    swiper.el.style.cursor = '';\r\n}\r\nvar grabCursor = {\r\n    setGrabCursor: setGrabCursor,\r\n    unsetGrabCursor: unsetGrabCursor,\r\n};\r\nfunction appendSlide(slides) {\r\n    var swiper = this;\r\n    var $wrapperEl = swiper.$wrapperEl, params = swiper.params;\r\n    if (params.loop) {\r\n        swiper.loopDestroy();\r\n    }\r\n    if (typeof slides === 'object' && 'length' in slides) {\r\n        for (var i = 0; i < slides.length; i += 1) {\r\n            if (slides[i])\r\n                $wrapperEl.append(slides[i]);\r\n        }\r\n    }\r\n    else {\r\n        $wrapperEl.append(slides);\r\n    }\r\n    if (params.loop) {\r\n        swiper.loopCreate();\r\n    }\r\n    if (!(params.observer && Support.observer)) {\r\n        swiper.update();\r\n    }\r\n}\r\nfunction prependSlide(slides) {\r\n    var swiper = this;\r\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex;\r\n    if (params.loop) {\r\n        swiper.loopDestroy();\r\n    }\r\n    var newActiveIndex = activeIndex + 1;\r\n    if (typeof slides === 'object' && 'length' in slides) {\r\n        for (var i = 0; i < slides.length; i += 1) {\r\n            if (slides[i])\r\n                $wrapperEl.prepend(slides[i]);\r\n        }\r\n        newActiveIndex = activeIndex + slides.length;\r\n    }\r\n    else {\r\n        $wrapperEl.prepend(slides);\r\n    }\r\n    if (params.loop) {\r\n        swiper.loopCreate();\r\n    }\r\n    if (!(params.observer && Support.observer)) {\r\n        swiper.update();\r\n    }\r\n    swiper.slideTo(newActiveIndex, 0, false);\r\n}\r\nfunction addSlide(index, slides) {\r\n    var swiper = this;\r\n    var $wrapperEl = swiper.$wrapperEl, params = swiper.params, activeIndex = swiper.activeIndex;\r\n    var activeIndexBuffer = activeIndex;\r\n    if (params.loop) {\r\n        activeIndexBuffer -= swiper.loopedSlides;\r\n        swiper.loopDestroy();\r\n        swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\r\n    }\r\n    var baseLength = swiper.slides.length;\r\n    if (index <= 0) {\r\n        swiper.prependSlide(slides);\r\n        return;\r\n    }\r\n    if (index >= baseLength) {\r\n        swiper.appendSlide(slides);\r\n        return;\r\n    }\r\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\r\n    var slidesBuffer = [];\r\n    for (var i = baseLength - 1; i >= index; i -= 1) {\r\n        var currentSlide = swiper.slides.eq(i);\r\n        currentSlide.remove();\r\n        slidesBuffer.unshift(currentSlide);\r\n    }\r\n    if (typeof slides === 'object' && 'length' in slides) {\r\n        for (var i = 0; i < slides.length; i += 1) {\r\n            if (slides[i])\r\n                $wrapperEl.append(slides[i]);\r\n        }\r\n        newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\r\n    }\r\n    else {\r\n        $wrapperEl.append(slides);\r\n    }\r\n    for (var i = 0; i < slidesBuffer.length; i += 1) {\r\n        $wrapperEl.append(slidesBuffer[i]);\r\n    }\r\n    if (params.loop) {\r\n        swiper.loopCreate();\r\n    }\r\n    if (!(params.observer && Support.observer)) {\r\n        swiper.update();\r\n    }\r\n    if (params.loop) {\r\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n    }\r\n    else {\r\n        swiper.slideTo(newActiveIndex, 0, false);\r\n    }\r\n}\r\nfunction removeSlide(slidesIndexes) {\r\n    var swiper = this;\r\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex;\r\n    var activeIndexBuffer = activeIndex;\r\n    if (params.loop) {\r\n        activeIndexBuffer -= swiper.loopedSlides;\r\n        swiper.loopDestroy();\r\n        swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\r\n    }\r\n    var newActiveIndex = activeIndexBuffer;\r\n    var indexToRemove;\r\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\r\n        for (var i = 0; i < slidesIndexes.length; i += 1) {\r\n            indexToRemove = slidesIndexes[i];\r\n            if (swiper.slides[indexToRemove])\r\n                swiper.slides.eq(indexToRemove).remove();\r\n            if (indexToRemove < newActiveIndex)\r\n                newActiveIndex -= 1;\r\n        }\r\n        newActiveIndex = Math.max(newActiveIndex, 0);\r\n    }\r\n    else {\r\n        indexToRemove = slidesIndexes;\r\n        if (swiper.slides[indexToRemove])\r\n            swiper.slides.eq(indexToRemove).remove();\r\n        if (indexToRemove < newActiveIndex)\r\n            newActiveIndex -= 1;\r\n        newActiveIndex = Math.max(newActiveIndex, 0);\r\n    }\r\n    if (params.loop) {\r\n        swiper.loopCreate();\r\n    }\r\n    if (!(params.observer && Support.observer)) {\r\n        swiper.update();\r\n    }\r\n    if (params.loop) {\r\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n    }\r\n    else {\r\n        swiper.slideTo(newActiveIndex, 0, false);\r\n    }\r\n}\r\nfunction removeAllSlides() {\r\n    var swiper = this;\r\n    var slidesIndexes = [];\r\n    for (var i = 0; i < swiper.slides.length; i += 1) {\r\n        slidesIndexes.push(i);\r\n    }\r\n    swiper.removeSlide(slidesIndexes);\r\n}\r\nvar manipulation = {\r\n    appendSlide: appendSlide,\r\n    prependSlide: prependSlide,\r\n    addSlide: addSlide,\r\n    removeSlide: removeSlide,\r\n    removeAllSlides: removeAllSlides,\r\n};\r\nvar Device = (function Device() {\r\n    var ua = win.navigator.userAgent;\r\n    var device = {\r\n        ios: false,\r\n        android: false,\r\n        androidChrome: false,\r\n        desktop: false,\r\n        windows: false,\r\n        iphone: false,\r\n        ipod: false,\r\n        ipad: false,\r\n        cordova: win.cordova || win.phonegap,\r\n        phonegap: win.cordova || win.phonegap,\r\n    };\r\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\r\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\r\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\r\n    // Windows\r\n    if (windows) {\r\n        device.os = 'windows';\r\n        device.osVersion = windows[2];\r\n        device.windows = true;\r\n    }\r\n    // Android\r\n    if (android && !windows) {\r\n        device.os = 'android';\r\n        device.osVersion = android[2];\r\n        device.android = true;\r\n        device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\r\n    }\r\n    if (ipad || iphone || ipod) {\r\n        device.os = 'ios';\r\n        device.ios = true;\r\n    }\r\n    // iOS\r\n    if (iphone && !ipod) {\r\n        device.osVersion = iphone[2].replace(/_/g, '.');\r\n        device.iphone = true;\r\n    }\r\n    if (ipad) {\r\n        device.osVersion = ipad[2].replace(/_/g, '.');\r\n        device.ipad = true;\r\n    }\r\n    if (ipod) {\r\n        device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\r\n        device.iphone = true;\r\n    }\r\n    // iOS 8+ changed UA\r\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\r\n        if (device.osVersion.split('.')[0] === '10') {\r\n            device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\r\n        }\r\n    }\r\n    // Desktop\r\n    device.desktop = !(device.os || device.android || device.webView);\r\n    // Webview\r\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\r\n    // Minimal UI\r\n    if (device.os && device.os === 'ios') {\r\n        var osVersionArr = device.osVersion.split('.');\r\n        var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\r\n        device.minimalUi = !device.webView\r\n            && (ipod || iphone)\r\n            && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\r\n            && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\r\n    }\r\n    // Pixel Ratio\r\n    device.pixelRatio = win.devicePixelRatio || 1;\r\n    // Export object\r\n    return device;\r\n}());\r\nfunction onTouchStart(event) {\r\n    var swiper = this;\r\n    var data = swiper.touchEventsData;\r\n    var params = swiper.params, touches = swiper.touches;\r\n    if (swiper.animating && params.preventInteractionOnTransition) {\r\n        return;\r\n    }\r\n    var e = event;\r\n    if (e.originalEvent)\r\n        e = e.originalEvent;\r\n    data.isTouchEvent = e.type === 'touchstart';\r\n    if (!data.isTouchEvent && 'which' in e && e.which === 3)\r\n        return;\r\n    if (!data.isTouchEvent && 'button' in e && e.button > 0)\r\n        return;\r\n    if (data.isTouched && data.isMoved)\r\n        return;\r\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : \".\" + params.noSwipingClass)[0]) {\r\n        swiper.allowClick = true;\r\n        return;\r\n    }\r\n    if (params.swipeHandler) {\r\n        if (!$(e).closest(params.swipeHandler)[0])\r\n            return;\r\n    }\r\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\r\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\r\n    var startX = touches.currentX;\r\n    var startY = touches.currentY;\r\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\r\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\r\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\r\n    if (edgeSwipeDetection\r\n        && ((startX <= edgeSwipeThreshold)\r\n            || (startX >= win.screen.width - edgeSwipeThreshold))) {\r\n        return;\r\n    }\r\n    Utils.extend(data, {\r\n        isTouched: true,\r\n        isMoved: false,\r\n        allowTouchCallbacks: true,\r\n        isScrolling: undefined,\r\n        startMoving: undefined,\r\n    });\r\n    touches.startX = startX;\r\n    touches.startY = startY;\r\n    data.touchStartTime = Utils.now();\r\n    swiper.allowClick = true;\r\n    swiper.updateSize();\r\n    swiper.swipeDirection = undefined;\r\n    if (params.threshold > 0)\r\n        data.allowThresholdMove = false;\r\n    if (e.type !== 'touchstart') {\r\n        var preventDefault = true;\r\n        if ($(e.target).is(data.formElements))\r\n            preventDefault = false;\r\n        if (doc.activeElement\r\n            && $(doc.activeElement).is(data.formElements)\r\n            && doc.activeElement !== e.target) {\r\n            doc.activeElement.blur();\r\n        }\r\n        var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\r\n        if (params.touchStartForcePreventDefault || shouldPreventDefault) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n    swiper.emit('touchStart', e);\r\n}\r\nfunction onTouchMove(event) {\r\n    var swiper = this;\r\n    var data = swiper.touchEventsData;\r\n    var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate;\r\n    var e = event;\r\n    if (e.originalEvent)\r\n        e = e.originalEvent;\r\n    if (!data.isTouched) {\r\n        if (data.startMoving && data.isScrolling) {\r\n            swiper.emit('touchMoveOpposite', e);\r\n        }\r\n        return;\r\n    }\r\n    if (data.isTouchEvent && e.type === 'mousemove')\r\n        return;\r\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\r\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\r\n    if (e.preventedByNestedSwiper) {\r\n        touches.startX = pageX;\r\n        touches.startY = pageY;\r\n        return;\r\n    }\r\n    if (!swiper.allowTouchMove) {\r\n        // isMoved = true;\r\n        swiper.allowClick = false;\r\n        if (data.isTouched) {\r\n            Utils.extend(touches, {\r\n                startX: pageX,\r\n                startY: pageY,\r\n                currentX: pageX,\r\n                currentY: pageY,\r\n            });\r\n            data.touchStartTime = Utils.now();\r\n        }\r\n        return;\r\n    }\r\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\r\n        if (swiper.isVertical()) {\r\n            // Vertical\r\n            if ((pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\r\n                || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())) {\r\n                data.isTouched = false;\r\n                data.isMoved = false;\r\n                return;\r\n            }\r\n        }\r\n        else if ((pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\r\n            || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())) {\r\n            return;\r\n        }\r\n    }\r\n    if (data.isTouchEvent && doc.activeElement) {\r\n        if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\r\n            data.isMoved = true;\r\n            swiper.allowClick = false;\r\n            return;\r\n        }\r\n    }\r\n    if (data.allowTouchCallbacks) {\r\n        swiper.emit('touchMove', e);\r\n    }\r\n    if (e.targetTouches && e.targetTouches.length > 1)\r\n        return;\r\n    touches.currentX = pageX;\r\n    touches.currentY = pageY;\r\n    var diffX = touches.currentX - touches.startX;\r\n    var diffY = touches.currentY - touches.startY;\r\n    if (swiper.params.threshold && Math.sqrt((Math.pow(diffX, 2)) + (Math.pow(diffY, 2))) < swiper.params.threshold)\r\n        return;\r\n    if (typeof data.isScrolling === 'undefined') {\r\n        var touchAngle = void 0;\r\n        if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\r\n            data.isScrolling = false;\r\n        }\r\n        else {\r\n            // eslint-disable-next-line\r\n            if ((diffX * diffX) + (diffY * diffY) >= 25) {\r\n                touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\r\n                data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\r\n            }\r\n        }\r\n    }\r\n    if (data.isScrolling) {\r\n        swiper.emit('touchMoveOpposite', e);\r\n    }\r\n    if (typeof data.startMoving === 'undefined') {\r\n        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\r\n            data.startMoving = true;\r\n        }\r\n    }\r\n    if (data.isScrolling) {\r\n        data.isTouched = false;\r\n        return;\r\n    }\r\n    if (!data.startMoving) {\r\n        return;\r\n    }\r\n    swiper.allowClick = false;\r\n    e.preventDefault();\r\n    if (params.touchMoveStopPropagation && !params.nested) {\r\n        e.stopPropagation();\r\n    }\r\n    if (!data.isMoved) {\r\n        if (params.loop) {\r\n            swiper.loopFix();\r\n        }\r\n        data.startTranslate = swiper.getTranslate();\r\n        swiper.setTransition(0);\r\n        if (swiper.animating) {\r\n            swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\r\n        }\r\n        data.allowMomentumBounce = false;\r\n        // Grab Cursor\r\n        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n            swiper.setGrabCursor(true);\r\n        }\r\n        swiper.emit('sliderFirstMove', e);\r\n    }\r\n    swiper.emit('sliderMove', e);\r\n    data.isMoved = true;\r\n    var diff = swiper.isHorizontal() ? diffX : diffY;\r\n    touches.diff = diff;\r\n    diff *= params.touchRatio;\r\n    if (rtl)\r\n        diff = -diff;\r\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\r\n    data.currentTranslate = diff + data.startTranslate;\r\n    var disableParentSwiper = true;\r\n    var resistanceRatio = params.resistanceRatio;\r\n    if (params.touchReleaseOnEdges) {\r\n        resistanceRatio = 0;\r\n    }\r\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\r\n        disableParentSwiper = false;\r\n        if (params.resistance)\r\n            data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow((-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio));\r\n    }\r\n    else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\r\n        disableParentSwiper = false;\r\n        if (params.resistance)\r\n            data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow((swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio));\r\n    }\r\n    if (disableParentSwiper) {\r\n        e.preventedByNestedSwiper = true;\r\n    }\r\n    // Directions locks\r\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\r\n        data.currentTranslate = data.startTranslate;\r\n    }\r\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\r\n        data.currentTranslate = data.startTranslate;\r\n    }\r\n    // Threshold\r\n    if (params.threshold > 0) {\r\n        if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\r\n            if (!data.allowThresholdMove) {\r\n                data.allowThresholdMove = true;\r\n                touches.startX = touches.currentX;\r\n                touches.startY = touches.currentY;\r\n                data.currentTranslate = data.startTranslate;\r\n                touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            data.currentTranslate = data.startTranslate;\r\n            return;\r\n        }\r\n    }\r\n    if (!params.followFinger)\r\n        return;\r\n    // Update active index in free mode\r\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n    }\r\n    if (params.freeMode) {\r\n        // Velocity\r\n        if (data.velocities.length === 0) {\r\n            data.velocities.push({\r\n                position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\r\n                time: data.touchStartTime,\r\n            });\r\n        }\r\n        data.velocities.push({\r\n            position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\r\n            time: Utils.now(),\r\n        });\r\n    }\r\n    // Update progress\r\n    swiper.updateProgress(data.currentTranslate);\r\n    // Update translate\r\n    swiper.setTranslate(data.currentTranslate);\r\n}\r\nfunction onTouchEnd(event) {\r\n    var swiper = this;\r\n    var data = swiper.touchEventsData;\r\n    var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate, $wrapperEl = swiper.$wrapperEl, slidesGrid = swiper.slidesGrid, snapGrid = swiper.snapGrid;\r\n    var e = event;\r\n    if (e.originalEvent)\r\n        e = e.originalEvent;\r\n    if (data.allowTouchCallbacks) {\r\n        swiper.emit('touchEnd', e);\r\n    }\r\n    data.allowTouchCallbacks = false;\r\n    if (!data.isTouched) {\r\n        if (data.isMoved && params.grabCursor) {\r\n            swiper.setGrabCursor(false);\r\n        }\r\n        data.isMoved = false;\r\n        data.startMoving = false;\r\n        return;\r\n    }\r\n    // Return Grab Cursor\r\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n        swiper.setGrabCursor(false);\r\n    }\r\n    // Time diff\r\n    var touchEndTime = Utils.now();\r\n    var timeDiff = touchEndTime - data.touchStartTime;\r\n    // Tap, doubleTap, Click\r\n    if (swiper.allowClick) {\r\n        swiper.updateClickedSlide(e);\r\n        swiper.emit('tap', e);\r\n        if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\r\n            if (data.clickTimeout)\r\n                clearTimeout(data.clickTimeout);\r\n            data.clickTimeout = Utils.nextTick(function () {\r\n                if (!swiper || swiper.destroyed)\r\n                    return;\r\n                swiper.emit('click', e);\r\n            }, 300);\r\n        }\r\n        if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\r\n            if (data.clickTimeout)\r\n                clearTimeout(data.clickTimeout);\r\n            swiper.emit('doubleTap', e);\r\n        }\r\n    }\r\n    data.lastClickTime = Utils.now();\r\n    Utils.nextTick(function () {\r\n        if (!swiper.destroyed)\r\n            swiper.allowClick = true;\r\n    });\r\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\r\n        data.isTouched = false;\r\n        data.isMoved = false;\r\n        data.startMoving = false;\r\n        return;\r\n    }\r\n    data.isTouched = false;\r\n    data.isMoved = false;\r\n    data.startMoving = false;\r\n    var currentPos;\r\n    if (params.followFinger) {\r\n        currentPos = rtl ? swiper.translate : -swiper.translate;\r\n    }\r\n    else {\r\n        currentPos = -data.currentTranslate;\r\n    }\r\n    if (params.freeMode) {\r\n        if (currentPos < -swiper.minTranslate()) {\r\n            swiper.slideTo(swiper.activeIndex);\r\n            return;\r\n        }\r\n        if (currentPos > -swiper.maxTranslate()) {\r\n            if (swiper.slides.length < snapGrid.length) {\r\n                swiper.slideTo(snapGrid.length - 1);\r\n            }\r\n            else {\r\n                swiper.slideTo(swiper.slides.length - 1);\r\n            }\r\n            return;\r\n        }\r\n        if (params.freeModeMomentum) {\r\n            if (data.velocities.length > 1) {\r\n                var lastMoveEvent = data.velocities.pop();\r\n                var velocityEvent = data.velocities.pop();\r\n                var distance = lastMoveEvent.position - velocityEvent.position;\r\n                var time = lastMoveEvent.time - velocityEvent.time;\r\n                swiper.velocity = distance / time;\r\n                swiper.velocity /= 2;\r\n                if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\r\n                    swiper.velocity = 0;\r\n                }\r\n                // this implies that the user stopped moving a finger then released.\r\n                // There would be no events with distance zero, so the last event is stale.\r\n                if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\r\n                    swiper.velocity = 0;\r\n                }\r\n            }\r\n            else {\r\n                swiper.velocity = 0;\r\n            }\r\n            swiper.velocity *= params.freeModeMomentumVelocityRatio;\r\n            data.velocities.length = 0;\r\n            var momentumDuration = 1000 * params.freeModeMomentumRatio;\r\n            var momentumDistance = swiper.velocity * momentumDuration;\r\n            var newPosition = swiper.translate + momentumDistance;\r\n            if (rtl)\r\n                newPosition = -newPosition;\r\n            var doBounce = false;\r\n            var afterBouncePosition_1;\r\n            var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\r\n            var needsLoopFix = void 0;\r\n            if (newPosition < swiper.maxTranslate()) {\r\n                if (params.freeModeMomentumBounce) {\r\n                    if (newPosition + swiper.maxTranslate() < -bounceAmount) {\r\n                        newPosition = swiper.maxTranslate() - bounceAmount;\r\n                    }\r\n                    afterBouncePosition_1 = swiper.maxTranslate();\r\n                    doBounce = true;\r\n                    data.allowMomentumBounce = true;\r\n                }\r\n                else {\r\n                    newPosition = swiper.maxTranslate();\r\n                }\r\n                if (params.loop && params.centeredSlides)\r\n                    needsLoopFix = true;\r\n            }\r\n            else if (newPosition > swiper.minTranslate()) {\r\n                if (params.freeModeMomentumBounce) {\r\n                    if (newPosition - swiper.minTranslate() > bounceAmount) {\r\n                        newPosition = swiper.minTranslate() + bounceAmount;\r\n                    }\r\n                    afterBouncePosition_1 = swiper.minTranslate();\r\n                    doBounce = true;\r\n                    data.allowMomentumBounce = true;\r\n                }\r\n                else {\r\n                    newPosition = swiper.minTranslate();\r\n                }\r\n                if (params.loop && params.centeredSlides)\r\n                    needsLoopFix = true;\r\n            }\r\n            else if (params.freeModeSticky) {\r\n                var nextSlide = void 0;\r\n                for (var j = 0; j < snapGrid.length; j += 1) {\r\n                    if (snapGrid[j] > -newPosition) {\r\n                        nextSlide = j;\r\n                        break;\r\n                    }\r\n                }\r\n                if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\r\n                    newPosition = snapGrid[nextSlide];\r\n                }\r\n                else {\r\n                    newPosition = snapGrid[nextSlide - 1];\r\n                }\r\n                newPosition = -newPosition;\r\n            }\r\n            if (needsLoopFix) {\r\n                swiper.once('transitionEnd', function () {\r\n                    swiper.loopFix();\r\n                });\r\n            }\r\n            // Fix duration\r\n            if (swiper.velocity !== 0) {\r\n                if (rtl) {\r\n                    momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\r\n                }\r\n                else {\r\n                    momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\r\n                }\r\n            }\r\n            else if (params.freeModeSticky) {\r\n                swiper.slideToClosest();\r\n                return;\r\n            }\r\n            if (params.freeModeMomentumBounce && doBounce) {\r\n                swiper.updateProgress(afterBouncePosition_1);\r\n                swiper.setTransition(momentumDuration);\r\n                swiper.setTranslate(newPosition);\r\n                swiper.transitionStart(true, swiper.swipeDirection);\r\n                swiper.animating = true;\r\n                $wrapperEl.transitionEnd(function () {\r\n                    if (!swiper || swiper.destroyed || !data.allowMomentumBounce)\r\n                        return;\r\n                    swiper.emit('momentumBounce');\r\n                    swiper.setTransition(params.speed);\r\n                    swiper.setTranslate(afterBouncePosition_1);\r\n                    $wrapperEl.transitionEnd(function () {\r\n                        if (!swiper || swiper.destroyed)\r\n                            return;\r\n                        swiper.transitionEnd();\r\n                    });\r\n                });\r\n            }\r\n            else if (swiper.velocity) {\r\n                swiper.updateProgress(newPosition);\r\n                swiper.setTransition(momentumDuration);\r\n                swiper.setTranslate(newPosition);\r\n                swiper.transitionStart(true, swiper.swipeDirection);\r\n                if (!swiper.animating) {\r\n                    swiper.animating = true;\r\n                    $wrapperEl.transitionEnd(function () {\r\n                        if (!swiper || swiper.destroyed)\r\n                            return;\r\n                        swiper.transitionEnd();\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                swiper.updateProgress(newPosition);\r\n            }\r\n            swiper.updateActiveIndex();\r\n            swiper.updateSlidesClasses();\r\n        }\r\n        else if (params.freeModeSticky) {\r\n            swiper.slideToClosest();\r\n            return;\r\n        }\r\n        if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\r\n            swiper.updateProgress();\r\n            swiper.updateActiveIndex();\r\n            swiper.updateSlidesClasses();\r\n        }\r\n        return;\r\n    }\r\n    // Find current slide\r\n    var stopIndex = 0;\r\n    var groupSize = swiper.slidesSizesGrid[0];\r\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\r\n        if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\r\n            if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\r\n                stopIndex = i;\r\n                groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\r\n            }\r\n        }\r\n        else if (currentPos >= slidesGrid[i]) {\r\n            stopIndex = i;\r\n            groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\r\n        }\r\n    }\r\n    // Find current slide size\r\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\r\n    if (timeDiff > params.longSwipesMs) {\r\n        // Long touches\r\n        if (!params.longSwipes) {\r\n            swiper.slideTo(swiper.activeIndex);\r\n            return;\r\n        }\r\n        if (swiper.swipeDirection === 'next') {\r\n            if (ratio >= params.longSwipesRatio)\r\n                swiper.slideTo(stopIndex + params.slidesPerGroup);\r\n            else\r\n                swiper.slideTo(stopIndex);\r\n        }\r\n        if (swiper.swipeDirection === 'prev') {\r\n            if (ratio > (1 - params.longSwipesRatio))\r\n                swiper.slideTo(stopIndex + params.slidesPerGroup);\r\n            else\r\n                swiper.slideTo(stopIndex);\r\n        }\r\n    }\r\n    else {\r\n        // Short swipes\r\n        if (!params.shortSwipes) {\r\n            swiper.slideTo(swiper.activeIndex);\r\n            return;\r\n        }\r\n        if (swiper.swipeDirection === 'next') {\r\n            swiper.slideTo(stopIndex + params.slidesPerGroup);\r\n        }\r\n        if (swiper.swipeDirection === 'prev') {\r\n            swiper.slideTo(stopIndex);\r\n        }\r\n    }\r\n}\r\nfunction onResize() {\r\n    var swiper = this;\r\n    var params = swiper.params, el = swiper.el;\r\n    if (el && el.offsetWidth === 0)\r\n        return;\r\n    // Breakpoints\r\n    if (params.breakpoints) {\r\n        swiper.setBreakpoint();\r\n    }\r\n    // Save locks\r\n    var allowSlideNext = swiper.allowSlideNext, allowSlidePrev = swiper.allowSlidePrev, snapGrid = swiper.snapGrid;\r\n    // Disable locks on resize\r\n    swiper.allowSlideNext = true;\r\n    swiper.allowSlidePrev = true;\r\n    swiper.updateSize();\r\n    swiper.updateSlides();\r\n    if (params.freeMode) {\r\n        var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\r\n        swiper.setTranslate(newTranslate);\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n        if (params.autoHeight) {\r\n            swiper.updateAutoHeight();\r\n        }\r\n    }\r\n    else {\r\n        swiper.updateSlidesClasses();\r\n        if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\r\n            swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n        }\r\n        else {\r\n            swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n        }\r\n    }\r\n    // Return locks after resize\r\n    swiper.allowSlidePrev = allowSlidePrev;\r\n    swiper.allowSlideNext = allowSlideNext;\r\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n        swiper.checkOverflow();\r\n    }\r\n}\r\nfunction onClick(e) {\r\n    var swiper = this;\r\n    if (!swiper.allowClick) {\r\n        if (swiper.params.preventClicks)\r\n            e.preventDefault();\r\n        if (swiper.params.preventClicksPropagation && swiper.animating) {\r\n            e.stopPropagation();\r\n            e.stopImmediatePropagation();\r\n        }\r\n    }\r\n}\r\nfunction attachEvents() {\r\n    var swiper = this;\r\n    var params = swiper.params, touchEvents = swiper.touchEvents, el = swiper.el, wrapperEl = swiper.wrapperEl;\r\n    {\r\n        swiper.onTouchStart = onTouchStart.bind(swiper);\r\n        swiper.onTouchMove = onTouchMove.bind(swiper);\r\n        swiper.onTouchEnd = onTouchEnd.bind(swiper);\r\n    }\r\n    swiper.onClick = onClick.bind(swiper);\r\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\r\n    var capture = !!params.nested;\r\n    // Touch Events\r\n    {\r\n        if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\r\n            target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\r\n            doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\r\n            doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\r\n        }\r\n        else {\r\n            if (Support.touch) {\r\n                var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\r\n                target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\r\n                target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\r\n                target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\r\n            }\r\n            if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\r\n                target.addEventListener('mousedown', swiper.onTouchStart, false);\r\n                doc.addEventListener('mousemove', swiper.onTouchMove, capture);\r\n                doc.addEventListener('mouseup', swiper.onTouchEnd, false);\r\n            }\r\n        }\r\n        // Prevent Links Clicks\r\n        if (params.preventClicks || params.preventClicksPropagation) {\r\n            target.addEventListener('click', swiper.onClick, true);\r\n        }\r\n    }\r\n    // Resize handler\r\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\r\n}\r\nfunction detachEvents() {\r\n    var swiper = this;\r\n    var params = swiper.params, touchEvents = swiper.touchEvents, el = swiper.el, wrapperEl = swiper.wrapperEl;\r\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\r\n    var capture = !!params.nested;\r\n    // Touch Events\r\n    {\r\n        if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\r\n            target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\r\n            doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\r\n            doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\r\n        }\r\n        else {\r\n            if (Support.touch) {\r\n                var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\r\n                target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\r\n                target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\r\n                target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\r\n            }\r\n            if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\r\n                target.removeEventListener('mousedown', swiper.onTouchStart, false);\r\n                doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\r\n                doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\r\n            }\r\n        }\r\n        // Prevent Links Clicks\r\n        if (params.preventClicks || params.preventClicksPropagation) {\r\n            target.removeEventListener('click', swiper.onClick, true);\r\n        }\r\n    }\r\n    // Resize handler\r\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\r\n}\r\nvar events = {\r\n    attachEvents: attachEvents,\r\n    detachEvents: detachEvents,\r\n};\r\nfunction setBreakpoint() {\r\n    var swiper = this;\r\n    var activeIndex = swiper.activeIndex, initialized = swiper.initialized, _a = swiper.loopedSlides, loopedSlides = _a === void 0 ? 0 : _a, params = swiper.params;\r\n    var breakpoints = params.breakpoints;\r\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0))\r\n        return;\r\n    // Set breakpoint for window width and update parameters\r\n    var breakpoint = swiper.getBreakpoint(breakpoints);\r\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\r\n        var breakpointOnlyParams_1 = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\r\n        if (breakpointOnlyParams_1) {\r\n            ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach(function (param) {\r\n                var paramValue = breakpointOnlyParams_1[param];\r\n                if (typeof paramValue === 'undefined')\r\n                    return;\r\n                if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\r\n                    breakpointOnlyParams_1[param] = 'auto';\r\n                }\r\n                else if (param === 'slidesPerView') {\r\n                    breakpointOnlyParams_1[param] = parseFloat(paramValue);\r\n                }\r\n                else {\r\n                    breakpointOnlyParams_1[param] = parseInt(paramValue, 10);\r\n                }\r\n            });\r\n        }\r\n        var breakpointParams = breakpointOnlyParams_1 || swiper.originalParams;\r\n        var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\r\n        var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\r\n        if (directionChanged && initialized) {\r\n            swiper.changeDirection();\r\n        }\r\n        Utils.extend(swiper.params, breakpointParams);\r\n        Utils.extend(swiper, {\r\n            allowTouchMove: swiper.params.allowTouchMove,\r\n            allowSlideNext: swiper.params.allowSlideNext,\r\n            allowSlidePrev: swiper.params.allowSlidePrev,\r\n        });\r\n        swiper.currentBreakpoint = breakpoint;\r\n        if (needsReLoop && initialized) {\r\n            swiper.loopDestroy();\r\n            swiper.loopCreate();\r\n            swiper.updateSlides();\r\n            swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\r\n        }\r\n        swiper.emit('breakpoint', breakpointParams);\r\n    }\r\n}\r\nfunction getBreakpoint(breakpoints) {\r\n    var swiper = this;\r\n    // Get breakpoint for window width\r\n    if (!breakpoints)\r\n        return undefined;\r\n    var breakpoint = false;\r\n    var points = [];\r\n    Object.keys(breakpoints).forEach(function (point) {\r\n        points.push(point);\r\n    });\r\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\r\n    for (var i = 0; i < points.length; i += 1) {\r\n        var point = points[i];\r\n        if (swiper.params.breakpointsInverse) {\r\n            if (point <= win.innerWidth) {\r\n                breakpoint = point;\r\n            }\r\n        }\r\n        else if (point >= win.innerWidth && !breakpoint) {\r\n            breakpoint = point;\r\n        }\r\n    }\r\n    return breakpoint || 'max';\r\n}\r\nvar breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\r\nfunction addClasses() {\r\n    var swiper = this;\r\n    var classNames = swiper.classNames, params = swiper.params, rtl = swiper.rtl, $el = swiper.$el;\r\n    var suffixes = [];\r\n    suffixes.push('initialized');\r\n    suffixes.push(params.direction);\r\n    if (params.freeMode) {\r\n        suffixes.push('free-mode');\r\n    }\r\n    if (!Support.flexbox) {\r\n        suffixes.push('no-flexbox');\r\n    }\r\n    if (params.autoHeight) {\r\n        suffixes.push('autoheight');\r\n    }\r\n    if (rtl) {\r\n        suffixes.push('rtl');\r\n    }\r\n    if (params.slidesPerColumn > 1) {\r\n        suffixes.push('multirow');\r\n    }\r\n    if (Device.android) {\r\n        suffixes.push('android');\r\n    }\r\n    if (Device.ios) {\r\n        suffixes.push('ios');\r\n    }\r\n    // WP8 Touch Events Fix\r\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\r\n        suffixes.push(\"wp8-\" + params.direction);\r\n    }\r\n    suffixes.forEach(function (suffix) {\r\n        classNames.push(params.containerModifierClass + suffix);\r\n    });\r\n    $el.addClass(classNames.join(' '));\r\n}\r\nfunction removeClasses() {\r\n    var swiper = this;\r\n    var $el = swiper.$el, classNames = swiper.classNames;\r\n    $el.removeClass(classNames.join(' '));\r\n}\r\nvar classes = { addClasses: addClasses, removeClasses: removeClasses };\r\nfunction loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\r\n    var image;\r\n    function onReady() {\r\n        if (callback)\r\n            callback();\r\n    }\r\n    if (!imageEl.complete || !checkForComplete) {\r\n        if (src) {\r\n            image = new win.Image();\r\n            image.onload = onReady;\r\n            image.onerror = onReady;\r\n            if (sizes) {\r\n                image.sizes = sizes;\r\n            }\r\n            if (srcset) {\r\n                image.srcset = srcset;\r\n            }\r\n            if (src) {\r\n                image.src = src;\r\n            }\r\n        }\r\n        else {\r\n            onReady();\r\n        }\r\n    }\r\n    else {\r\n        // image already loaded...\r\n        onReady();\r\n    }\r\n}\r\nfunction preloadImages() {\r\n    var swiper = this;\r\n    swiper.imagesToLoad = swiper.$el.find('img');\r\n    function onReady() {\r\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed)\r\n            return;\r\n        if (swiper.imagesLoaded !== undefined)\r\n            swiper.imagesLoaded += 1;\r\n        if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\r\n            if (swiper.params.updateOnImagesReady)\r\n                swiper.update();\r\n            swiper.emit('imagesReady');\r\n        }\r\n    }\r\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\r\n        var imageEl = swiper.imagesToLoad[i];\r\n        swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\r\n    }\r\n}\r\nvar images = {\r\n    loadImage: loadImage,\r\n    preloadImages: preloadImages,\r\n};\r\nfunction checkOverflow() {\r\n    var swiper = this;\r\n    var wasLocked = swiper.isLocked;\r\n    swiper.isLocked = swiper.snapGrid.length === 1;\r\n    swiper.allowSlideNext = !swiper.isLocked;\r\n    swiper.allowSlidePrev = !swiper.isLocked;\r\n    // events\r\n    if (wasLocked !== swiper.isLocked)\r\n        swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\r\n    if (wasLocked && wasLocked !== swiper.isLocked) {\r\n        swiper.isEnd = false;\r\n        swiper.navigation.update();\r\n    }\r\n}\r\nvar checkOverflow$1 = { checkOverflow: checkOverflow };\r\nvar defaults = {\r\n    init: true,\r\n    direction: 'horizontal',\r\n    touchEventsTarget: 'container',\r\n    initialSlide: 0,\r\n    speed: 300,\r\n    //\r\n    preventInteractionOnTransition: false,\r\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\r\n    edgeSwipeDetection: false,\r\n    edgeSwipeThreshold: 20,\r\n    // Free mode\r\n    freeMode: false,\r\n    freeModeMomentum: true,\r\n    freeModeMomentumRatio: 1,\r\n    freeModeMomentumBounce: true,\r\n    freeModeMomentumBounceRatio: 1,\r\n    freeModeMomentumVelocityRatio: 1,\r\n    freeModeSticky: false,\r\n    freeModeMinimumVelocity: 0.02,\r\n    // Autoheight\r\n    autoHeight: false,\r\n    // Set wrapper width\r\n    setWrapperSize: false,\r\n    // Virtual Translate\r\n    virtualTranslate: false,\r\n    // Effects\r\n    effect: 'slide',\r\n    // Breakpoints\r\n    breakpoints: undefined,\r\n    breakpointsInverse: false,\r\n    // Slides grid\r\n    spaceBetween: 0,\r\n    slidesPerView: 1,\r\n    slidesPerColumn: 1,\r\n    slidesPerColumnFill: 'column',\r\n    slidesPerGroup: 1,\r\n    centeredSlides: false,\r\n    slidesOffsetBefore: 0,\r\n    slidesOffsetAfter: 0,\r\n    normalizeSlideIndex: true,\r\n    centerInsufficientSlides: false,\r\n    // Disable swiper and hide navigation when container not overflow\r\n    watchOverflow: false,\r\n    // Round length\r\n    roundLengths: false,\r\n    // Touches\r\n    touchRatio: 1,\r\n    touchAngle: 45,\r\n    simulateTouch: true,\r\n    shortSwipes: true,\r\n    longSwipes: true,\r\n    longSwipesRatio: 0.5,\r\n    longSwipesMs: 300,\r\n    followFinger: true,\r\n    allowTouchMove: true,\r\n    threshold: 0,\r\n    touchMoveStopPropagation: true,\r\n    touchStartPreventDefault: true,\r\n    touchStartForcePreventDefault: false,\r\n    touchReleaseOnEdges: false,\r\n    // Unique Navigation Elements\r\n    uniqueNavElements: true,\r\n    // Resistance\r\n    resistance: true,\r\n    resistanceRatio: 0.85,\r\n    // Progress\r\n    watchSlidesProgress: false,\r\n    watchSlidesVisibility: false,\r\n    // Cursor\r\n    grabCursor: false,\r\n    // Clicks\r\n    preventClicks: true,\r\n    preventClicksPropagation: true,\r\n    slideToClickedSlide: false,\r\n    // Images\r\n    preloadImages: true,\r\n    updateOnImagesReady: true,\r\n    // loop\r\n    loop: false,\r\n    loopAdditionalSlides: 0,\r\n    loopedSlides: null,\r\n    loopFillGroupWithBlank: false,\r\n    // Swiping/no swiping\r\n    allowSlidePrev: true,\r\n    allowSlideNext: true,\r\n    swipeHandler: null,\r\n    noSwiping: true,\r\n    noSwipingClass: 'swiper-no-swiping',\r\n    noSwipingSelector: null,\r\n    // Passive Listeners\r\n    passiveListeners: true,\r\n    // NS\r\n    containerModifierClass: 'swiper-container-',\r\n    slideClass: 'swiper-slide',\r\n    slideBlankClass: 'swiper-slide-invisible-blank',\r\n    slideActiveClass: 'swiper-slide-active',\r\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\r\n    slideVisibleClass: 'swiper-slide-visible',\r\n    slideDuplicateClass: 'swiper-slide-duplicate',\r\n    slideNextClass: 'swiper-slide-next',\r\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\r\n    slidePrevClass: 'swiper-slide-prev',\r\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\r\n    wrapperClass: 'swiper-wrapper',\r\n    // Callbacks\r\n    runCallbacksOnInit: true,\r\n};\r\n/* eslint no-param-reassign: \"off\" */\r\nvar prototypes = {\r\n    update: update,\r\n    translate: translate,\r\n    transition: transition$1,\r\n    slide: slide,\r\n    loop: loop,\r\n    grabCursor: grabCursor,\r\n    manipulation: manipulation,\r\n    events: events,\r\n    breakpoints: breakpoints,\r\n    checkOverflow: checkOverflow$1,\r\n    classes: classes,\r\n    images: images,\r\n};\r\nvar extendedDefaults = {};\r\nvar Swiper = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Swiper, _super);\r\n    function Swiper() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var _this = this;\r\n        var el;\r\n        var params;\r\n        if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\r\n            params = args[0];\r\n        }\r\n        else {\r\n            el = args[0], params = args[1];\r\n        }\r\n        if (!params)\r\n            params = {};\r\n        params = Utils.extend({}, params);\r\n        if (el && !params.el)\r\n            params.el = el;\r\n        _this = _super.call(this, params) || this;\r\n        Object.keys(prototypes).forEach(function (prototypeGroup) {\r\n            Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\r\n                if (!Swiper.prototype[protoMethod]) {\r\n                    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\r\n                }\r\n            });\r\n        });\r\n        // Swiper Instance\r\n        var swiper = _this;\r\n        if (typeof swiper.modules === 'undefined') {\r\n            swiper.modules = {};\r\n        }\r\n        Object.keys(swiper.modules).forEach(function (moduleName) {\r\n            var module = swiper.modules[moduleName];\r\n            if (module.params) {\r\n                var moduleParamName = Object.keys(module.params)[0];\r\n                var moduleParams = module.params[moduleParamName];\r\n                if (typeof moduleParams !== 'object' || moduleParams === null)\r\n                    return;\r\n                if (!(moduleParamName in params && 'enabled' in moduleParams))\r\n                    return;\r\n                if (params[moduleParamName] === true) {\r\n                    params[moduleParamName] = { enabled: true };\r\n                }\r\n                if (typeof params[moduleParamName] === 'object'\r\n                    && !('enabled' in params[moduleParamName])) {\r\n                    params[moduleParamName].enabled = true;\r\n                }\r\n                if (!params[moduleParamName])\r\n                    params[moduleParamName] = { enabled: false };\r\n            }\r\n        });\r\n        // Extend defaults with modules params\r\n        var swiperParams = Utils.extend({}, defaults);\r\n        swiper.useModulesParams(swiperParams);\r\n        // Extend defaults with passed params\r\n        swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\r\n        swiper.originalParams = Utils.extend({}, swiper.params);\r\n        swiper.passedParams = Utils.extend({}, params);\r\n        // Save Dom lib\r\n        swiper.$ = $;\r\n        // Find el\r\n        var $el = $(swiper.params.el);\r\n        el = $el[0];\r\n        if (!el) {\r\n            return undefined;\r\n        }\r\n        if ($el.length > 1) {\r\n            var swipers_1 = [];\r\n            $el.each(function (index, containerEl) {\r\n                var newParams = Utils.extend({}, params, { el: containerEl });\r\n                swipers_1.push(new Swiper(newParams));\r\n            });\r\n            return swipers_1;\r\n        }\r\n        el.swiper = swiper;\r\n        $el.data('swiper', swiper);\r\n        // Find Wrapper\r\n        var $wrapperEl = $el.children(\".\" + swiper.params.wrapperClass);\r\n        // Extend Swiper\r\n        Utils.extend(swiper, {\r\n            $el: $el,\r\n            el: el,\r\n            $wrapperEl: $wrapperEl,\r\n            wrapperEl: $wrapperEl[0],\r\n            // Classes\r\n            classNames: [],\r\n            // Slides\r\n            slides: $(),\r\n            slidesGrid: [],\r\n            snapGrid: [],\r\n            slidesSizesGrid: [],\r\n            // isDirection\r\n            isHorizontal: function () {\r\n                return swiper.params.direction === 'horizontal';\r\n            },\r\n            isVertical: function () {\r\n                return swiper.params.direction === 'vertical';\r\n            },\r\n            // RTL\r\n            rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\r\n            rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\r\n            wrongRTL: $wrapperEl.css('display') === '-webkit-box',\r\n            // Indexes\r\n            activeIndex: 0,\r\n            realIndex: 0,\r\n            //\r\n            isBeginning: true,\r\n            isEnd: false,\r\n            // Props\r\n            translate: 0,\r\n            previousTranslate: 0,\r\n            progress: 0,\r\n            velocity: 0,\r\n            animating: false,\r\n            // Locks\r\n            allowSlideNext: swiper.params.allowSlideNext,\r\n            allowSlidePrev: swiper.params.allowSlidePrev,\r\n            // Touch Events\r\n            touchEvents: (function touchEvents() {\r\n                var touch = ['touchstart', 'touchmove', 'touchend'];\r\n                var desktop = ['mousedown', 'mousemove', 'mouseup'];\r\n                if (Support.pointerEvents) {\r\n                    desktop = ['pointerdown', 'pointermove', 'pointerup'];\r\n                }\r\n                else if (Support.prefixedPointerEvents) {\r\n                    desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\r\n                }\r\n                swiper.touchEventsTouch = {\r\n                    start: touch[0],\r\n                    move: touch[1],\r\n                    end: touch[2],\r\n                };\r\n                swiper.touchEventsDesktop = {\r\n                    start: desktop[0],\r\n                    move: desktop[1],\r\n                    end: desktop[2],\r\n                };\r\n                return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\r\n            }()),\r\n            touchEventsData: {\r\n                isTouched: undefined,\r\n                isMoved: undefined,\r\n                allowTouchCallbacks: undefined,\r\n                touchStartTime: undefined,\r\n                isScrolling: undefined,\r\n                currentTranslate: undefined,\r\n                startTranslate: undefined,\r\n                allowThresholdMove: undefined,\r\n                // Form elements to match\r\n                formElements: 'input, select, option, textarea, button, video',\r\n                // Last click time\r\n                lastClickTime: Utils.now(),\r\n                clickTimeout: undefined,\r\n                // Velocities\r\n                velocities: [],\r\n                allowMomentumBounce: undefined,\r\n                isTouchEvent: undefined,\r\n                startMoving: undefined,\r\n            },\r\n            // Clicks\r\n            allowClick: true,\r\n            // Touches\r\n            allowTouchMove: swiper.params.allowTouchMove,\r\n            touches: {\r\n                startX: 0,\r\n                startY: 0,\r\n                currentX: 0,\r\n                currentY: 0,\r\n                diff: 0,\r\n            },\r\n            // Images\r\n            imagesToLoad: [],\r\n            imagesLoaded: 0,\r\n        });\r\n        // Install Modules\r\n        swiper.useModules();\r\n        // Init\r\n        if (swiper.params.init) {\r\n            swiper.init();\r\n        }\r\n        // Return app instance\r\n        return swiper;\r\n    }\r\n    Swiper.prototype.slidesPerViewDynamic = function () {\r\n        var swiper = this;\r\n        var params = swiper.params, slides = swiper.slides, slidesGrid = swiper.slidesGrid, swiperSize = swiper.size, activeIndex = swiper.activeIndex;\r\n        var spv = 1;\r\n        if (params.centeredSlides) {\r\n            var slideSize = slides[activeIndex].swiperSlideSize;\r\n            var breakLoop = void 0;\r\n            for (var i = activeIndex + 1; i < slides.length; i += 1) {\r\n                if (slides[i] && !breakLoop) {\r\n                    slideSize += slides[i].swiperSlideSize;\r\n                    spv += 1;\r\n                    if (slideSize > swiperSize)\r\n                        breakLoop = true;\r\n                }\r\n            }\r\n            for (var i = activeIndex - 1; i >= 0; i -= 1) {\r\n                if (slides[i] && !breakLoop) {\r\n                    slideSize += slides[i].swiperSlideSize;\r\n                    spv += 1;\r\n                    if (slideSize > swiperSize)\r\n                        breakLoop = true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var i = activeIndex + 1; i < slides.length; i += 1) {\r\n                if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\r\n                    spv += 1;\r\n                }\r\n            }\r\n        }\r\n        return spv;\r\n    };\r\n    Swiper.prototype.update = function () {\r\n        var swiper = this;\r\n        if (!swiper || swiper.destroyed)\r\n            return;\r\n        var snapGrid = swiper.snapGrid, params = swiper.params;\r\n        // Breakpoints\r\n        if (params.breakpoints) {\r\n            swiper.setBreakpoint();\r\n        }\r\n        swiper.updateSize();\r\n        swiper.updateSlides();\r\n        swiper.updateProgress();\r\n        swiper.updateSlidesClasses();\r\n        function setTranslate() {\r\n            var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\r\n            var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\r\n            swiper.setTranslate(newTranslate);\r\n            swiper.updateActiveIndex();\r\n            swiper.updateSlidesClasses();\r\n        }\r\n        var translated;\r\n        if (swiper.params.freeMode) {\r\n            setTranslate();\r\n            if (swiper.params.autoHeight) {\r\n                swiper.updateAutoHeight();\r\n            }\r\n        }\r\n        else {\r\n            if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\r\n                translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n            }\r\n            else {\r\n                translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n            }\r\n            if (!translated) {\r\n                setTranslate();\r\n            }\r\n        }\r\n        if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n            swiper.checkOverflow();\r\n        }\r\n        swiper.emit('update');\r\n    };\r\n    Swiper.prototype.changeDirection = function (newDirection, needUpdate) {\r\n        if (needUpdate === void 0) { needUpdate = true; }\r\n        var swiper = this;\r\n        var currentDirection = swiper.params.direction;\r\n        if (!newDirection) {\r\n            // eslint-disable-next-line\r\n            newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\r\n        }\r\n        if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\r\n            return swiper;\r\n        }\r\n        if (currentDirection === 'vertical') {\r\n            swiper.$el\r\n                .removeClass(swiper.params.containerModifierClass + \"vertical wp8-vertical\")\r\n                .addClass(\"\" + swiper.params.containerModifierClass + newDirection);\r\n            if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\r\n                swiper.$el.addClass(swiper.params.containerModifierClass + \"wp8-\" + newDirection);\r\n            }\r\n        }\r\n        if (currentDirection === 'horizontal') {\r\n            swiper.$el\r\n                .removeClass(swiper.params.containerModifierClass + \"horizontal wp8-horizontal\")\r\n                .addClass(\"\" + swiper.params.containerModifierClass + newDirection);\r\n            if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\r\n                swiper.$el.addClass(swiper.params.containerModifierClass + \"wp8-\" + newDirection);\r\n            }\r\n        }\r\n        swiper.params.direction = newDirection;\r\n        swiper.slides.each(function (slideIndex, slideEl) {\r\n            if (newDirection === 'vertical') {\r\n                slideEl.style.width = '';\r\n            }\r\n            else {\r\n                slideEl.style.height = '';\r\n            }\r\n        });\r\n        swiper.emit('changeDirection');\r\n        if (needUpdate)\r\n            swiper.update();\r\n        return swiper;\r\n    };\r\n    Swiper.prototype.init = function () {\r\n        var swiper = this;\r\n        if (swiper.initialized)\r\n            return;\r\n        swiper.emit('beforeInit');\r\n        // Set breakpoint\r\n        if (swiper.params.breakpoints) {\r\n            swiper.setBreakpoint();\r\n        }\r\n        // Add Classes\r\n        swiper.addClasses();\r\n        // Create loop\r\n        if (swiper.params.loop) {\r\n            swiper.loopCreate();\r\n        }\r\n        // Update size\r\n        swiper.updateSize();\r\n        // Update slides\r\n        swiper.updateSlides();\r\n        if (swiper.params.watchOverflow) {\r\n            swiper.checkOverflow();\r\n        }\r\n        // Set Grab Cursor\r\n        if (swiper.params.grabCursor) {\r\n            swiper.setGrabCursor();\r\n        }\r\n        if (swiper.params.preloadImages) {\r\n            swiper.preloadImages();\r\n        }\r\n        // Slide To Initial Slide\r\n        if (swiper.params.loop) {\r\n            swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\r\n        }\r\n        else {\r\n            swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\r\n        }\r\n        // Attach events\r\n        swiper.attachEvents();\r\n        // Init Flag\r\n        swiper.initialized = true;\r\n        // Emit\r\n        swiper.emit('init');\r\n    };\r\n    Swiper.prototype.destroy = function (deleteInstance, cleanStyles) {\r\n        if (deleteInstance === void 0) { deleteInstance = true; }\r\n        if (cleanStyles === void 0) { cleanStyles = true; }\r\n        var swiper = this;\r\n        var params = swiper.params, $el = swiper.$el, $wrapperEl = swiper.$wrapperEl, slides = swiper.slides;\r\n        if (typeof swiper.params === 'undefined' || swiper.destroyed) {\r\n            return null;\r\n        }\r\n        swiper.emit('beforeDestroy');\r\n        // Init Flag\r\n        swiper.initialized = false;\r\n        // Detach events\r\n        swiper.detachEvents();\r\n        // Destroy loop\r\n        if (params.loop) {\r\n            swiper.loopDestroy();\r\n        }\r\n        // Cleanup styles\r\n        if (cleanStyles) {\r\n            swiper.removeClasses();\r\n            $el.removeAttr('style');\r\n            $wrapperEl.removeAttr('style');\r\n            if (slides && slides.length) {\r\n                slides\r\n                    .removeClass([\r\n                    params.slideVisibleClass,\r\n                    params.slideActiveClass,\r\n                    params.slideNextClass,\r\n                    params.slidePrevClass,\r\n                ].join(' '))\r\n                    .removeAttr('style')\r\n                    .removeAttr('data-swiper-slide-index')\r\n                    .removeAttr('data-swiper-column')\r\n                    .removeAttr('data-swiper-row');\r\n            }\r\n        }\r\n        swiper.emit('destroy');\r\n        // Detach emitter events\r\n        Object.keys(swiper.eventsListeners).forEach(function (eventName) {\r\n            swiper.off(eventName);\r\n        });\r\n        if (deleteInstance !== false) {\r\n            swiper.$el[0].swiper = null;\r\n            swiper.$el.data('swiper', null);\r\n            Utils.deleteProps(swiper);\r\n        }\r\n        swiper.destroyed = true;\r\n        return null;\r\n    };\r\n    Swiper.extendDefaults = function (newDefaults) {\r\n        Utils.extend(extendedDefaults, newDefaults);\r\n    };\r\n    Object.defineProperty(Swiper, \"extendedDefaults\", {\r\n        get: function () {\r\n            return extendedDefaults;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Swiper, \"defaults\", {\r\n        get: function () {\r\n            return defaults;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Swiper, \"Class\", {\r\n        get: function () {\r\n            return SwiperClass;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Swiper, \"$\", {\r\n        get: function () {\r\n            return $;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Swiper;\r\n}(SwiperClass));\r\nvar Device$1 = {\r\n    name: 'device',\r\n    proto: {\r\n        device: Device,\r\n    },\r\n    static: {\r\n        device: Device,\r\n    },\r\n};\r\nvar Support$1 = {\r\n    name: 'support',\r\n    proto: {\r\n        support: Support,\r\n    },\r\n    static: {\r\n        support: Support,\r\n    },\r\n};\r\nvar Browser$1 = {\r\n    name: 'browser',\r\n    proto: {\r\n        browser: Browser,\r\n    },\r\n    static: {\r\n        browser: Browser,\r\n    },\r\n};\r\nvar Resize = {\r\n    name: 'resize',\r\n    create: function () {\r\n        var swiper = this;\r\n        Utils.extend(swiper, {\r\n            resize: {\r\n                resizeHandler: function () {\r\n                    if (!swiper || swiper.destroyed || !swiper.initialized)\r\n                        return;\r\n                    swiper.emit('beforeResize');\r\n                    swiper.emit('resize');\r\n                },\r\n                orientationChangeHandler: function () {\r\n                    if (!swiper || swiper.destroyed || !swiper.initialized)\r\n                        return;\r\n                    swiper.emit('orientationchange');\r\n                },\r\n            },\r\n        });\r\n    },\r\n    on: {\r\n        init: function () {\r\n            var swiper = this;\r\n            // Emit resize\r\n            win.addEventListener('resize', swiper.resize.resizeHandler);\r\n            // Emit orientationchange\r\n            win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\r\n        },\r\n        destroy: function () {\r\n            var swiper = this;\r\n            win.removeEventListener('resize', swiper.resize.resizeHandler);\r\n            win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\r\n        },\r\n    },\r\n};\r\nvar Observer = {\r\n    func: win.MutationObserver || win.WebkitMutationObserver,\r\n    attach: function (target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var swiper = this;\r\n        var ObserverFunc = Observer.func;\r\n        var observer = new ObserverFunc(function (mutations) {\r\n            // The observerUpdate event should only be triggered\r\n            // once despite the number of mutations.  Additional\r\n            // triggers are redundant and are very costly\r\n            if (mutations.length === 1) {\r\n                swiper.emit('observerUpdate', mutations[0]);\r\n                return;\r\n            }\r\n            var observerUpdate = function observerUpdate() {\r\n                swiper.emit('observerUpdate', mutations[0]);\r\n            };\r\n            if (win.requestAnimationFrame) {\r\n                win.requestAnimationFrame(observerUpdate);\r\n            }\r\n            else {\r\n                win.setTimeout(observerUpdate, 0);\r\n            }\r\n        });\r\n        observer.observe(target, {\r\n            attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\r\n            childList: typeof options.childList === 'undefined' ? true : options.childList,\r\n            characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\r\n        });\r\n        swiper.observer.observers.push(observer);\r\n    },\r\n    init: function () {\r\n        var swiper = this;\r\n        if (!Support.observer || !swiper.params.observer)\r\n            return;\r\n        if (swiper.params.observeParents) {\r\n            var containerParents = swiper.$el.parents();\r\n            for (var i = 0; i < containerParents.length; i += 1) {\r\n                swiper.observer.attach(containerParents[i]);\r\n            }\r\n        }\r\n        // Observe container\r\n        swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\r\n        // Observe wrapper\r\n        swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\r\n    },\r\n    destroy: function () {\r\n        var swiper = this;\r\n        swiper.observer.observers.forEach(function (observer) {\r\n            observer.disconnect();\r\n        });\r\n        swiper.observer.observers = [];\r\n    },\r\n};\r\nvar Observer$1 = {\r\n    name: 'observer',\r\n    params: {\r\n        observer: false,\r\n        observeParents: false,\r\n        observeSlideChildren: false,\r\n    },\r\n    create: function () {\r\n        var swiper = this;\r\n        Utils.extend(swiper, {\r\n            observer: {\r\n                init: Observer.init.bind(swiper),\r\n                attach: Observer.attach.bind(swiper),\r\n                destroy: Observer.destroy.bind(swiper),\r\n                observers: [],\r\n            },\r\n        });\r\n    },\r\n    on: {\r\n        init: function () {\r\n            var swiper = this;\r\n            swiper.observer.init();\r\n        },\r\n        destroy: function () {\r\n            var swiper = this;\r\n            swiper.observer.destroy();\r\n        },\r\n    },\r\n};\r\nfunction isEventSupported() {\r\n    var eventName = 'onwheel';\r\n    var isSupported = eventName in doc;\r\n    if (!isSupported) {\r\n        var element = doc.createElement('div');\r\n        element.setAttribute(eventName, 'return;');\r\n        isSupported = typeof element[eventName] === 'function';\r\n    }\r\n    if (!isSupported\r\n        && doc.implementation\r\n        && doc.implementation.hasFeature\r\n        // always returns true in newer browsers as per the standard.\r\n        // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\r\n        && doc.implementation.hasFeature('', '') !== true) {\r\n        // This is the only way to test support for the `wheel` event in IE9+.\r\n        isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\r\n    }\r\n    return isSupported;\r\n}\r\nvar Mousewheel = {\r\n    lastScrollTime: Utils.now(),\r\n    event: (function getEvent() {\r\n        if (win.navigator.userAgent.indexOf('firefox') > -1)\r\n            return 'DOMMouseScroll';\r\n        return isEventSupported() ? 'wheel' : 'mousewheel';\r\n    }()),\r\n    normalize: function (e) {\r\n        // Reasonable defaults\r\n        var PIXEL_STEP = 10;\r\n        var LINE_HEIGHT = 40;\r\n        var PAGE_HEIGHT = 800;\r\n        var sX = 0;\r\n        var sY = 0; // spinX, spinY\r\n        var pX = 0;\r\n        var pY = 0; // pixelX, pixelY\r\n        // Legacy\r\n        if ('detail' in e) {\r\n            sY = e.detail;\r\n        }\r\n        if ('wheelDelta' in e) {\r\n            sY = -e.wheelDelta / 120;\r\n        }\r\n        if ('wheelDeltaY' in e) {\r\n            sY = -e.wheelDeltaY / 120;\r\n        }\r\n        if ('wheelDeltaX' in e) {\r\n            sX = -e.wheelDeltaX / 120;\r\n        }\r\n        // side scrolling on FF with DOMMouseScroll\r\n        if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\r\n            sX = sY;\r\n            sY = 0;\r\n        }\r\n        pX = sX * PIXEL_STEP;\r\n        pY = sY * PIXEL_STEP;\r\n        if ('deltaY' in e) {\r\n            pY = e.deltaY;\r\n        }\r\n        if ('deltaX' in e) {\r\n            pX = e.deltaX;\r\n        }\r\n        if ((pX || pY) && e.deltaMode) {\r\n            if (e.deltaMode === 1) { // delta in LINE units\r\n                pX *= LINE_HEIGHT;\r\n                pY *= LINE_HEIGHT;\r\n            }\r\n            else { // delta in PAGE units\r\n                pX *= PAGE_HEIGHT;\r\n                pY *= PAGE_HEIGHT;\r\n            }\r\n        }\r\n        // Fall-back if spin cannot be determined\r\n        if (pX && !sX) {\r\n            sX = (pX < 1) ? -1 : 1;\r\n        }\r\n        if (pY && !sY) {\r\n            sY = (pY < 1) ? -1 : 1;\r\n        }\r\n        return {\r\n            spinX: sX,\r\n            spinY: sY,\r\n            pixelX: pX,\r\n            pixelY: pY,\r\n        };\r\n    },\r\n    handleMouseEnter: function () {\r\n        var swiper = this;\r\n        swiper.mouseEntered = true;\r\n    },\r\n    handleMouseLeave: function () {\r\n        var swiper = this;\r\n        swiper.mouseEntered = false;\r\n    },\r\n    handle: function (event) {\r\n        var e = event;\r\n        var swiper = this;\r\n        var params = swiper.params.mousewheel;\r\n        if (!swiper.mouseEntered && !params.releaseOnEdges)\r\n            return true;\r\n        if (e.originalEvent)\r\n            e = e.originalEvent; // jquery fix\r\n        var delta = 0;\r\n        var rtlFactor = swiper.rtlTranslate ? -1 : 1;\r\n        var data = Mousewheel.normalize(e);\r\n        if (params.forceToAxis) {\r\n            if (swiper.isHorizontal()) {\r\n                if (Math.abs(data.pixelX) > Math.abs(data.pixelY))\r\n                    delta = data.pixelX * rtlFactor;\r\n                else\r\n                    return true;\r\n            }\r\n            else if (Math.abs(data.pixelY) > Math.abs(data.pixelX))\r\n                delta = data.pixelY;\r\n            else\r\n                return true;\r\n        }\r\n        else {\r\n            delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\r\n        }\r\n        if (delta === 0)\r\n            return true;\r\n        if (params.invert)\r\n            delta = -delta;\r\n        if (!swiper.params.freeMode) {\r\n            if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\r\n                if (delta < 0) {\r\n                    if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\r\n                        swiper.slideNext();\r\n                        swiper.emit('scroll', e);\r\n                    }\r\n                    else if (params.releaseOnEdges)\r\n                        return true;\r\n                }\r\n                else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\r\n                    swiper.slidePrev();\r\n                    swiper.emit('scroll', e);\r\n                }\r\n                else if (params.releaseOnEdges)\r\n                    return true;\r\n            }\r\n            swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\r\n        }\r\n        else {\r\n            // Freemode or scrollContainer:\r\n            if (swiper.params.loop) {\r\n                swiper.loopFix();\r\n            }\r\n            var position = swiper.getTranslate() + (delta * params.sensitivity);\r\n            var wasBeginning = swiper.isBeginning;\r\n            var wasEnd = swiper.isEnd;\r\n            if (position >= swiper.minTranslate())\r\n                position = swiper.minTranslate();\r\n            if (position <= swiper.maxTranslate())\r\n                position = swiper.maxTranslate();\r\n            swiper.setTransition(0);\r\n            swiper.setTranslate(position);\r\n            swiper.updateProgress();\r\n            swiper.updateActiveIndex();\r\n            swiper.updateSlidesClasses();\r\n            if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\r\n                swiper.updateSlidesClasses();\r\n            }\r\n            if (swiper.params.freeModeSticky) {\r\n                clearTimeout(swiper.mousewheel.timeout);\r\n                swiper.mousewheel.timeout = Utils.nextTick(function () {\r\n                    swiper.slideToClosest();\r\n                }, 300);\r\n            }\r\n            // Emit event\r\n            swiper.emit('scroll', e);\r\n            // Stop autoplay\r\n            if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction)\r\n                swiper.autoplay.stop();\r\n            // Return page scroll on edge positions\r\n            if (position === swiper.minTranslate() || position === swiper.maxTranslate())\r\n                return true;\r\n        }\r\n        if (e.preventDefault)\r\n            e.preventDefault();\r\n        else\r\n            e.returnValue = false;\r\n        return false;\r\n    },\r\n    enable: function () {\r\n        var swiper = this;\r\n        if (!Mousewheel.event)\r\n            return false;\r\n        if (swiper.mousewheel.enabled)\r\n            return false;\r\n        var target = swiper.$el;\r\n        if (swiper.params.mousewheel.eventsTarged !== 'container') {\r\n            target = $(swiper.params.mousewheel.eventsTarged);\r\n        }\r\n        target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\r\n        target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\r\n        target.on(Mousewheel.event, swiper.mousewheel.handle);\r\n        swiper.mousewheel.enabled = true;\r\n        return true;\r\n    },\r\n    disable: function () {\r\n        var swiper = this;\r\n        if (!Mousewheel.event)\r\n            return false;\r\n        if (!swiper.mousewheel.enabled)\r\n            return false;\r\n        var target = swiper.$el;\r\n        if (swiper.params.mousewheel.eventsTarged !== 'container') {\r\n            target = $(swiper.params.mousewheel.eventsTarged);\r\n        }\r\n        target.off(Mousewheel.event, swiper.mousewheel.handle);\r\n        swiper.mousewheel.enabled = false;\r\n        return true;\r\n    },\r\n};\r\nvar Pagination = {\r\n    update: function () {\r\n        // Render || Update Pagination bullets/items\r\n        var swiper = this;\r\n        var rtl = swiper.rtl;\r\n        var params = swiper.params.pagination;\r\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0)\r\n            return;\r\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n        var $el = swiper.pagination.$el;\r\n        // Current/Total\r\n        var current;\r\n        var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n        if (swiper.params.loop) {\r\n            current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\r\n            if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\r\n                current -= (slidesLength - (swiper.loopedSlides * 2));\r\n            }\r\n            if (current > total - 1)\r\n                current -= total;\r\n            if (current < 0 && swiper.params.paginationType !== 'bullets')\r\n                current = total + current;\r\n        }\r\n        else if (typeof swiper.snapIndex !== 'undefined') {\r\n            current = swiper.snapIndex;\r\n        }\r\n        else {\r\n            current = swiper.activeIndex || 0;\r\n        }\r\n        // Types\r\n        if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\r\n            var bullets = swiper.pagination.bullets;\r\n            var firstIndex_1;\r\n            var lastIndex_1;\r\n            var midIndex = void 0;\r\n            if (params.dynamicBullets) {\r\n                swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\r\n                $el.css(swiper.isHorizontal() ? 'width' : 'height', swiper.pagination.bulletSize * (params.dynamicMainBullets + 4) + \"px\");\r\n                if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\r\n                    swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\r\n                    if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\r\n                        swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\r\n                    }\r\n                    else if (swiper.pagination.dynamicBulletIndex < 0) {\r\n                        swiper.pagination.dynamicBulletIndex = 0;\r\n                    }\r\n                }\r\n                firstIndex_1 = current - swiper.pagination.dynamicBulletIndex;\r\n                lastIndex_1 = firstIndex_1 + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\r\n                midIndex = (lastIndex_1 + firstIndex_1) / 2;\r\n            }\r\n            bullets.removeClass(params.bulletActiveClass + \" \" + params.bulletActiveClass + \"-next \" + params.bulletActiveClass + \"-next-next \" + params.bulletActiveClass + \"-prev \" + params.bulletActiveClass + \"-prev-prev \" + params.bulletActiveClass + \"-main\");\r\n            if ($el.length > 1) {\r\n                bullets.each(function (index, bullet) {\r\n                    var $bullet = $(bullet);\r\n                    var bulletIndex = $bullet.index();\r\n                    if (bulletIndex === current) {\r\n                        $bullet.addClass(params.bulletActiveClass);\r\n                    }\r\n                    if (params.dynamicBullets) {\r\n                        if (bulletIndex >= firstIndex_1 && bulletIndex <= lastIndex_1) {\r\n                            $bullet.addClass(params.bulletActiveClass + \"-main\");\r\n                        }\r\n                        if (bulletIndex === firstIndex_1) {\r\n                            $bullet\r\n                                .prev()\r\n                                .addClass(params.bulletActiveClass + \"-prev\")\r\n                                .prev()\r\n                                .addClass(params.bulletActiveClass + \"-prev-prev\");\r\n                        }\r\n                        if (bulletIndex === lastIndex_1) {\r\n                            $bullet\r\n                                .next()\r\n                                .addClass(params.bulletActiveClass + \"-next\")\r\n                                .next()\r\n                                .addClass(params.bulletActiveClass + \"-next-next\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                var $bullet = bullets.eq(current);\r\n                $bullet.addClass(params.bulletActiveClass);\r\n                if (params.dynamicBullets) {\r\n                    var $firstDisplayedBullet = bullets.eq(firstIndex_1);\r\n                    var $lastDisplayedBullet = bullets.eq(lastIndex_1);\r\n                    for (var i = firstIndex_1; i <= lastIndex_1; i += 1) {\r\n                        bullets.eq(i).addClass(params.bulletActiveClass + \"-main\");\r\n                    }\r\n                    $firstDisplayedBullet\r\n                        .prev()\r\n                        .addClass(params.bulletActiveClass + \"-prev\")\r\n                        .prev()\r\n                        .addClass(params.bulletActiveClass + \"-prev-prev\");\r\n                    $lastDisplayedBullet\r\n                        .next()\r\n                        .addClass(params.bulletActiveClass + \"-next\")\r\n                        .next()\r\n                        .addClass(params.bulletActiveClass + \"-next-next\");\r\n                }\r\n            }\r\n            if (params.dynamicBullets) {\r\n                var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\r\n                var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\r\n                var offsetProp = rtl ? 'right' : 'left';\r\n                bullets.css(swiper.isHorizontal() ? offsetProp : 'top', bulletsOffset + \"px\");\r\n            }\r\n        }\r\n        if (params.type === 'fraction') {\r\n            $el.find(\".\" + params.currentClass).text(params.formatFractionCurrent(current + 1));\r\n            $el.find(\".\" + params.totalClass).text(params.formatFractionTotal(total));\r\n        }\r\n        if (params.type === 'progressbar') {\r\n            var progressbarDirection = void 0;\r\n            if (params.progressbarOpposite) {\r\n                progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\r\n            }\r\n            else {\r\n                progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\r\n            }\r\n            var scale = (current + 1) / total;\r\n            var scaleX = 1;\r\n            var scaleY = 1;\r\n            if (progressbarDirection === 'horizontal') {\r\n                scaleX = scale;\r\n            }\r\n            else {\r\n                scaleY = scale;\r\n            }\r\n            $el.find(\".\" + params.progressbarFillClass).transform(\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\").transition(swiper.params.speed);\r\n        }\r\n        if (params.type === 'custom' && params.renderCustom) {\r\n            $el.html(params.renderCustom(swiper, current + 1, total));\r\n            swiper.emit('paginationRender', swiper, $el[0]);\r\n        }\r\n        else {\r\n            swiper.emit('paginationUpdate', swiper, $el[0]);\r\n        }\r\n        $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\r\n    },\r\n    render: function () {\r\n        // Render Container\r\n        var swiper = this;\r\n        var params = swiper.params.pagination;\r\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0)\r\n            return;\r\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n        var $el = swiper.pagination.$el;\r\n        var paginationHTML = '';\r\n        if (params.type === 'bullets') {\r\n            var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n            for (var i = 0; i < numberOfBullets; i += 1) {\r\n                if (params.renderBullet) {\r\n                    paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\r\n                }\r\n                else {\r\n                    paginationHTML += \"<\" + params.bulletElement + \" class=\\\"\" + params.bulletClass + \"\\\"></\" + params.bulletElement + \">\";\r\n                }\r\n            }\r\n            $el.html(paginationHTML);\r\n            swiper.pagination.bullets = $el.find(\".\" + params.bulletClass);\r\n        }\r\n        if (params.type === 'fraction') {\r\n            if (params.renderFraction) {\r\n                paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\r\n            }\r\n            else {\r\n                paginationHTML = \"<span class=\\\"\" + params.currentClass + \"\\\"></span>\"\r\n                    + ' / '\r\n                    + (\"<span class=\\\"\" + params.totalClass + \"\\\"></span>\");\r\n            }\r\n            $el.html(paginationHTML);\r\n        }\r\n        if (params.type === 'progressbar') {\r\n            if (params.renderProgressbar) {\r\n                paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\r\n            }\r\n            else {\r\n                paginationHTML = \"<span class=\\\"\" + params.progressbarFillClass + \"\\\"></span>\";\r\n            }\r\n            $el.html(paginationHTML);\r\n        }\r\n        if (params.type !== 'custom') {\r\n            swiper.emit('paginationRender', swiper.pagination.$el[0]);\r\n        }\r\n    },\r\n    init: function () {\r\n        var swiper = this;\r\n        var params = swiper.params.pagination;\r\n        if (!params.el)\r\n            return;\r\n        var $el = $(params.el);\r\n        if ($el.length === 0)\r\n            return;\r\n        if (swiper.params.uniqueNavElements\r\n            && typeof params.el === 'string'\r\n            && $el.length > 1\r\n            && swiper.$el.find(params.el).length === 1) {\r\n            $el = swiper.$el.find(params.el);\r\n        }\r\n        if (params.type === 'bullets' && params.clickable) {\r\n            $el.addClass(params.clickableClass);\r\n        }\r\n        $el.addClass(params.modifierClass + params.type);\r\n        if (params.type === 'bullets' && params.dynamicBullets) {\r\n            $el.addClass(\"\" + params.modifierClass + params.type + \"-dynamic\");\r\n            swiper.pagination.dynamicBulletIndex = 0;\r\n            if (params.dynamicMainBullets < 1) {\r\n                params.dynamicMainBullets = 1;\r\n            }\r\n        }\r\n        if (params.type === 'progressbar' && params.progressbarOpposite) {\r\n            $el.addClass(params.progressbarOppositeClass);\r\n        }\r\n        if (params.clickable) {\r\n            $el.on('click', \".\" + params.bulletClass, function onClick(e) {\r\n                e.preventDefault();\r\n                var index = $(this).index() * swiper.params.slidesPerGroup;\r\n                if (swiper.params.loop)\r\n                    index += swiper.loopedSlides;\r\n                swiper.slideTo(index);\r\n            });\r\n        }\r\n        Utils.extend(swiper.pagination, {\r\n            $el: $el,\r\n            el: $el[0],\r\n        });\r\n    },\r\n    destroy: function () {\r\n        var swiper = this;\r\n        var params = swiper.params.pagination;\r\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0)\r\n            return;\r\n        var $el = swiper.pagination.$el;\r\n        $el.removeClass(params.hiddenClass);\r\n        $el.removeClass(params.modifierClass + params.type);\r\n        if (swiper.pagination.bullets)\r\n            swiper.pagination.bullets.removeClass(params.bulletActiveClass);\r\n        if (params.clickable) {\r\n            $el.off('click', \".\" + params.bulletClass);\r\n        }\r\n    },\r\n};\r\nvar pagination = {\r\n    name: 'pagination',\r\n    params: {\r\n        pagination: {\r\n            el: null,\r\n            bulletElement: 'span',\r\n            clickable: false,\r\n            hideOnClick: false,\r\n            renderBullet: null,\r\n            renderProgressbar: null,\r\n            renderFraction: null,\r\n            renderCustom: null,\r\n            progressbarOpposite: false,\r\n            type: 'bullets',\r\n            dynamicBullets: false,\r\n            dynamicMainBullets: 1,\r\n            formatFractionCurrent: function (number) { return number; },\r\n            formatFractionTotal: function (number) { return number; },\r\n            bulletClass: 'swiper-pagination-bullet',\r\n            bulletActiveClass: 'swiper-pagination-bullet-active',\r\n            modifierClass: 'swiper-pagination-',\r\n            currentClass: 'swiper-pagination-current',\r\n            totalClass: 'swiper-pagination-total',\r\n            hiddenClass: 'swiper-pagination-hidden',\r\n            progressbarFillClass: 'swiper-pagination-progressbar-fill',\r\n            progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\r\n            clickableClass: 'swiper-pagination-clickable',\r\n            lockClass: 'swiper-pagination-lock',\r\n        },\r\n    },\r\n    create: function () {\r\n        var swiper = this;\r\n        Utils.extend(swiper, {\r\n            pagination: {\r\n                init: Pagination.init.bind(swiper),\r\n                render: Pagination.render.bind(swiper),\r\n                update: Pagination.update.bind(swiper),\r\n                destroy: Pagination.destroy.bind(swiper),\r\n                dynamicBulletIndex: 0,\r\n            },\r\n        });\r\n    },\r\n    on: {\r\n        init: function () {\r\n            var swiper = this;\r\n            swiper.pagination.init();\r\n            swiper.pagination.render();\r\n            swiper.pagination.update();\r\n        },\r\n        activeIndexChange: function () {\r\n            var swiper = this;\r\n            if (swiper.params.loop) {\r\n                swiper.pagination.update();\r\n            }\r\n            else if (typeof swiper.snapIndex === 'undefined') {\r\n                swiper.pagination.update();\r\n            }\r\n        },\r\n        snapIndexChange: function () {\r\n            var swiper = this;\r\n            if (!swiper.params.loop) {\r\n                swiper.pagination.update();\r\n            }\r\n        },\r\n        slidesLengthChange: function () {\r\n            var swiper = this;\r\n            if (swiper.params.loop) {\r\n                swiper.pagination.render();\r\n                swiper.pagination.update();\r\n            }\r\n        },\r\n        snapGridLengthChange: function () {\r\n            var swiper = this;\r\n            if (!swiper.params.loop) {\r\n                swiper.pagination.render();\r\n                swiper.pagination.update();\r\n            }\r\n        },\r\n        destroy: function () {\r\n            var swiper = this;\r\n            swiper.pagination.destroy();\r\n        },\r\n        click: function (e) {\r\n            var swiper = this;\r\n            if (swiper.params.pagination.el\r\n                && swiper.params.pagination.hideOnClick\r\n                && swiper.pagination.$el.length > 0\r\n                && !$(e.target).hasClass(swiper.params.pagination.bulletClass)) {\r\n                var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\r\n                if (isHidden === true) {\r\n                    swiper.emit('paginationShow', swiper);\r\n                }\r\n                else {\r\n                    swiper.emit('paginationHide', swiper);\r\n                }\r\n                swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\r\n            }\r\n        },\r\n    },\r\n};\r\nvar Scrollbar = {\r\n    setTranslate: function () {\r\n        var swiper = this;\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)\r\n            return;\r\n        var scrollbar = swiper.scrollbar, rtl = swiper.rtlTranslate, progress = swiper.progress;\r\n        var dragSize = scrollbar.dragSize, trackSize = scrollbar.trackSize, $dragEl = scrollbar.$dragEl, $el = scrollbar.$el;\r\n        var params = swiper.params.scrollbar;\r\n        var newSize = dragSize;\r\n        var newPos = (trackSize - dragSize) * progress;\r\n        if (rtl) {\r\n            newPos = -newPos;\r\n            if (newPos > 0) {\r\n                newSize = dragSize - newPos;\r\n                newPos = 0;\r\n            }\r\n            else if (-newPos + dragSize > trackSize) {\r\n                newSize = trackSize + newPos;\r\n            }\r\n        }\r\n        else if (newPos < 0) {\r\n            newSize = dragSize + newPos;\r\n            newPos = 0;\r\n        }\r\n        else if (newPos + dragSize > trackSize) {\r\n            newSize = trackSize - newPos;\r\n        }\r\n        if (swiper.isHorizontal()) {\r\n            if (Support.transforms3d) {\r\n                $dragEl.transform(\"translate3d(\" + newPos + \"px, 0, 0)\");\r\n            }\r\n            else {\r\n                $dragEl.transform(\"translateX(\" + newPos + \"px)\");\r\n            }\r\n            $dragEl[0].style.width = newSize + \"px\";\r\n        }\r\n        else {\r\n            if (Support.transforms3d) {\r\n                $dragEl.transform(\"translate3d(0px, \" + newPos + \"px, 0)\");\r\n            }\r\n            else {\r\n                $dragEl.transform(\"translateY(\" + newPos + \"px)\");\r\n            }\r\n            $dragEl[0].style.height = newSize + \"px\";\r\n        }\r\n        if (params.hide) {\r\n            clearTimeout(swiper.scrollbar.timeout);\r\n            $el[0].style.opacity = 1;\r\n            swiper.scrollbar.timeout = setTimeout(function () {\r\n                $el[0].style.opacity = 0;\r\n                $el.transition(400);\r\n            }, 1000);\r\n        }\r\n    },\r\n    setTransition: function (duration) {\r\n        var swiper = this;\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)\r\n            return;\r\n        swiper.scrollbar.$dragEl.transition(duration);\r\n    },\r\n    updateSize: function () {\r\n        var swiper = this;\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)\r\n            return;\r\n        var scrollbar = swiper.scrollbar;\r\n        var $dragEl = scrollbar.$dragEl, $el = scrollbar.$el;\r\n        $dragEl[0].style.width = '';\r\n        $dragEl[0].style.height = '';\r\n        var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\r\n        var divider = swiper.size / swiper.virtualSize;\r\n        var moveDivider = divider * (trackSize / swiper.size);\r\n        var dragSize;\r\n        if (swiper.params.scrollbar.dragSize === 'auto') {\r\n            dragSize = trackSize * divider;\r\n        }\r\n        else {\r\n            dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\r\n        }\r\n        if (swiper.isHorizontal()) {\r\n            $dragEl[0].style.width = dragSize + \"px\";\r\n        }\r\n        else {\r\n            $dragEl[0].style.height = dragSize + \"px\";\r\n        }\r\n        if (divider >= 1) {\r\n            $el[0].style.display = 'none';\r\n        }\r\n        else {\r\n            $el[0].style.display = '';\r\n        }\r\n        if (swiper.params.scrollbar.hide) {\r\n            $el[0].style.opacity = 0;\r\n        }\r\n        Utils.extend(scrollbar, {\r\n            trackSize: trackSize,\r\n            divider: divider,\r\n            moveDivider: moveDivider,\r\n            dragSize: dragSize,\r\n        });\r\n        scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\r\n    },\r\n    setDragPosition: function (e) {\r\n        var swiper = this;\r\n        var scrollbar = swiper.scrollbar, rtl = swiper.rtlTranslate;\r\n        var $el = scrollbar.$el, dragSize = scrollbar.dragSize, trackSize = scrollbar.trackSize;\r\n        var pointerPosition;\r\n        if (swiper.isHorizontal()) {\r\n            pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\r\n        }\r\n        else {\r\n            pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\r\n        }\r\n        var positionRatio;\r\n        positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\r\n        positionRatio = Math.max(Math.min(positionRatio, 1), 0);\r\n        if (rtl) {\r\n            positionRatio = 1 - positionRatio;\r\n        }\r\n        var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\r\n        swiper.updateProgress(position);\r\n        swiper.setTranslate(position);\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n    },\r\n    onDragStart: function (e) {\r\n        var swiper = this;\r\n        var params = swiper.params.scrollbar;\r\n        var scrollbar = swiper.scrollbar, $wrapperEl = swiper.$wrapperEl;\r\n        var $el = scrollbar.$el, $dragEl = scrollbar.$dragEl;\r\n        swiper.scrollbar.isTouched = true;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        $wrapperEl.transition(100);\r\n        $dragEl.transition(100);\r\n        scrollbar.setDragPosition(e);\r\n        clearTimeout(swiper.scrollbar.dragTimeout);\r\n        $el.transition(0);\r\n        if (params.hide) {\r\n            $el.css('opacity', 1);\r\n        }\r\n        swiper.emit('scrollbarDragStart', e);\r\n    },\r\n    onDragMove: function (e) {\r\n        var swiper = this;\r\n        var scrollbar = swiper.scrollbar, $wrapperEl = swiper.$wrapperEl;\r\n        var $el = scrollbar.$el, $dragEl = scrollbar.$dragEl;\r\n        if (!swiper.scrollbar.isTouched)\r\n            return;\r\n        if (e.preventDefault)\r\n            e.preventDefault();\r\n        else\r\n            e.returnValue = false;\r\n        scrollbar.setDragPosition(e);\r\n        $wrapperEl.transition(0);\r\n        $el.transition(0);\r\n        $dragEl.transition(0);\r\n        swiper.emit('scrollbarDragMove', e);\r\n    },\r\n    onDragEnd: function (e) {\r\n        var swiper = this;\r\n        var params = swiper.params.scrollbar;\r\n        var scrollbar = swiper.scrollbar;\r\n        var $el = scrollbar.$el;\r\n        if (!swiper.scrollbar.isTouched)\r\n            return;\r\n        swiper.scrollbar.isTouched = false;\r\n        if (params.hide) {\r\n            clearTimeout(swiper.scrollbar.dragTimeout);\r\n            swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\r\n                $el.css('opacity', 0);\r\n                $el.transition(400);\r\n            }, 1000);\r\n        }\r\n        swiper.emit('scrollbarDragEnd', e);\r\n        if (params.snapOnRelease) {\r\n            swiper.slideToClosest();\r\n        }\r\n    },\r\n    enableDraggable: function () {\r\n        var swiper = this;\r\n        if (!swiper.params.scrollbar.el)\r\n            return;\r\n        var scrollbar = swiper.scrollbar, touchEventsTouch = swiper.touchEventsTouch, touchEventsDesktop = swiper.touchEventsDesktop, params = swiper.params;\r\n        var $el = scrollbar.$el;\r\n        var target = $el[0];\r\n        var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\r\n        var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\r\n        if (!Support.touch) {\r\n            target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\r\n            doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\r\n            doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n        }\r\n        else {\r\n            target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\r\n            target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\r\n            target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n        }\r\n    },\r\n    disableDraggable: function () {\r\n        var swiper = this;\r\n        if (!swiper.params.scrollbar.el)\r\n            return;\r\n        var scrollbar = swiper.scrollbar, touchEventsTouch = swiper.touchEventsTouch, touchEventsDesktop = swiper.touchEventsDesktop, params = swiper.params;\r\n        var $el = scrollbar.$el;\r\n        var target = $el[0];\r\n        var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\r\n        var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\r\n        if (!Support.touch) {\r\n            target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\r\n            doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\r\n            doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n        }\r\n        else {\r\n            target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\r\n            target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\r\n            target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n        }\r\n    },\r\n    init: function () {\r\n        var swiper = this;\r\n        if (!swiper.params.scrollbar.el)\r\n            return;\r\n        var scrollbar = swiper.scrollbar, $swiperEl = swiper.$el;\r\n        var params = swiper.params.scrollbar;\r\n        var $el = $(params.el);\r\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\r\n            $el = $swiperEl.find(params.el);\r\n        }\r\n        var $dragEl = $el.find(\".\" + swiper.params.scrollbar.dragClass);\r\n        if ($dragEl.length === 0) {\r\n            $dragEl = $(\"<div class=\\\"\" + swiper.params.scrollbar.dragClass + \"\\\"></div>\");\r\n            $el.append($dragEl);\r\n        }\r\n        Utils.extend(scrollbar, {\r\n            $el: $el,\r\n            el: $el[0],\r\n            $dragEl: $dragEl,\r\n            dragEl: $dragEl[0],\r\n        });\r\n        if (params.draggable) {\r\n            scrollbar.enableDraggable();\r\n        }\r\n    },\r\n    destroy: function () {\r\n        var swiper = this;\r\n        swiper.scrollbar.disableDraggable();\r\n    },\r\n};\r\nvar scrollbar = {\r\n    name: 'scrollbar',\r\n    params: {\r\n        scrollbar: {\r\n            el: null,\r\n            dragSize: 'auto',\r\n            hide: false,\r\n            draggable: false,\r\n            snapOnRelease: true,\r\n            lockClass: 'swiper-scrollbar-lock',\r\n            dragClass: 'swiper-scrollbar-drag',\r\n        },\r\n    },\r\n    create: function () {\r\n        var swiper = this;\r\n        Utils.extend(swiper, {\r\n            scrollbar: {\r\n                init: Scrollbar.init.bind(swiper),\r\n                destroy: Scrollbar.destroy.bind(swiper),\r\n                updateSize: Scrollbar.updateSize.bind(swiper),\r\n                setTranslate: Scrollbar.setTranslate.bind(swiper),\r\n                setTransition: Scrollbar.setTransition.bind(swiper),\r\n                enableDraggable: Scrollbar.enableDraggable.bind(swiper),\r\n                disableDraggable: Scrollbar.disableDraggable.bind(swiper),\r\n                setDragPosition: Scrollbar.setDragPosition.bind(swiper),\r\n                onDragStart: Scrollbar.onDragStart.bind(swiper),\r\n                onDragMove: Scrollbar.onDragMove.bind(swiper),\r\n                onDragEnd: Scrollbar.onDragEnd.bind(swiper),\r\n                isTouched: false,\r\n                timeout: null,\r\n                dragTimeout: null,\r\n            },\r\n        });\r\n    },\r\n    on: {\r\n        init: function () {\r\n            var swiper = this;\r\n            swiper.scrollbar.init();\r\n            swiper.scrollbar.updateSize();\r\n            swiper.scrollbar.setTranslate();\r\n        },\r\n        update: function () {\r\n            var swiper = this;\r\n            swiper.scrollbar.updateSize();\r\n        },\r\n        resize: function () {\r\n            var swiper = this;\r\n            swiper.scrollbar.updateSize();\r\n        },\r\n        observerUpdate: function () {\r\n            var swiper = this;\r\n            swiper.scrollbar.updateSize();\r\n        },\r\n        setTranslate: function () {\r\n            var swiper = this;\r\n            swiper.scrollbar.setTranslate();\r\n        },\r\n        setTransition: function (duration) {\r\n            var swiper = this;\r\n            swiper.scrollbar.setTransition(duration);\r\n        },\r\n        destroy: function () {\r\n            var swiper = this;\r\n            swiper.scrollbar.destroy();\r\n        },\r\n    },\r\n};\r\nvar Zoom = {\r\n    // Calc Scale From Multi-touches\r\n    getDistanceBetweenTouches: function (e) {\r\n        if (e.targetTouches.length < 2)\r\n            return 1;\r\n        var x1 = e.targetTouches[0].pageX;\r\n        var y1 = e.targetTouches[0].pageY;\r\n        var x2 = e.targetTouches[1].pageX;\r\n        var y2 = e.targetTouches[1].pageY;\r\n        var distance = Math.sqrt((Math.pow((x2 - x1), 2)) + (Math.pow((y2 - y1), 2)));\r\n        return distance;\r\n    },\r\n    // Events\r\n    onGestureStart: function (e) {\r\n        var swiper = this;\r\n        var params = swiper.params.zoom;\r\n        var zoom = swiper.zoom;\r\n        var gesture = zoom.gesture;\r\n        zoom.fakeGestureTouched = false;\r\n        zoom.fakeGestureMoved = false;\r\n        if (!Support.gestures) {\r\n            if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\r\n                return;\r\n            }\r\n            zoom.fakeGestureTouched = true;\r\n            gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\r\n        }\r\n        if (!gesture.$slideEl || !gesture.$slideEl.length) {\r\n            gesture.$slideEl = $(e.target).closest('.swiper-slide');\r\n            if (gesture.$slideEl.length === 0)\r\n                gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n            gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\r\n            gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\r\n            gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n            if (gesture.$imageWrapEl.length === 0) {\r\n                gesture.$imageEl = undefined;\r\n                return;\r\n            }\r\n        }\r\n        gesture.$imageEl.transition(0);\r\n        swiper.zoom.isScaling = true;\r\n    },\r\n    onGestureChange: function (e) {\r\n        var swiper = this;\r\n        var params = swiper.params.zoom;\r\n        var zoom = swiper.zoom;\r\n        var gesture = zoom.gesture;\r\n        if (!Support.gestures) {\r\n            if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\r\n                return;\r\n            }\r\n            zoom.fakeGestureMoved = true;\r\n            gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\r\n        }\r\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\r\n            return;\r\n        if (Support.gestures) {\r\n            zoom.scale = e.scale * zoom.currentScale;\r\n        }\r\n        else {\r\n            zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\r\n        }\r\n        if (zoom.scale > gesture.maxRatio) {\r\n            zoom.scale = (gesture.maxRatio - 1) + (Math.pow(((zoom.scale - gesture.maxRatio) + 1), 0.5));\r\n        }\r\n        if (zoom.scale < params.minRatio) {\r\n            zoom.scale = (params.minRatio + 1) - (Math.pow(((params.minRatio - zoom.scale) + 1), 0.5));\r\n        }\r\n        gesture.$imageEl.transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\r\n    },\r\n    onGestureEnd: function (e) {\r\n        var swiper = this;\r\n        var params = swiper.params.zoom;\r\n        var zoom = swiper.zoom;\r\n        var gesture = zoom.gesture;\r\n        if (!Support.gestures) {\r\n            if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\r\n                return;\r\n            }\r\n            if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\r\n                return;\r\n            }\r\n            zoom.fakeGestureTouched = false;\r\n            zoom.fakeGestureMoved = false;\r\n        }\r\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\r\n            return;\r\n        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\r\n        gesture.$imageEl.transition(swiper.params.speed).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\r\n        zoom.currentScale = zoom.scale;\r\n        zoom.isScaling = false;\r\n        if (zoom.scale === 1)\r\n            gesture.$slideEl = undefined;\r\n    },\r\n    onTouchStart: function (e) {\r\n        var swiper = this;\r\n        var zoom = swiper.zoom;\r\n        var gesture = zoom.gesture, image = zoom.image;\r\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\r\n            return;\r\n        if (image.isTouched)\r\n            return;\r\n        if (Device.android)\r\n            e.preventDefault();\r\n        image.isTouched = true;\r\n        image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\r\n        image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\r\n    },\r\n    onTouchMove: function (e) {\r\n        var swiper = this;\r\n        var zoom = swiper.zoom;\r\n        var gesture = zoom.gesture, image = zoom.image, velocity = zoom.velocity;\r\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\r\n            return;\r\n        swiper.allowClick = false;\r\n        if (!image.isTouched || !gesture.$slideEl)\r\n            return;\r\n        if (!image.isMoved) {\r\n            image.width = gesture.$imageEl[0].offsetWidth;\r\n            image.height = gesture.$imageEl[0].offsetHeight;\r\n            image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\r\n            image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\r\n            gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\r\n            gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\r\n            gesture.$imageWrapEl.transition(0);\r\n            if (swiper.rtl) {\r\n                image.startX = -image.startX;\r\n                image.startY = -image.startY;\r\n            }\r\n        }\r\n        // Define if we need image drag\r\n        var scaledWidth = image.width * zoom.scale;\r\n        var scaledHeight = image.height * zoom.scale;\r\n        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight)\r\n            return;\r\n        image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\r\n        image.maxX = -image.minX;\r\n        image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\r\n        image.maxY = -image.minY;\r\n        image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\r\n        image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\r\n        if (!image.isMoved && !zoom.isScaling) {\r\n            if (swiper.isHorizontal()\r\n                && ((Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\r\n                    || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x))) {\r\n                image.isTouched = false;\r\n                return;\r\n            }\r\n            if (!swiper.isHorizontal()\r\n                && ((Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\r\n                    || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y))) {\r\n                image.isTouched = false;\r\n                return;\r\n            }\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        image.isMoved = true;\r\n        image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\r\n        image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\r\n        if (image.currentX < image.minX) {\r\n            image.currentX = (image.minX + 1) - (Math.pow(((image.minX - image.currentX) + 1), 0.8));\r\n        }\r\n        if (image.currentX > image.maxX) {\r\n            image.currentX = (image.maxX - 1) + (Math.pow(((image.currentX - image.maxX) + 1), 0.8));\r\n        }\r\n        if (image.currentY < image.minY) {\r\n            image.currentY = (image.minY + 1) - (Math.pow(((image.minY - image.currentY) + 1), 0.8));\r\n        }\r\n        if (image.currentY > image.maxY) {\r\n            image.currentY = (image.maxY - 1) + (Math.pow(((image.currentY - image.maxY) + 1), 0.8));\r\n        }\r\n        // Velocity\r\n        if (!velocity.prevPositionX)\r\n            velocity.prevPositionX = image.touchesCurrent.x;\r\n        if (!velocity.prevPositionY)\r\n            velocity.prevPositionY = image.touchesCurrent.y;\r\n        if (!velocity.prevTime)\r\n            velocity.prevTime = Date.now();\r\n        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\r\n        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\r\n        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2)\r\n            velocity.x = 0;\r\n        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2)\r\n            velocity.y = 0;\r\n        velocity.prevPositionX = image.touchesCurrent.x;\r\n        velocity.prevPositionY = image.touchesCurrent.y;\r\n        velocity.prevTime = Date.now();\r\n        gesture.$imageWrapEl.transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\r\n    },\r\n    onTouchEnd: function () {\r\n        var swiper = this;\r\n        var zoom = swiper.zoom;\r\n        var gesture = zoom.gesture, image = zoom.image, velocity = zoom.velocity;\r\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\r\n            return;\r\n        if (!image.isTouched || !image.isMoved) {\r\n            image.isTouched = false;\r\n            image.isMoved = false;\r\n            return;\r\n        }\r\n        image.isTouched = false;\r\n        image.isMoved = false;\r\n        var momentumDurationX = 300;\r\n        var momentumDurationY = 300;\r\n        var momentumDistanceX = velocity.x * momentumDurationX;\r\n        var newPositionX = image.currentX + momentumDistanceX;\r\n        var momentumDistanceY = velocity.y * momentumDurationY;\r\n        var newPositionY = image.currentY + momentumDistanceY;\r\n        // Fix duration\r\n        if (velocity.x !== 0)\r\n            momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\r\n        if (velocity.y !== 0)\r\n            momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\r\n        var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\r\n        image.currentX = newPositionX;\r\n        image.currentY = newPositionY;\r\n        // Define if we need image drag\r\n        var scaledWidth = image.width * zoom.scale;\r\n        var scaledHeight = image.height * zoom.scale;\r\n        image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\r\n        image.maxX = -image.minX;\r\n        image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\r\n        image.maxY = -image.minY;\r\n        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\r\n        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\r\n        gesture.$imageWrapEl.transition(momentumDuration).transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\r\n    },\r\n    onTransitionEnd: function () {\r\n        var swiper = this;\r\n        var zoom = swiper.zoom;\r\n        var gesture = zoom.gesture;\r\n        if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\r\n            gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\r\n            gesture.$imageWrapEl.transform('translate3d(0,0,0)');\r\n            zoom.scale = 1;\r\n            zoom.currentScale = 1;\r\n            gesture.$slideEl = undefined;\r\n            gesture.$imageEl = undefined;\r\n            gesture.$imageWrapEl = undefined;\r\n        }\r\n    },\r\n    // Toggle Zoom\r\n    toggle: function (e) {\r\n        var swiper = this;\r\n        var zoom = swiper.zoom;\r\n        if (zoom.scale && zoom.scale !== 1) {\r\n            // Zoom Out\r\n            zoom.out();\r\n        }\r\n        else {\r\n            // Zoom In\r\n            zoom.in(e);\r\n        }\r\n    },\r\n    in: function (e) {\r\n        var swiper = this;\r\n        var zoom = swiper.zoom;\r\n        var params = swiper.params.zoom;\r\n        var gesture = zoom.gesture, image = zoom.image;\r\n        if (!gesture.$slideEl) {\r\n            gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\r\n            gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\r\n            gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\r\n        }\r\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\r\n            return;\r\n        gesture.$slideEl.addClass(\"\" + params.zoomedSlideClass);\r\n        var touchX;\r\n        var touchY;\r\n        var offsetX;\r\n        var offsetY;\r\n        var diffX;\r\n        var diffY;\r\n        var translateX;\r\n        var translateY;\r\n        var imageWidth;\r\n        var imageHeight;\r\n        var scaledWidth;\r\n        var scaledHeight;\r\n        var translateMinX;\r\n        var translateMinY;\r\n        var translateMaxX;\r\n        var translateMaxY;\r\n        var slideWidth;\r\n        var slideHeight;\r\n        if (typeof image.touchesStart.x === 'undefined' && e) {\r\n            touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\r\n            touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\r\n        }\r\n        else {\r\n            touchX = image.touchesStart.x;\r\n            touchY = image.touchesStart.y;\r\n        }\r\n        zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n        zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n        if (e) {\r\n            slideWidth = gesture.$slideEl[0].offsetWidth;\r\n            slideHeight = gesture.$slideEl[0].offsetHeight;\r\n            offsetX = gesture.$slideEl.offset().left;\r\n            offsetY = gesture.$slideEl.offset().top;\r\n            diffX = (offsetX + (slideWidth / 2)) - touchX;\r\n            diffY = (offsetY + (slideHeight / 2)) - touchY;\r\n            imageWidth = gesture.$imageEl[0].offsetWidth;\r\n            imageHeight = gesture.$imageEl[0].offsetHeight;\r\n            scaledWidth = imageWidth * zoom.scale;\r\n            scaledHeight = imageHeight * zoom.scale;\r\n            translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\r\n            translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\r\n            translateMaxX = -translateMinX;\r\n            translateMaxY = -translateMinY;\r\n            translateX = diffX * zoom.scale;\r\n            translateY = diffY * zoom.scale;\r\n            if (translateX < translateMinX) {\r\n                translateX = translateMinX;\r\n            }\r\n            if (translateX > translateMaxX) {\r\n                translateX = translateMaxX;\r\n            }\r\n            if (translateY < translateMinY) {\r\n                translateY = translateMinY;\r\n            }\r\n            if (translateY > translateMaxY) {\r\n                translateY = translateMaxY;\r\n            }\r\n        }\r\n        else {\r\n            translateX = 0;\r\n            translateY = 0;\r\n        }\r\n        gesture.$imageWrapEl.transition(300).transform(\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\");\r\n        gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\r\n    },\r\n    out: function () {\r\n        var swiper = this;\r\n        var zoom = swiper.zoom;\r\n        var params = swiper.params.zoom;\r\n        var gesture = zoom.gesture;\r\n        if (!gesture.$slideEl) {\r\n            gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\r\n            gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\r\n            gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\r\n        }\r\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\r\n            return;\r\n        zoom.scale = 1;\r\n        zoom.currentScale = 1;\r\n        gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\r\n        gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\r\n        gesture.$slideEl.removeClass(\"\" + params.zoomedSlideClass);\r\n        gesture.$slideEl = undefined;\r\n    },\r\n    // Attach/Detach Events\r\n    enable: function () {\r\n        var swiper = this;\r\n        var zoom = swiper.zoom;\r\n        if (zoom.enabled)\r\n            return;\r\n        zoom.enabled = true;\r\n        var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\r\n        // Scale image\r\n        if (Support.gestures) {\r\n            swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\r\n            swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\r\n            swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\r\n        }\r\n        else if (swiper.touchEvents.start === 'touchstart') {\r\n            swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\r\n            swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\r\n            swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\r\n        }\r\n        // Move image\r\n        swiper.$wrapperEl.on(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove);\r\n    },\r\n    disable: function () {\r\n        var swiper = this;\r\n        var zoom = swiper.zoom;\r\n        if (!zoom.enabled)\r\n            return;\r\n        swiper.zoom.enabled = false;\r\n        var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\r\n        // Scale image\r\n        if (Support.gestures) {\r\n            swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\r\n            swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\r\n            swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\r\n        }\r\n        else if (swiper.touchEvents.start === 'touchstart') {\r\n            swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\r\n            swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\r\n            swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\r\n        }\r\n        // Move image\r\n        swiper.$wrapperEl.off(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove);\r\n    },\r\n};\r\nvar zoom = {\r\n    name: 'zoom',\r\n    params: {\r\n        zoom: {\r\n            enabled: false,\r\n            maxRatio: 3,\r\n            minRatio: 1,\r\n            toggle: true,\r\n            containerClass: 'swiper-zoom-container',\r\n            zoomedSlideClass: 'swiper-slide-zoomed',\r\n        },\r\n    },\r\n    create: function () {\r\n        var swiper = this;\r\n        var zoom = {\r\n            enabled: false,\r\n            scale: 1,\r\n            currentScale: 1,\r\n            isScaling: false,\r\n            gesture: {\r\n                $slideEl: undefined,\r\n                slideWidth: undefined,\r\n                slideHeight: undefined,\r\n                $imageEl: undefined,\r\n                $imageWrapEl: undefined,\r\n                maxRatio: 3,\r\n            },\r\n            image: {\r\n                isTouched: undefined,\r\n                isMoved: undefined,\r\n                currentX: undefined,\r\n                currentY: undefined,\r\n                minX: undefined,\r\n                minY: undefined,\r\n                maxX: undefined,\r\n                maxY: undefined,\r\n                width: undefined,\r\n                height: undefined,\r\n                startX: undefined,\r\n                startY: undefined,\r\n                touchesStart: {},\r\n                touchesCurrent: {},\r\n            },\r\n            velocity: {\r\n                x: undefined,\r\n                y: undefined,\r\n                prevPositionX: undefined,\r\n                prevPositionY: undefined,\r\n                prevTime: undefined,\r\n            },\r\n        };\r\n        ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\r\n            zoom[methodName] = Zoom[methodName].bind(swiper);\r\n        });\r\n        Utils.extend(swiper, {\r\n            zoom: zoom,\r\n        });\r\n        var scale = 1;\r\n        Object.defineProperty(swiper.zoom, 'scale', {\r\n            get: function () {\r\n                return scale;\r\n            },\r\n            set: function (value) {\r\n                if (scale !== value) {\r\n                    var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\r\n                    var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\r\n                    swiper.emit('zoomChange', value, imageEl, slideEl);\r\n                }\r\n                scale = value;\r\n            },\r\n        });\r\n    },\r\n    on: {\r\n        init: function () {\r\n            var swiper = this;\r\n            if (swiper.params.zoom.enabled) {\r\n                swiper.zoom.enable();\r\n            }\r\n        },\r\n        destroy: function () {\r\n            var swiper = this;\r\n            swiper.zoom.disable();\r\n        },\r\n        touchStart: function (e) {\r\n            var swiper = this;\r\n            if (!swiper.zoom.enabled)\r\n                return;\r\n            swiper.zoom.onTouchStart(e);\r\n        },\r\n        touchEnd: function (e) {\r\n            var swiper = this;\r\n            if (!swiper.zoom.enabled)\r\n                return;\r\n            swiper.zoom.onTouchEnd(e);\r\n        },\r\n        doubleTap: function (e) {\r\n            var swiper = this;\r\n            if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\r\n                swiper.zoom.toggle(e);\r\n            }\r\n        },\r\n        transitionEnd: function () {\r\n            var swiper = this;\r\n            if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\r\n                swiper.zoom.onTransitionEnd();\r\n            }\r\n        },\r\n    },\r\n};\r\n/* eslint no-underscore-dangle: \"off\" */\r\nvar Autoplay = {\r\n    run: function () {\r\n        var swiper = this;\r\n        var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\r\n        var delay = swiper.params.autoplay.delay;\r\n        if ($activeSlideEl.attr('data-swiper-autoplay')) {\r\n            delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\r\n        }\r\n        swiper.autoplay.timeout = Utils.nextTick(function () {\r\n            if (swiper.params.autoplay.reverseDirection) {\r\n                if (swiper.params.loop) {\r\n                    swiper.loopFix();\r\n                    swiper.slidePrev(swiper.params.speed, true, true);\r\n                    swiper.emit('autoplay');\r\n                }\r\n                else if (!swiper.isBeginning) {\r\n                    swiper.slidePrev(swiper.params.speed, true, true);\r\n                    swiper.emit('autoplay');\r\n                }\r\n                else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n                    swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\r\n                    swiper.emit('autoplay');\r\n                }\r\n                else {\r\n                    swiper.autoplay.stop();\r\n                }\r\n            }\r\n            else if (swiper.params.loop) {\r\n                swiper.loopFix();\r\n                swiper.slideNext(swiper.params.speed, true, true);\r\n                swiper.emit('autoplay');\r\n            }\r\n            else if (!swiper.isEnd) {\r\n                swiper.slideNext(swiper.params.speed, true, true);\r\n                swiper.emit('autoplay');\r\n            }\r\n            else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n                swiper.slideTo(0, swiper.params.speed, true, true);\r\n                swiper.emit('autoplay');\r\n            }\r\n            else {\r\n                swiper.autoplay.stop();\r\n            }\r\n        }, delay);\r\n    },\r\n    start: function () {\r\n        var swiper = this;\r\n        if (typeof swiper.autoplay.timeout !== 'undefined')\r\n            return false;\r\n        if (swiper.autoplay.running)\r\n            return false;\r\n        swiper.autoplay.running = true;\r\n        swiper.emit('autoplayStart');\r\n        swiper.autoplay.run();\r\n        return true;\r\n    },\r\n    stop: function () {\r\n        var swiper = this;\r\n        if (!swiper.autoplay.running)\r\n            return false;\r\n        if (typeof swiper.autoplay.timeout === 'undefined')\r\n            return false;\r\n        if (swiper.autoplay.timeout) {\r\n            clearTimeout(swiper.autoplay.timeout);\r\n            swiper.autoplay.timeout = undefined;\r\n        }\r\n        swiper.autoplay.running = false;\r\n        swiper.emit('autoplayStop');\r\n        return true;\r\n    },\r\n    pause: function (speed) {\r\n        var swiper = this;\r\n        if (!swiper.autoplay.running)\r\n            return;\r\n        if (swiper.autoplay.paused)\r\n            return;\r\n        if (swiper.autoplay.timeout)\r\n            clearTimeout(swiper.autoplay.timeout);\r\n        swiper.autoplay.paused = true;\r\n        if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\r\n            swiper.autoplay.paused = false;\r\n            swiper.autoplay.run();\r\n        }\r\n        else {\r\n            swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\r\n            swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\r\n        }\r\n    },\r\n};\r\nvar autoplay = {\r\n    name: 'autoplay',\r\n    params: {\r\n        autoplay: {\r\n            enabled: false,\r\n            delay: 3000,\r\n            waitForTransition: true,\r\n            disableOnInteraction: true,\r\n            stopOnLastSlide: false,\r\n            reverseDirection: false,\r\n        },\r\n    },\r\n    create: function () {\r\n        var swiper = this;\r\n        Utils.extend(swiper, {\r\n            autoplay: {\r\n                running: false,\r\n                paused: false,\r\n                run: Autoplay.run.bind(swiper),\r\n                start: Autoplay.start.bind(swiper),\r\n                stop: Autoplay.stop.bind(swiper),\r\n                pause: Autoplay.pause.bind(swiper),\r\n                onTransitionEnd: function (e) {\r\n                    if (!swiper || swiper.destroyed || !swiper.$wrapperEl)\r\n                        return;\r\n                    if (e.target !== this)\r\n                        return;\r\n                    swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\r\n                    swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\r\n                    swiper.autoplay.paused = false;\r\n                    if (!swiper.autoplay.running) {\r\n                        swiper.autoplay.stop();\r\n                    }\r\n                    else {\r\n                        swiper.autoplay.run();\r\n                    }\r\n                },\r\n            },\r\n        });\r\n    },\r\n    on: {\r\n        init: function () {\r\n            var swiper = this;\r\n            if (swiper.params.autoplay.enabled) {\r\n                swiper.autoplay.start();\r\n            }\r\n        },\r\n        beforeTransitionStart: function (speed, internal) {\r\n            var swiper = this;\r\n            if (swiper.autoplay.running) {\r\n                if (internal || !swiper.params.autoplay.disableOnInteraction) {\r\n                    swiper.autoplay.pause(speed);\r\n                }\r\n                else {\r\n                    swiper.autoplay.stop();\r\n                }\r\n            }\r\n        },\r\n        sliderFirstMove: function () {\r\n            var swiper = this;\r\n            if (swiper.autoplay.running) {\r\n                if (swiper.params.autoplay.disableOnInteraction) {\r\n                    swiper.autoplay.stop();\r\n                }\r\n                else {\r\n                    swiper.autoplay.pause();\r\n                }\r\n            }\r\n        },\r\n        destroy: function () {\r\n            var swiper = this;\r\n            if (swiper.autoplay.running) {\r\n                swiper.autoplay.stop();\r\n            }\r\n        },\r\n    },\r\n};\r\n// Swiper Class\r\nvar components = [\r\n    Device$1,\r\n    Support$1,\r\n    Browser$1,\r\n    Resize,\r\n    Observer$1,\r\n];\r\nif (typeof Swiper.use === 'undefined') {\r\n    Swiper.use = Swiper.Class.use;\r\n    Swiper.installModule = Swiper.Class.installModule;\r\n}\r\nSwiper.use(components);\r\nSwiper.use([pagination, scrollbar, autoplay, zoom]);\r\nexport { Swiper };\r\n"],"sourceRoot":""}